{
  "components": {
    "schemas": {
      "APIKeyV1ResponseBody": {
        "example": {
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "name": "My test API key"
        },
        "properties": {
          "id": {
            "description": "Unique identifier for this API key",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "name": {
            "description": "The name of the API key, for the user's reference",
            "example": "My test API key",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name"
        ],
        "title": "APIKeyV1ResponseBody",
        "type": "object"
      },
      "APIKeyV2ResponseBody": {
        "example": {
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "name": "My test API key"
        },
        "properties": {
          "id": {
            "description": "Unique identifier for this API key",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "name": {
            "description": "The name of the API key, for the user's reference",
            "example": "My test API key",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name"
        ],
        "title": "APIKeyV2ResponseBody",
        "type": "object"
      },
      "ActionV1ResponseBody": {
        "example": {
          "assignee": {
            "email": "lisa@incident.io",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "name": "Lisa Karlin Curtis",
            "role": "viewer",
            "slack_user_id": "U02AYNF2XJM"
          },
          "completed_at": "2021-08-17T13:28:57.801578Z",
          "created_at": "2021-08-17T13:28:57.801578Z",
          "description": "Call the fire brigade",
          "external_issue_reference": {
            "issue_name": "INC-123",
            "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
            "provider": "asana"
          },
          "follow_up": true,
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "incident_id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "status": "outstanding",
          "updated_at": "2021-08-17T13:28:57.801578Z"
        },
        "properties": {
          "assignee": {
            "$ref": "#/components/schemas/UserV1ResponseBody"
          },
          "completed_at": {
            "description": "When the action was completed",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "created_at": {
            "description": "When the action was created",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "description": {
            "description": "Description of the action",
            "example": "Call the fire brigade",
            "type": "string"
          },
          "external_issue_reference": {
            "$ref": "#/components/schemas/ExternalIssueReferenceV1ResponseBody"
          },
          "follow_up": {
            "description": "Whether an action is marked as follow-up",
            "example": true,
            "type": "boolean"
          },
          "id": {
            "description": "Unique identifier for the action",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "incident_id": {
            "description": "Unique identifier of the incident the action belongs to",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "status": {
            "description": "Status of the action",
            "enum": [
              "outstanding",
              "completed",
              "deleted",
              "not_doing"
            ],
            "example": "outstanding",
            "type": "string"
          },
          "updated_at": {
            "description": "When the action was last updated",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "created_at",
          "follow_up",
          "id",
          "incident_id",
          "status",
          "updated_at"
        ],
        "title": "ActionV1ResponseBody",
        "type": "object"
      },
      "ActionV2ResponseBody": {
        "example": {
          "assignee": {
            "email": "lisa@incident.io",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "name": "Lisa Karlin Curtis",
            "role": "viewer",
            "slack_user_id": "U02AYNF2XJM"
          },
          "completed_at": "2021-08-17T13:28:57.801578Z",
          "created_at": "2021-08-17T13:28:57.801578Z",
          "description": "Call the fire brigade",
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "incident_id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "status": "outstanding",
          "updated_at": "2021-08-17T13:28:57.801578Z"
        },
        "properties": {
          "assignee": {
            "$ref": "#/components/schemas/UserV2ResponseBody"
          },
          "completed_at": {
            "description": "When the action was completed",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "created_at": {
            "description": "When the action was created",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "description": {
            "description": "Description of the action",
            "example": "Call the fire brigade",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the action",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "incident_id": {
            "description": "Unique identifier of the incident the action belongs to",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "status": {
            "description": "Status of the action",
            "enum": [
              "outstanding",
              "completed",
              "deleted",
              "not_doing"
            ],
            "example": "outstanding",
            "type": "string"
          },
          "updated_at": {
            "description": "When the action was last updated",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "created_at",
          "description",
          "id",
          "incident_id",
          "status",
          "updated_at"
        ],
        "title": "ActionV2ResponseBody",
        "type": "object"
      },
      "ActionsV1ListResponseBody": {
        "example": {
          "actions": [
            {
              "assignee": {
                "email": "lisa@incident.io",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Lisa Karlin Curtis",
                "role": "viewer",
                "slack_user_id": "U02AYNF2XJM"
              },
              "completed_at": "2021-08-17T13:28:57.801578Z",
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Call the fire brigade",
              "external_issue_reference": {
                "issue_name": "INC-123",
                "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
                "provider": "asana"
              },
              "follow_up": true,
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "incident_id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "status": "outstanding",
              "updated_at": "2021-08-17T13:28:57.801578Z"
            }
          ]
        },
        "properties": {
          "actions": {
            "example": [
              {
                "assignee": {
                  "email": "lisa@incident.io",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Lisa Karlin Curtis",
                  "role": "viewer",
                  "slack_user_id": "U02AYNF2XJM"
                },
                "completed_at": "2021-08-17T13:28:57.801578Z",
                "created_at": "2021-08-17T13:28:57.801578Z",
                "description": "Call the fire brigade",
                "external_issue_reference": {
                  "issue_name": "INC-123",
                  "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
                  "provider": "asana"
                },
                "follow_up": true,
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "incident_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "status": "outstanding",
                "updated_at": "2021-08-17T13:28:57.801578Z"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/ActionV1ResponseBody"
            },
            "type": "array"
          }
        },
        "required": [
          "actions"
        ],
        "title": "ActionsV1ListResponseBody",
        "type": "object"
      },
      "ActionsV1ShowResponseBody": {
        "example": {
          "action": {
            "assignee": {
              "email": "lisa@incident.io",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Lisa Karlin Curtis",
              "role": "viewer",
              "slack_user_id": "U02AYNF2XJM"
            },
            "completed_at": "2021-08-17T13:28:57.801578Z",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Call the fire brigade",
            "external_issue_reference": {
              "issue_name": "INC-123",
              "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
              "provider": "asana"
            },
            "follow_up": true,
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "incident_id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "status": "outstanding",
            "updated_at": "2021-08-17T13:28:57.801578Z"
          }
        },
        "properties": {
          "action": {
            "$ref": "#/components/schemas/ActionV1ResponseBody"
          }
        },
        "required": [
          "action"
        ],
        "title": "ActionsV1ShowResponseBody",
        "type": "object"
      },
      "ActionsV2ListResponseBody": {
        "example": {
          "actions": [
            {
              "assignee": {
                "email": "lisa@incident.io",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Lisa Karlin Curtis",
                "role": "viewer",
                "slack_user_id": "U02AYNF2XJM"
              },
              "completed_at": "2021-08-17T13:28:57.801578Z",
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Call the fire brigade",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "incident_id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "status": "outstanding",
              "updated_at": "2021-08-17T13:28:57.801578Z"
            }
          ]
        },
        "properties": {
          "actions": {
            "example": [
              {
                "assignee": {
                  "email": "lisa@incident.io",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Lisa Karlin Curtis",
                  "role": "viewer",
                  "slack_user_id": "U02AYNF2XJM"
                },
                "completed_at": "2021-08-17T13:28:57.801578Z",
                "created_at": "2021-08-17T13:28:57.801578Z",
                "description": "Call the fire brigade",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "incident_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "status": "outstanding",
                "updated_at": "2021-08-17T13:28:57.801578Z"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/ActionV2ResponseBody"
            },
            "type": "array"
          }
        },
        "required": [
          "actions"
        ],
        "title": "ActionsV2ListResponseBody",
        "type": "object"
      },
      "ActionsV2ShowResponseBody": {
        "example": {
          "action": {
            "assignee": {
              "email": "lisa@incident.io",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Lisa Karlin Curtis",
              "role": "viewer",
              "slack_user_id": "U02AYNF2XJM"
            },
            "completed_at": "2021-08-17T13:28:57.801578Z",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Call the fire brigade",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "incident_id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "status": "outstanding",
            "updated_at": "2021-08-17T13:28:57.801578Z"
          }
        },
        "properties": {
          "action": {
            "$ref": "#/components/schemas/ActionV2ResponseBody"
          }
        },
        "required": [
          "action"
        ],
        "title": "ActionsV2ShowResponseBody",
        "type": "object"
      },
      "ActorV1ResponseBody": {
        "example": {
          "api_key": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "name": "My test API key"
          },
          "user": {
            "email": "lisa@incident.io",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "name": "Lisa Karlin Curtis",
            "role": "viewer",
            "slack_user_id": "U02AYNF2XJM"
          }
        },
        "properties": {
          "api_key": {
            "$ref": "#/components/schemas/APIKeyV1ResponseBody"
          },
          "user": {
            "$ref": "#/components/schemas/UserV1ResponseBody"
          }
        },
        "title": "ActorV1ResponseBody",
        "type": "object"
      },
      "ActorV2ResponseBody": {
        "example": {
          "api_key": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "name": "My test API key"
          },
          "user": {
            "email": "lisa@incident.io",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "name": "Lisa Karlin Curtis",
            "role": "viewer",
            "slack_user_id": "U02AYNF2XJM"
          }
        },
        "properties": {
          "api_key": {
            "$ref": "#/components/schemas/APIKeyV2ResponseBody"
          },
          "user": {
            "$ref": "#/components/schemas/UserV2ResponseBody"
          }
        },
        "title": "ActorV2ResponseBody",
        "type": "object"
      },
      "AuditLogActorMetadataV2ResponseBody": {
        "example": {
          "api_key_roles": "abc123",
          "external_resource_external_id": "q1234",
          "external_resource_type": "pager_duty_incident",
          "user_base_role_slug": "admin",
          "user_custom_role_slugs": "engineering,security"
        },
        "properties": {
          "api_key_roles": {
            "description": "The roles that the API key has, separated by commas (if it's an API key actor)",
            "example": "abc123",
            "type": "string"
          },
          "external_resource_external_id": {
            "description": "The ID of the external resource in the 3rd party system (if it's an external resource actor)",
            "example": "q1234",
            "type": "string"
          },
          "external_resource_type": {
            "description": "The type of the external resource (if it's an external resource actor)",
            "example": "pager_duty_incident",
            "type": "string"
          },
          "user_base_role_slug": {
            "description": "The base role slug of the user (if it's a user actor)",
            "example": "admin",
            "type": "string"
          },
          "user_custom_role_slugs": {
            "description": "The custom role slugs of the user, separated by commas (if it's a user actor)",
            "example": "engineering,security",
            "type": "string"
          }
        },
        "title": "AuditLogActorMetadataV2ResponseBody",
        "type": "object"
      },
      "AuditLogActorV2ResponseBody": {
        "example": {
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "metadata": {
            "user_base_role_slug": "admin",
            "user_custom_role_slugs": "engineering,security"
          },
          "name": "John Doe",
          "type": "user"
        },
        "properties": {
          "id": {
            "description": "The ID of the actor",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "metadata": {
            "$ref": "#/components/schemas/AuditLogActorMetadataV2ResponseBody"
          },
          "name": {
            "description": "The name of the actor",
            "example": "John Doe",
            "type": "string"
          },
          "type": {
            "description": "The type of actor",
            "enum": [
              "user",
              "system",
              "api_key",
              "workflow",
              "external_resource"
            ],
            "example": "user",
            "type": "string"
          }
        },
        "required": [
          "id",
          "type"
        ],
        "title": "AuditLogActorV2ResponseBody",
        "type": "object"
      },
      "AuditLogEntryContextV2ResponseBody": {
        "example": {
          "location": "1.2.3.4",
          "user_agent": "Chrome/91.0.4472.114"
        },
        "properties": {
          "location": {
            "description": "The location of the actor that performed this action",
            "example": "1.2.3.4",
            "type": "string"
          },
          "user_agent": {
            "description": "The user agent of the actor that performed this action",
            "example": "Chrome/91.0.4472.114",
            "type": "string"
          }
        },
        "required": [
          "location"
        ],
        "title": "AuditLogEntryContextV2ResponseBody",
        "type": "object"
      },
      "AuditLogPrivateIncidentAccessAttemptedMetadataV2ResponseBody": {
        "example": {
          "outcome": "granted"
        },
        "properties": {
          "outcome": {
            "description": "Whether or not the user was able to access the private incident",
            "enum": [
              "granted",
              "denied"
            ],
            "example": "granted",
            "type": "string"
          }
        },
        "title": "AuditLogPrivateIncidentAccessAttemptedMetadataV2ResponseBody",
        "type": "object"
      },
      "AuditLogTargetV2ResponseBody": {
        "example": {
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "name": "John Doe",
          "type": "user"
        },
        "properties": {
          "id": {
            "description": "The ID of the target",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "name": {
            "description": "The name of the target",
            "example": "John Doe",
            "type": "string"
          },
          "type": {
            "description": "The type of target",
            "enum": [
              "announcement_rule",
              "api_key",
              "catalog_type",
              "custom_field",
              "follow_up_priority",
              "incident",
              "incident_duration_metric",
              "incident_role",
              "incident_status",
              "incident_timestamp",
              "incident_type",
              "integration",
              "internal_status_page",
              "policy",
              "private_incident_membership",
              "rbac_role",
              "scim_group",
              "severity",
              "status_page",
              "status_page_template",
              "user",
              "workflow"
            ],
            "example": "user",
            "type": "string"
          }
        },
        "required": [
          "id",
          "type"
        ],
        "title": "AuditLogTargetV2ResponseBody",
        "type": "object"
      },
      "AuditLogUserRoleMembershipChangedMetadataV2ResponseBody": {
        "example": {
          "after_base_role_slug": "owner",
          "after_custom_role_slugs": "engineering,data",
          "before_base_role_slug": "admin",
          "before_custom_role_slugs": "engineering,security"
        },
        "properties": {
          "after_base_role_slug": {
            "description": "The base role slug of the user after their role memberships changed",
            "example": "owner",
            "type": "string"
          },
          "after_custom_role_slugs": {
            "description": "The custom role slugs of the user after their role memberships changed, separated by commas",
            "example": "engineering,data",
            "type": "string"
          },
          "before_base_role_slug": {
            "description": "The base role slug of the user before their role memberships changed",
            "example": "admin",
            "type": "string"
          },
          "before_custom_role_slugs": {
            "description": "The custom role slugs of the user before their role memberships changed, separated by commas",
            "example": "engineering,security",
            "type": "string"
          }
        },
        "required": [
          "after_base_role_slug",
          "after_custom_role_slugs",
          "before_base_role_slug",
          "before_custom_role_slugs"
        ],
        "title": "AuditLogUserRoleMembershipChangedMetadataV2ResponseBody",
        "type": "object"
      },
      "AuditLogUserSCIMGroupMappingChangedMetadataV2ResponseBody": {
        "example": {
          "after_base_role_slug": "owner",
          "after_custom_role_slugs": "engineering,data",
          "before_base_role_slug": "admin",
          "before_custom_role_slugs": "engineering,security"
        },
        "properties": {
          "after_base_role_slug": {
            "description": "The base role slug of this SCIM group after the mapping was changed (if any)",
            "example": "owner",
            "type": "string"
          },
          "after_custom_role_slugs": {
            "description": "The custom role slugs of this SCIM group after the mapping was changed (if any), separated by commas",
            "example": "engineering,data",
            "type": "string"
          },
          "before_base_role_slug": {
            "description": "The base role slug assigned to this SCIM group before the mapping was changed (if any)",
            "example": "admin",
            "type": "string"
          },
          "before_custom_role_slugs": {
            "description": "The custom role slugs of this SCIM group before the mapping was changed (if any), separated by commas",
            "example": "engineering,security",
            "type": "string"
          }
        },
        "title": "AuditLogUserSCIMGroupMappingChangedMetadataV2ResponseBody",
        "type": "object"
      },
      "AuditLogsAPIKeyCreatedV1ResponseBody": {
        "example": {
          "action": "api_key.created",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Development API Key",
              "type": "api_key"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "api_key.created",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2ResponseBody"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2ResponseBody"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Development API Key",
                "type": "api_key"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2ResponseBody"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "actor",
          "context",
          "occurred_at",
          "targets",
          "version"
        ],
        "title": "AuditLogsAPIKeyCreatedV1ResponseBody",
        "type": "object"
      },
      "AuditLogsAPIKeyDeletedV1ResponseBody": {
        "example": {
          "action": "api_key.deleted",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Development API Key",
              "type": "api_key"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "api_key.deleted",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2ResponseBody"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2ResponseBody"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Development API Key",
                "type": "api_key"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2ResponseBody"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "actor",
          "context",
          "occurred_at",
          "targets",
          "version"
        ],
        "title": "AuditLogsAPIKeyDeletedV1ResponseBody",
        "type": "object"
      },
      "AuditLogsAnnouncementRuleCreatedV1ResponseBody": {
        "example": {
          "action": "announcement_rule.created",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "#engineering",
              "type": "announcement_rule"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "announcement_rule.created",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2ResponseBody"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2ResponseBody"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "#engineering",
                "type": "announcement_rule"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2ResponseBody"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "actor",
          "context",
          "occurred_at",
          "targets",
          "version"
        ],
        "title": "AuditLogsAnnouncementRuleCreatedV1ResponseBody",
        "type": "object"
      },
      "AuditLogsAnnouncementRuleDeletedV1ResponseBody": {
        "example": {
          "action": "announcement_rule.deleted",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "#engineering",
              "type": "announcement_rule"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "announcement_rule.deleted",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2ResponseBody"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2ResponseBody"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "#engineering",
                "type": "announcement_rule"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2ResponseBody"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "actor",
          "context",
          "occurred_at",
          "targets",
          "version"
        ],
        "title": "AuditLogsAnnouncementRuleDeletedV1ResponseBody",
        "type": "object"
      },
      "AuditLogsAnnouncementRuleUpdatedV1ResponseBody": {
        "example": {
          "action": "announcement_rule.updated",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "#engineering",
              "type": "announcement_rule"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "announcement_rule.updated",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2ResponseBody"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2ResponseBody"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "#engineering",
                "type": "announcement_rule"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2ResponseBody"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "actor",
          "context",
          "occurred_at",
          "targets",
          "version"
        ],
        "title": "AuditLogsAnnouncementRuleUpdatedV1ResponseBody",
        "type": "object"
      },
      "AuditLogsCatalogTypeCreatedV1ResponseBody": {
        "example": {
          "action": "catalog_type.created",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Service",
              "type": "catalog_type"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "catalog_type.created",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2ResponseBody"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2ResponseBody"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Service",
                "type": "catalog_type"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2ResponseBody"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "actor",
          "context",
          "occurred_at",
          "targets",
          "version"
        ],
        "title": "AuditLogsCatalogTypeCreatedV1ResponseBody",
        "type": "object"
      },
      "AuditLogsCatalogTypeDeletedV1ResponseBody": {
        "example": {
          "action": "catalog_type.deleted",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Service",
              "type": "catalog_type"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "catalog_type.deleted",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2ResponseBody"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2ResponseBody"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Service",
                "type": "catalog_type"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2ResponseBody"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "actor",
          "context",
          "occurred_at",
          "targets",
          "version"
        ],
        "title": "AuditLogsCatalogTypeDeletedV1ResponseBody",
        "type": "object"
      },
      "AuditLogsCatalogTypeUpdatedV1ResponseBody": {
        "example": {
          "action": "catalog_type.updated",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Service",
              "type": "catalog_type"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "catalog_type.updated",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2ResponseBody"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2ResponseBody"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Service",
                "type": "catalog_type"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2ResponseBody"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "actor",
          "context",
          "occurred_at",
          "targets",
          "version"
        ],
        "title": "AuditLogsCatalogTypeUpdatedV1ResponseBody",
        "type": "object"
      },
      "AuditLogsCustomFieldCreatedV1ResponseBody": {
        "example": {
          "action": "custom_field.created",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Affected teams",
              "type": "custom_field"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "custom_field.created",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2ResponseBody"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2ResponseBody"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Affected teams",
                "type": "custom_field"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2ResponseBody"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "actor",
          "context",
          "occurred_at",
          "targets",
          "version"
        ],
        "title": "AuditLogsCustomFieldCreatedV1ResponseBody",
        "type": "object"
      },
      "AuditLogsCustomFieldDeletedV1ResponseBody": {
        "example": {
          "action": "custom_field.deleted",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Affected teams",
              "type": "custom_field"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "custom_field.deleted",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2ResponseBody"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2ResponseBody"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Affected teams",
                "type": "custom_field"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2ResponseBody"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "actor",
          "context",
          "occurred_at",
          "targets",
          "version"
        ],
        "title": "AuditLogsCustomFieldDeletedV1ResponseBody",
        "type": "object"
      },
      "AuditLogsCustomFieldUpdatedV1ResponseBody": {
        "example": {
          "action": "custom_field.updated",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Affected teams",
              "type": "custom_field"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "custom_field.updated",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2ResponseBody"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2ResponseBody"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Affected teams",
                "type": "custom_field"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2ResponseBody"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "actor",
          "context",
          "occurred_at",
          "targets",
          "version"
        ],
        "title": "AuditLogsCustomFieldUpdatedV1ResponseBody",
        "type": "object"
      },
      "AuditLogsFollowUpPriorityCreatedV1ResponseBody": {
        "example": {
          "action": "follow_up_priority.created",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Low",
              "type": "follow_up_priority"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "follow_up_priority.created",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2ResponseBody"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2ResponseBody"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Low",
                "type": "follow_up_priority"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2ResponseBody"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "actor",
          "context",
          "occurred_at",
          "targets",
          "version"
        ],
        "title": "AuditLogsFollowUpPriorityCreatedV1ResponseBody",
        "type": "object"
      },
      "AuditLogsFollowUpPriorityDeletedV1ResponseBody": {
        "example": {
          "action": "follow_up_priority.deleted",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Low",
              "type": "follow_up_priority"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "follow_up_priority.deleted",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2ResponseBody"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2ResponseBody"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Low",
                "type": "follow_up_priority"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2ResponseBody"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "actor",
          "context",
          "occurred_at",
          "targets",
          "version"
        ],
        "title": "AuditLogsFollowUpPriorityDeletedV1ResponseBody",
        "type": "object"
      },
      "AuditLogsFollowUpPriorityUpdatedV1ResponseBody": {
        "example": {
          "action": "follow_up_priority.updated",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Low",
              "type": "follow_up_priority"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "follow_up_priority.updated",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2ResponseBody"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2ResponseBody"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Low",
                "type": "follow_up_priority"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2ResponseBody"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "actor",
          "context",
          "occurred_at",
          "targets",
          "version"
        ],
        "title": "AuditLogsFollowUpPriorityUpdatedV1ResponseBody",
        "type": "object"
      },
      "AuditLogsIncidentDurationMetricCreatedV1ResponseBody": {
        "example": {
          "action": "incident_duration_metric.created",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Time to resolve",
              "type": "incident_duration_metric"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "incident_duration_metric.created",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2ResponseBody"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2ResponseBody"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Time to resolve",
                "type": "incident_duration_metric"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2ResponseBody"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "actor",
          "context",
          "occurred_at",
          "targets",
          "version"
        ],
        "title": "AuditLogsIncidentDurationMetricCreatedV1ResponseBody",
        "type": "object"
      },
      "AuditLogsIncidentDurationMetricDeletedV1ResponseBody": {
        "example": {
          "action": "incident_duration_metric.deleted",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Time to resolve",
              "type": "incident_duration_metric"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "incident_duration_metric.deleted",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2ResponseBody"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2ResponseBody"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Time to resolve",
                "type": "incident_duration_metric"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2ResponseBody"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "actor",
          "context",
          "occurred_at",
          "targets",
          "version"
        ],
        "title": "AuditLogsIncidentDurationMetricDeletedV1ResponseBody",
        "type": "object"
      },
      "AuditLogsIncidentDurationMetricUpdatedV1ResponseBody": {
        "example": {
          "action": "incident_duration_metric.updated",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Time to resolve",
              "type": "incident_duration_metric"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "incident_duration_metric.updated",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2ResponseBody"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2ResponseBody"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Time to resolve",
                "type": "incident_duration_metric"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2ResponseBody"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "actor",
          "context",
          "occurred_at",
          "targets",
          "version"
        ],
        "title": "AuditLogsIncidentDurationMetricUpdatedV1ResponseBody",
        "type": "object"
      },
      "AuditLogsIncidentRoleCreatedV1ResponseBody": {
        "example": {
          "action": "incident_role.created",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Communications Lead",
              "type": "incident_role"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "incident_role.created",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2ResponseBody"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2ResponseBody"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Communications Lead",
                "type": "incident_role"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2ResponseBody"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "actor",
          "context",
          "occurred_at",
          "targets",
          "version"
        ],
        "title": "AuditLogsIncidentRoleCreatedV1ResponseBody",
        "type": "object"
      },
      "AuditLogsIncidentRoleDeletedV1ResponseBody": {
        "example": {
          "action": "incident_role.deleted",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Communications Lead",
              "type": "incident_role"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "incident_role.deleted",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2ResponseBody"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2ResponseBody"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Communications Lead",
                "type": "incident_role"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2ResponseBody"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "actor",
          "context",
          "occurred_at",
          "targets",
          "version"
        ],
        "title": "AuditLogsIncidentRoleDeletedV1ResponseBody",
        "type": "object"
      },
      "AuditLogsIncidentRoleUpdatedV1ResponseBody": {
        "example": {
          "action": "incident_role.updated",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Communications Lead",
              "type": "incident_role"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "incident_role.updated",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2ResponseBody"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2ResponseBody"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Communications Lead",
                "type": "incident_role"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2ResponseBody"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "actor",
          "context",
          "occurred_at",
          "targets",
          "version"
        ],
        "title": "AuditLogsIncidentRoleUpdatedV1ResponseBody",
        "type": "object"
      },
      "AuditLogsIncidentStatusCreatedV1ResponseBody": {
        "example": {
          "action": "incident_status.created",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Investigating",
              "type": "incident_status"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "incident_status.created",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2ResponseBody"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2ResponseBody"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Investigating",
                "type": "incident_status"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2ResponseBody"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "actor",
          "context",
          "occurred_at",
          "targets",
          "version"
        ],
        "title": "AuditLogsIncidentStatusCreatedV1ResponseBody",
        "type": "object"
      },
      "AuditLogsIncidentStatusDeletedV1ResponseBody": {
        "example": {
          "action": "incident_status.deleted",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Investigating",
              "type": "incident_status"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "incident_status.deleted",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2ResponseBody"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2ResponseBody"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Investigating",
                "type": "incident_status"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2ResponseBody"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "actor",
          "context",
          "occurred_at",
          "targets",
          "version"
        ],
        "title": "AuditLogsIncidentStatusDeletedV1ResponseBody",
        "type": "object"
      },
      "AuditLogsIncidentStatusUpdatedV1ResponseBody": {
        "example": {
          "action": "incident_status.updated",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Investigating",
              "type": "incident_status"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "incident_status.updated",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2ResponseBody"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2ResponseBody"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Investigating",
                "type": "incident_status"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2ResponseBody"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "actor",
          "context",
          "occurred_at",
          "targets",
          "version"
        ],
        "title": "AuditLogsIncidentStatusUpdatedV1ResponseBody",
        "type": "object"
      },
      "AuditLogsIncidentTimestampCreatedV1ResponseBody": {
        "example": {
          "action": "incident_timestamp.created",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Fixed at",
              "type": "incident_timestamp"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "incident_timestamp.created",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2ResponseBody"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2ResponseBody"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Fixed at",
                "type": "incident_timestamp"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2ResponseBody"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "actor",
          "context",
          "occurred_at",
          "targets",
          "version"
        ],
        "title": "AuditLogsIncidentTimestampCreatedV1ResponseBody",
        "type": "object"
      },
      "AuditLogsIncidentTimestampDeletedV1ResponseBody": {
        "example": {
          "action": "incident_timestamp.deleted",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Fixed at",
              "type": "incident_timestamp"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "incident_timestamp.deleted",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2ResponseBody"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2ResponseBody"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Fixed at",
                "type": "incident_timestamp"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2ResponseBody"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "actor",
          "context",
          "occurred_at",
          "targets",
          "version"
        ],
        "title": "AuditLogsIncidentTimestampDeletedV1ResponseBody",
        "type": "object"
      },
      "AuditLogsIncidentTimestampUpdatedV1ResponseBody": {
        "example": {
          "action": "incident_timestamp.updated",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Fixed at",
              "type": "incident_timestamp"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "incident_timestamp.updated",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2ResponseBody"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2ResponseBody"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Fixed at",
                "type": "incident_timestamp"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2ResponseBody"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "actor",
          "context",
          "occurred_at",
          "targets",
          "version"
        ],
        "title": "AuditLogsIncidentTimestampUpdatedV1ResponseBody",
        "type": "object"
      },
      "AuditLogsIncidentTypeCreatedV1ResponseBody": {
        "example": {
          "action": "incident_type.created",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Security",
              "type": "incident_type"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "incident_type.created",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2ResponseBody"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2ResponseBody"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Security",
                "type": "incident_type"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2ResponseBody"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "actor",
          "context",
          "occurred_at",
          "targets",
          "version"
        ],
        "title": "AuditLogsIncidentTypeCreatedV1ResponseBody",
        "type": "object"
      },
      "AuditLogsIncidentTypeDeletedV1ResponseBody": {
        "example": {
          "action": "incident_type.deleted",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Security",
              "type": "incident_type"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "incident_type.deleted",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2ResponseBody"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2ResponseBody"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Security",
                "type": "incident_type"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2ResponseBody"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "actor",
          "context",
          "occurred_at",
          "targets",
          "version"
        ],
        "title": "AuditLogsIncidentTypeDeletedV1ResponseBody",
        "type": "object"
      },
      "AuditLogsIncidentTypeUpdatedV1ResponseBody": {
        "example": {
          "action": "incident_type.updated",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Security",
              "type": "incident_type"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "incident_type.updated",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2ResponseBody"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2ResponseBody"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Security",
                "type": "incident_type"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2ResponseBody"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "actor",
          "context",
          "occurred_at",
          "targets",
          "version"
        ],
        "title": "AuditLogsIncidentTypeUpdatedV1ResponseBody",
        "type": "object"
      },
      "AuditLogsIntegrationInstalledV1ResponseBody": {
        "example": {
          "action": "integration.installed",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "github",
              "name": "Github",
              "type": "integration"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "integration.installed",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2ResponseBody"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2ResponseBody"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "github",
                "name": "Github",
                "type": "integration"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2ResponseBody"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "actor",
          "context",
          "occurred_at",
          "targets",
          "version"
        ],
        "title": "AuditLogsIntegrationInstalledV1ResponseBody",
        "type": "object"
      },
      "AuditLogsIntegrationUninstalledV1ResponseBody": {
        "example": {
          "action": "integration.uninstalled",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "github",
              "name": "Github",
              "type": "integration"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "integration.uninstalled",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2ResponseBody"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2ResponseBody"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "github",
                "name": "Github",
                "type": "integration"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2ResponseBody"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "actor",
          "context",
          "occurred_at",
          "targets",
          "version"
        ],
        "title": "AuditLogsIntegrationUninstalledV1ResponseBody",
        "type": "object"
      },
      "AuditLogsInternalStatusPageCreatedV1ResponseBody": {
        "example": {
          "action": "internal_status_page.created",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Public Page",
              "type": "internal_status_page"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "internal_status_page.created",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2ResponseBody"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2ResponseBody"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Public Page",
                "type": "internal_status_page"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2ResponseBody"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "actor",
          "context",
          "occurred_at",
          "targets",
          "version"
        ],
        "title": "AuditLogsInternalStatusPageCreatedV1ResponseBody",
        "type": "object"
      },
      "AuditLogsInternalStatusPageDeletedV1ResponseBody": {
        "example": {
          "action": "internal_status_page.deleted",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Public Page",
              "type": "internal_status_page"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "internal_status_page.deleted",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2ResponseBody"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2ResponseBody"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Public Page",
                "type": "internal_status_page"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2ResponseBody"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "actor",
          "context",
          "occurred_at",
          "targets",
          "version"
        ],
        "title": "AuditLogsInternalStatusPageDeletedV1ResponseBody",
        "type": "object"
      },
      "AuditLogsInternalStatusPageUpdatedV1ResponseBody": {
        "example": {
          "action": "internal_status_page.updated",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Public Page",
              "type": "internal_status_page"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "internal_status_page.updated",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2ResponseBody"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2ResponseBody"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Public Page",
                "type": "internal_status_page"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2ResponseBody"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "actor",
          "context",
          "occurred_at",
          "targets",
          "version"
        ],
        "title": "AuditLogsInternalStatusPageUpdatedV1ResponseBody",
        "type": "object"
      },
      "AuditLogsLearningTaskCreatedV1ResponseBody": {
        "example": {
          "action": "learning_task.created",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Schedule a debrief",
              "type": "learning_task"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "learning_task.created",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2ResponseBody"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2ResponseBody"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Schedule a debrief",
                "type": "learning_task"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2ResponseBody"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "actor",
          "context",
          "occurred_at",
          "targets",
          "version"
        ],
        "title": "AuditLogsLearningTaskCreatedV1ResponseBody",
        "type": "object"
      },
      "AuditLogsLearningTaskDeletedV1ResponseBody": {
        "example": {
          "action": "learning_task.deleted",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Schedule a debrief",
              "type": "learning_task"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "learning_task.deleted",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2ResponseBody"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2ResponseBody"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Schedule a debrief",
                "type": "learning_task"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2ResponseBody"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "actor",
          "context",
          "occurred_at",
          "targets",
          "version"
        ],
        "title": "AuditLogsLearningTaskDeletedV1ResponseBody",
        "type": "object"
      },
      "AuditLogsLearningTaskUpdatedV1ResponseBody": {
        "example": {
          "action": "learning_task.updated",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Schedule a debrief",
              "type": "learning_task"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "learning_task.updated",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2ResponseBody"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2ResponseBody"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Schedule a debrief",
                "type": "learning_task"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2ResponseBody"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "actor",
          "context",
          "occurred_at",
          "targets",
          "version"
        ],
        "title": "AuditLogsLearningTaskUpdatedV1ResponseBody",
        "type": "object"
      },
      "AuditLogsPolicyCreatedV1ResponseBody": {
        "example": {
          "action": "policy.created",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Follow-ups must be closed within 3 weeks",
              "type": "policy"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "policy.created",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2ResponseBody"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2ResponseBody"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Follow-ups must be closed within 3 weeks",
                "type": "policy"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2ResponseBody"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "actor",
          "context",
          "occurred_at",
          "targets",
          "version"
        ],
        "title": "AuditLogsPolicyCreatedV1ResponseBody",
        "type": "object"
      },
      "AuditLogsPolicyDeletedV1ResponseBody": {
        "example": {
          "action": "policy.deleted",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Follow-ups must be closed within 3 weeks",
              "type": "policy"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "policy.deleted",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2ResponseBody"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2ResponseBody"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Follow-ups must be closed within 3 weeks",
                "type": "policy"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2ResponseBody"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "actor",
          "context",
          "occurred_at",
          "targets",
          "version"
        ],
        "title": "AuditLogsPolicyDeletedV1ResponseBody",
        "type": "object"
      },
      "AuditLogsPolicyUpdatedV1ResponseBody": {
        "example": {
          "action": "policy.updated",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Follow-ups must be closed within 3 weeks",
              "type": "policy"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "policy.updated",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2ResponseBody"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2ResponseBody"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Follow-ups must be closed within 3 weeks",
                "type": "policy"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2ResponseBody"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "actor",
          "context",
          "occurred_at",
          "targets",
          "version"
        ],
        "title": "AuditLogsPolicyUpdatedV1ResponseBody",
        "type": "object"
      },
      "AuditLogsPrivateIncidentAccessAttemptedV1ResponseBody": {
        "example": {
          "action": "private_incident.access_attempted",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "metadata": {
            "outcome": "granted"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "#INC-123 The website is slow",
              "type": "incident"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "private_incident.access_attempted",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2ResponseBody"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2ResponseBody"
          },
          "metadata": {
            "$ref": "#/components/schemas/AuditLogPrivateIncidentAccessAttemptedMetadataV2ResponseBody"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "#INC-123 The website is slow",
                "type": "incident"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2ResponseBody"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "actor",
          "context",
          "metadata",
          "occurred_at",
          "targets",
          "version"
        ],
        "title": "AuditLogsPrivateIncidentAccessAttemptedV1ResponseBody",
        "type": "object"
      },
      "AuditLogsPrivateIncidentAccessRequestedV1ResponseBody": {
        "example": {
          "action": "private_incident.access_requested",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "#INC-123 The website is slow",
              "type": "incident"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "private_incident.access_requested",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2ResponseBody"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2ResponseBody"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "#INC-123 The website is slow",
                "type": "incident"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2ResponseBody"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "actor",
          "context",
          "occurred_at",
          "targets",
          "version"
        ],
        "title": "AuditLogsPrivateIncidentAccessRequestedV1ResponseBody",
        "type": "object"
      },
      "AuditLogsPrivateIncidentMembershipGrantedV1ResponseBody": {
        "example": {
          "action": "private_incident_membership.granted",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Bob the builder",
              "type": "user"
            },
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "#INC-123 The website is slow",
              "type": "incident"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "private_incident_membership.granted",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2ResponseBody"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2ResponseBody"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Bob the builder",
                "type": "user"
              },
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "#INC-123 The website is slow",
                "type": "incident"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2ResponseBody"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "actor",
          "context",
          "occurred_at",
          "targets",
          "version"
        ],
        "title": "AuditLogsPrivateIncidentMembershipGrantedV1ResponseBody",
        "type": "object"
      },
      "AuditLogsPrivateIncidentMembershipRevokedV1ResponseBody": {
        "example": {
          "action": "private_incident_membership.revoked",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Bob the builder",
              "type": "user"
            },
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "#INC-123 The website is slow",
              "type": "incident"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "private_incident_membership.revoked",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2ResponseBody"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2ResponseBody"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Bob the builder",
                "type": "user"
              },
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "#INC-123 The website is slow",
                "type": "incident"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2ResponseBody"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "actor",
          "context",
          "occurred_at",
          "targets",
          "version"
        ],
        "title": "AuditLogsPrivateIncidentMembershipRevokedV1ResponseBody",
        "type": "object"
      },
      "AuditLogsRbacRoleCreatedV1ResponseBody": {
        "example": {
          "action": "rbac_role.created",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Engineering",
              "type": "rbac_role"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "rbac_role.created",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2ResponseBody"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2ResponseBody"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Engineering",
                "type": "rbac_role"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2ResponseBody"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "actor",
          "context",
          "occurred_at",
          "targets",
          "version"
        ],
        "title": "AuditLogsRbacRoleCreatedV1ResponseBody",
        "type": "object"
      },
      "AuditLogsRbacRoleDeletedV1ResponseBody": {
        "example": {
          "action": "rbac_role.deleted",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Engineering",
              "type": "rbac_role"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "rbac_role.deleted",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2ResponseBody"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2ResponseBody"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Engineering",
                "type": "rbac_role"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2ResponseBody"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "actor",
          "context",
          "occurred_at",
          "targets",
          "version"
        ],
        "title": "AuditLogsRbacRoleDeletedV1ResponseBody",
        "type": "object"
      },
      "AuditLogsRbacRoleUpdatedV1ResponseBody": {
        "example": {
          "action": "rbac_role.updated",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Engineering",
              "type": "rbac_role"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "rbac_role.updated",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2ResponseBody"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2ResponseBody"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Engineering",
                "type": "rbac_role"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2ResponseBody"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "actor",
          "context",
          "occurred_at",
          "targets",
          "version"
        ],
        "title": "AuditLogsRbacRoleUpdatedV1ResponseBody",
        "type": "object"
      },
      "AuditLogsScimGroupRoleMappingsUpdatedV1ResponseBody": {
        "example": {
          "action": "scim_group.role_mappings_updated",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "metadata": {
            "after_base_role_slug": "owner",
            "after_custom_role_slugs": "engineering,data",
            "before_base_role_slug": "admin",
            "before_custom_role_slugs": "engineering,security"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Security",
              "type": "scim_group"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "scim_group.role_mappings_updated",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2ResponseBody"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2ResponseBody"
          },
          "metadata": {
            "$ref": "#/components/schemas/AuditLogUserSCIMGroupMappingChangedMetadataV2ResponseBody"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Security",
                "type": "scim_group"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2ResponseBody"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "actor",
          "context",
          "metadata",
          "occurred_at",
          "targets",
          "version"
        ],
        "title": "AuditLogsScimGroupRoleMappingsUpdatedV1ResponseBody",
        "type": "object"
      },
      "AuditLogsSeverityCreatedV1ResponseBody": {
        "example": {
          "action": "severity.created",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Minor",
              "type": "severity"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "severity.created",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2ResponseBody"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2ResponseBody"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Minor",
                "type": "severity"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2ResponseBody"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "actor",
          "context",
          "occurred_at",
          "targets",
          "version"
        ],
        "title": "AuditLogsSeverityCreatedV1ResponseBody",
        "type": "object"
      },
      "AuditLogsSeverityDeletedV1ResponseBody": {
        "example": {
          "action": "severity.deleted",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Minor",
              "type": "severity"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "severity.deleted",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2ResponseBody"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2ResponseBody"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Minor",
                "type": "severity"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2ResponseBody"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "actor",
          "context",
          "occurred_at",
          "targets",
          "version"
        ],
        "title": "AuditLogsSeverityDeletedV1ResponseBody",
        "type": "object"
      },
      "AuditLogsSeverityUpdatedV1ResponseBody": {
        "example": {
          "action": "severity.updated",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Minor",
              "type": "severity"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "severity.updated",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2ResponseBody"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2ResponseBody"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Minor",
                "type": "severity"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2ResponseBody"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "actor",
          "context",
          "occurred_at",
          "targets",
          "version"
        ],
        "title": "AuditLogsSeverityUpdatedV1ResponseBody",
        "type": "object"
      },
      "AuditLogsStatusPageCreatedV1ResponseBody": {
        "example": {
          "action": "status_page.created",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Public Page",
              "type": "status_page"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "status_page.created",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2ResponseBody"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2ResponseBody"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Public Page",
                "type": "status_page"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2ResponseBody"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "actor",
          "context",
          "occurred_at",
          "targets",
          "version"
        ],
        "title": "AuditLogsStatusPageCreatedV1ResponseBody",
        "type": "object"
      },
      "AuditLogsStatusPageDeletedV1ResponseBody": {
        "example": {
          "action": "status_page.deleted",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Public Page",
              "type": "status_page"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "status_page.deleted",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2ResponseBody"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2ResponseBody"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Public Page",
                "type": "status_page"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2ResponseBody"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "actor",
          "context",
          "occurred_at",
          "targets",
          "version"
        ],
        "title": "AuditLogsStatusPageDeletedV1ResponseBody",
        "type": "object"
      },
      "AuditLogsStatusPageTemplateCreatedV1ResponseBody": {
        "example": {
          "action": "status_page_template.created",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Investigating",
              "type": "status_page_template"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "status_page_template.created",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2ResponseBody"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2ResponseBody"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Investigating",
                "type": "status_page_template"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2ResponseBody"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "actor",
          "context",
          "occurred_at",
          "targets",
          "version"
        ],
        "title": "AuditLogsStatusPageTemplateCreatedV1ResponseBody",
        "type": "object"
      },
      "AuditLogsStatusPageTemplateDeletedV1ResponseBody": {
        "example": {
          "action": "status_page_template.deleted",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Investigating",
              "type": "status_page_template"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "status_page_template.deleted",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2ResponseBody"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2ResponseBody"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Investigating",
                "type": "status_page_template"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2ResponseBody"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "actor",
          "context",
          "occurred_at",
          "targets",
          "version"
        ],
        "title": "AuditLogsStatusPageTemplateDeletedV1ResponseBody",
        "type": "object"
      },
      "AuditLogsStatusPageTemplateUpdatedV1ResponseBody": {
        "example": {
          "action": "status_page_template.updated",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Investigating",
              "type": "status_page_template"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "status_page_template.updated",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2ResponseBody"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2ResponseBody"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Investigating",
                "type": "status_page_template"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2ResponseBody"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "actor",
          "context",
          "occurred_at",
          "targets",
          "version"
        ],
        "title": "AuditLogsStatusPageTemplateUpdatedV1ResponseBody",
        "type": "object"
      },
      "AuditLogsStatusPageUpdatedV1ResponseBody": {
        "example": {
          "action": "status_page.updated",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Public Page",
              "type": "status_page"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "status_page.updated",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2ResponseBody"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2ResponseBody"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Public Page",
                "type": "status_page"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2ResponseBody"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "actor",
          "context",
          "occurred_at",
          "targets",
          "version"
        ],
        "title": "AuditLogsStatusPageUpdatedV1ResponseBody",
        "type": "object"
      },
      "AuditLogsUserCreatedV1ResponseBody": {
        "example": {
          "action": "user.created",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Bob the builder",
              "type": "user"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "user.created",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2ResponseBody"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2ResponseBody"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Bob the builder",
                "type": "user"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2ResponseBody"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "actor",
          "context",
          "occurred_at",
          "targets",
          "version"
        ],
        "title": "AuditLogsUserCreatedV1ResponseBody",
        "type": "object"
      },
      "AuditLogsUserDeactivatedV1ResponseBody": {
        "example": {
          "action": "user.deactivated",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Bob the builder",
              "type": "user"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "user.deactivated",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2ResponseBody"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2ResponseBody"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Bob the builder",
                "type": "user"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2ResponseBody"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "actor",
          "context",
          "occurred_at",
          "targets",
          "version"
        ],
        "title": "AuditLogsUserDeactivatedV1ResponseBody",
        "type": "object"
      },
      "AuditLogsUserReinstatedV1ResponseBody": {
        "example": {
          "action": "user.reinstated",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Bob the builder",
              "type": "user"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "user.reinstated",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2ResponseBody"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2ResponseBody"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Bob the builder",
                "type": "user"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2ResponseBody"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "actor",
          "context",
          "occurred_at",
          "targets",
          "version"
        ],
        "title": "AuditLogsUserReinstatedV1ResponseBody",
        "type": "object"
      },
      "AuditLogsUserRoleMembershipsUpdatedV1ResponseBody": {
        "example": {
          "action": "user.role_memberships_updated",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "metadata": {
            "after_base_role_slug": "owner",
            "after_custom_role_slugs": "engineering,data",
            "before_base_role_slug": "admin",
            "before_custom_role_slugs": "engineering,security"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Bob the builder",
              "type": "user"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "user.role_memberships_updated",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2ResponseBody"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2ResponseBody"
          },
          "metadata": {
            "$ref": "#/components/schemas/AuditLogUserRoleMembershipChangedMetadataV2ResponseBody"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Bob the builder",
                "type": "user"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2ResponseBody"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "actor",
          "context",
          "metadata",
          "occurred_at",
          "targets",
          "version"
        ],
        "title": "AuditLogsUserRoleMembershipsUpdatedV1ResponseBody",
        "type": "object"
      },
      "AuditLogsUserUpdatedV1ResponseBody": {
        "example": {
          "action": "user.updated",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Bob the builder",
              "type": "user"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "user.updated",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2ResponseBody"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2ResponseBody"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Bob the builder",
                "type": "user"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2ResponseBody"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "actor",
          "context",
          "occurred_at",
          "targets",
          "version"
        ],
        "title": "AuditLogsUserUpdatedV1ResponseBody",
        "type": "object"
      },
      "AuditLogsWorkflowCreatedV1ResponseBody": {
        "example": {
          "action": "workflow.created",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Nudge to write a postmortem",
              "type": "workflow"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "workflow.created",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2ResponseBody"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2ResponseBody"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Nudge to write a postmortem",
                "type": "workflow"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2ResponseBody"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "actor",
          "context",
          "occurred_at",
          "targets",
          "version"
        ],
        "title": "AuditLogsWorkflowCreatedV1ResponseBody",
        "type": "object"
      },
      "AuditLogsWorkflowDeletedV1ResponseBody": {
        "example": {
          "action": "workflow.deleted",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Nudge to write a postmortem",
              "type": "workflow"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "workflow.deleted",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2ResponseBody"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2ResponseBody"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Nudge to write a postmortem",
                "type": "workflow"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2ResponseBody"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "actor",
          "context",
          "occurred_at",
          "targets",
          "version"
        ],
        "title": "AuditLogsWorkflowDeletedV1ResponseBody",
        "type": "object"
      },
      "AuditLogsWorkflowUpdatedV1ResponseBody": {
        "example": {
          "action": "workflow.updated",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Nudge to write a postmortem",
              "type": "workflow"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "workflow.updated",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2ResponseBody"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2ResponseBody"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Nudge to write a postmortem",
                "type": "workflow"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2ResponseBody"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "actor",
          "context",
          "occurred_at",
          "targets",
          "version"
        ],
        "title": "AuditLogsWorkflowUpdatedV1ResponseBody",
        "type": "object"
      },
      "CatalogAttributeBindingPayloadV2RequestBody": {
        "example": {
          "array_value": [
            {
              "literal": "SEV123"
            }
          ],
          "value": {
            "literal": "SEV123"
          }
        },
        "properties": {
          "array_value": {
            "description": "If set, this is the array value of the attribute",
            "example": [
              {
                "literal": "SEV123"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/CatalogAttributeValuePayloadV2RequestBody"
            },
            "type": "array"
          },
          "value": {
            "$ref": "#/components/schemas/CatalogAttributeValuePayloadV2RequestBody"
          }
        },
        "title": "CatalogAttributeBindingPayloadV2RequestBody",
        "type": "object"
      },
      "CatalogAttributeBindingV2ResponseBody": {
        "example": {
          "array_value": [
            {
              "catalog_entry": {
                "catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "catalog_entry_name": "Primary escalation",
                "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0"
              },
              "image_url": "https://avatars.slack-edge.com/2021-08-09/2372763167857_6f65d94928b0a0ac590b_192.jpg",
              "is_image_slack_icon": false,
              "label": "Lawrence Jones",
              "literal": "SEV123",
              "sort_key": "000020"
            }
          ],
          "value": {
            "catalog_entry": {
              "catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "catalog_entry_name": "Primary escalation",
              "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0"
            },
            "image_url": "https://avatars.slack-edge.com/2021-08-09/2372763167857_6f65d94928b0a0ac590b_192.jpg",
            "is_image_slack_icon": false,
            "label": "Lawrence Jones",
            "literal": "SEV123",
            "sort_key": "000020"
          }
        },
        "properties": {
          "array_value": {
            "description": "If array_value is set, this helps render the values",
            "example": [
              {
                "catalog_entry": {
                  "catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "catalog_entry_name": "Primary escalation",
                  "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                },
                "image_url": "https://avatars.slack-edge.com/2021-08-09/2372763167857_6f65d94928b0a0ac590b_192.jpg",
                "is_image_slack_icon": false,
                "label": "Lawrence Jones",
                "literal": "SEV123",
                "sort_key": "000020"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/CatalogAttributeValueV2ResponseBody"
            },
            "type": "array"
          },
          "value": {
            "$ref": "#/components/schemas/CatalogAttributeValueV2ResponseBody"
          }
        },
        "title": "CatalogAttributeBindingV2ResponseBody",
        "type": "object"
      },
      "CatalogAttributeValuePayloadV2RequestBody": {
        "example": {
          "literal": "SEV123"
        },
        "properties": {
          "literal": {
            "description": "The literal value of this attribute",
            "example": "SEV123",
            "type": "string"
          }
        },
        "title": "CatalogAttributeValuePayloadV2RequestBody",
        "type": "object"
      },
      "CatalogAttributeValueV2ResponseBody": {
        "example": {
          "catalog_entry": {
            "catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "catalog_entry_name": "Primary escalation",
            "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0"
          },
          "image_url": "https://avatars.slack-edge.com/2021-08-09/2372763167857_6f65d94928b0a0ac590b_192.jpg",
          "is_image_slack_icon": false,
          "label": "Lawrence Jones",
          "literal": "SEV123",
          "sort_key": "000020"
        },
        "properties": {
          "catalog_entry": {
            "$ref": "#/components/schemas/CatalogEntryReferenceV2ResponseBody"
          },
          "image_url": {
            "description": "If appropriate, URL to an image that can be displayed alongside the option",
            "example": "https://avatars.slack-edge.com/2021-08-09/2372763167857_6f65d94928b0a0ac590b_192.jpg",
            "type": "string"
          },
          "is_image_slack_icon": {
            "description": "If true, the image_url is a Slack icon and should be displayed as such",
            "example": false,
            "type": "boolean"
          },
          "label": {
            "description": "Human readable label to be displayed for user to select",
            "example": "Lawrence Jones",
            "type": "string"
          },
          "literal": {
            "description": "If set, this is the literal value of the step parameter",
            "example": "SEV123",
            "type": "string"
          },
          "sort_key": {
            "description": "Gives an indication of how to sort the options when displayed to the user",
            "example": "000020",
            "type": "string"
          }
        },
        "required": [
          "label",
          "sort_key"
        ],
        "title": "CatalogAttributeValueV2ResponseBody",
        "type": "object"
      },
      "CatalogEntryReferenceV2ResponseBody": {
        "example": {
          "catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "catalog_entry_name": "Primary escalation",
          "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0"
        },
        "properties": {
          "catalog_entry_id": {
            "description": "ID of this catalog entry",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "catalog_entry_name": {
            "description": "The name of this entry",
            "example": "Primary escalation",
            "type": "string"
          },
          "catalog_type_id": {
            "description": "ID of this catalog type",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          }
        },
        "required": [
          "catalog_entry_id",
          "catalog_entry_name",
          "catalog_type_id"
        ],
        "title": "CatalogEntryReferenceV2ResponseBody",
        "type": "object"
      },
      "CatalogEntryV2ResponseBody": {
        "example": {
          "aliases": [
            "lawrence@incident.io",
            "lawrence"
          ],
          "archived_at": "2021-08-17T14:28:57.801578Z",
          "attribute_values": {
            "abc123": {
              "array_value": [
                {
                  "catalog_entry": {
                    "catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "catalog_entry_name": "Primary escalation",
                    "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                  },
                  "image_url": "https://avatars.slack-edge.com/2021-08-09/2372763167857_6f65d94928b0a0ac590b_192.jpg",
                  "is_image_slack_icon": false,
                  "label": "Lawrence Jones",
                  "literal": "SEV123",
                  "sort_key": "000020"
                }
              ],
              "value": {
                "catalog_entry": {
                  "catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "catalog_entry_name": "Primary escalation",
                  "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                },
                "image_url": "https://avatars.slack-edge.com/2021-08-09/2372763167857_6f65d94928b0a0ac590b_192.jpg",
                "is_image_slack_icon": false,
                "label": "Lawrence Jones",
                "literal": "SEV123",
                "sort_key": "000020"
              }
            }
          },
          "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "created_at": "2021-08-17T13:28:57.801578Z",
          "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "name": "Primary On-call",
          "rank": 3,
          "updated_at": "2021-08-17T13:28:57.801578Z"
        },
        "properties": {
          "aliases": {
            "description": "Optional aliases that can be used to reference this entry",
            "example": [
              "lawrence@incident.io",
              "lawrence"
            ],
            "items": {
              "example": "abc123",
              "type": "string"
            },
            "type": "array"
          },
          "archived_at": {
            "description": "When this entry was archived",
            "example": "2021-08-17T14:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "attribute_values": {
            "additionalProperties": {
              "$ref": "#/components/schemas/CatalogAttributeBindingV2ResponseBody"
            },
            "description": "Values of this entry",
            "example": {
              "abc123": {
                "array_value": [
                  {
                    "catalog_entry": {
                      "catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "catalog_entry_name": "Primary escalation",
                      "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                    },
                    "image_url": "https://avatars.slack-edge.com/2021-08-09/2372763167857_6f65d94928b0a0ac590b_192.jpg",
                    "is_image_slack_icon": false,
                    "label": "Lawrence Jones",
                    "literal": "SEV123",
                    "sort_key": "000020"
                  }
                ],
                "value": {
                  "catalog_entry": {
                    "catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "catalog_entry_name": "Primary escalation",
                    "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                  },
                  "image_url": "https://avatars.slack-edge.com/2021-08-09/2372763167857_6f65d94928b0a0ac590b_192.jpg",
                  "is_image_slack_icon": false,
                  "label": "Lawrence Jones",
                  "literal": "SEV123",
                  "sort_key": "000020"
                }
              }
            },
            "type": "object"
          },
          "catalog_type_id": {
            "description": "ID of this catalog type",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "created_at": {
            "description": "When this entry was created",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "external_id": {
            "description": "An optional alternative ID for this entry, which is ensured to be unique for the type",
            "example": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
            "type": "string"
          },
          "id": {
            "description": "ID of this catalog entry",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "name": {
            "description": "Name is the human readable name of this entry",
            "example": "Primary On-call",
            "type": "string"
          },
          "rank": {
            "description": "When catalog type is ranked, this is used to help order things",
            "example": 3,
            "format": "int32",
            "type": "integer"
          },
          "updated_at": {
            "description": "When this entry was last updated",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "aliases",
          "attribute_values",
          "catalog_type_id",
          "created_at",
          "id",
          "name",
          "rank",
          "updated_at"
        ],
        "title": "CatalogEntryV2ResponseBody",
        "type": "object"
      },
      "CatalogResourceV2ResponseBody": {
        "example": {
          "category": "custom",
          "description": "Boolean true or false value",
          "label": "GitHub Repository",
          "type": "CatalogEntry[\"01GVGYJSD39FRKVDWACK9NDS4E\"]",
          "value_docstring": "Either the GraphQL node ID of the repository or a string of <owner>/<repo>, e.g. incident-io/website"
        },
        "properties": {
          "category": {
            "description": "Which category of resource",
            "enum": [
              "primitive",
              "custom",
              "external"
            ],
            "example": "custom",
            "type": "string"
          },
          "description": {
            "description": "Human readable description for this resource",
            "example": "Boolean true or false value",
            "type": "string"
          },
          "label": {
            "description": "Label for this catalog resource type",
            "example": "GitHub Repository",
            "type": "string"
          },
          "type": {
            "description": "Catalog type name for this resource",
            "example": "CatalogEntry[\"01GVGYJSD39FRKVDWACK9NDS4E\"]",
            "type": "string"
          },
          "value_docstring": {
            "description": "Documentation for the literal string value of this resource",
            "example": "Either the GraphQL node ID of the repository or a string of <owner>/<repo>, e.g. incident-io/website",
            "type": "string"
          }
        },
        "required": [
          "category",
          "description",
          "label",
          "type",
          "value_docstring"
        ],
        "title": "CatalogResourceV2ResponseBody",
        "type": "object"
      },
      "CatalogTypeAttributePayloadV2RequestBody": {
        "example": {
          "array": false,
          "id": "01GW2G3V0S59R238FAHPDS1R66",
          "mode": "manual",
          "name": "tier",
          "type": "Custom[\"Service\"]"
        },
        "properties": {
          "array": {
            "description": "Whether this attribute is an array",
            "example": false,
            "type": "boolean"
          },
          "id": {
            "description": "The ID of this attribute",
            "example": "01GW2G3V0S59R238FAHPDS1R66",
            "type": "string"
          },
          "mode": {
            "description": "Controls how this attribute is modified",
            "enum": [
              "",
              "manual",
              "external"
            ],
            "example": "manual",
            "type": "string"
          },
          "name": {
            "description": "Unique name of this attribute",
            "example": "tier",
            "type": "string"
          },
          "type": {
            "description": "Catalog type name for this attribute",
            "example": "Custom[\"Service\"]",
            "type": "string"
          }
        },
        "required": [
          "array",
          "name",
          "type"
        ],
        "title": "CatalogTypeAttributePayloadV2RequestBody",
        "type": "object"
      },
      "CatalogTypeAttributeV2ResponseBody": {
        "example": {
          "array": false,
          "id": "01GW2G3V0S59R238FAHPDS1R66",
          "mode": "manual",
          "name": "tier",
          "type": "Custom[\"Service\"]"
        },
        "properties": {
          "array": {
            "description": "Whether this attribute is an array",
            "example": false,
            "type": "boolean"
          },
          "id": {
            "description": "The ID of this attribute",
            "example": "01GW2G3V0S59R238FAHPDS1R66",
            "type": "string"
          },
          "mode": {
            "description": "Controls how this attribute is modified",
            "enum": [
              "",
              "manual",
              "external"
            ],
            "example": "manual",
            "type": "string"
          },
          "name": {
            "description": "Unique name of this attribute",
            "example": "tier",
            "type": "string"
          },
          "type": {
            "description": "Catalog type name for this attribute",
            "example": "Custom[\"Service\"]",
            "type": "string"
          }
        },
        "required": [
          "array",
          "id",
          "mode",
          "name",
          "type"
        ],
        "title": "CatalogTypeAttributeV2ResponseBody",
        "type": "object"
      },
      "CatalogTypeSchemaV2ResponseBody": {
        "example": {
          "attributes": [
            {
              "array": false,
              "id": "01GW2G3V0S59R238FAHPDS1R66",
              "mode": "manual",
              "name": "tier",
              "type": "Custom[\"Service\"]"
            }
          ],
          "version": 1
        },
        "properties": {
          "attributes": {
            "description": "Attributes of this catalog type",
            "example": [
              {
                "array": false,
                "id": "01GW2G3V0S59R238FAHPDS1R66",
                "mode": "manual",
                "name": "tier",
                "type": "Custom[\"Service\"]"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/CatalogTypeAttributeV2ResponseBody"
            },
            "type": "array"
          },
          "version": {
            "description": "The version number of this schema",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "attributes",
          "version"
        ],
        "title": "CatalogTypeSchemaV2ResponseBody",
        "type": "object"
      },
      "CatalogTypeV2ResponseBody": {
        "example": {
          "annotations": {
            "incident.io/catalog-importer/id": "id-of-config"
          },
          "color": "slate",
          "created_at": "2021-08-17T13:28:57.801578Z",
          "description": "Represents Kubernetes clusters that we run inside of GKE.",
          "estimated_count": 7,
          "external_type": "PagerDutyService",
          "icon": "bolt",
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "is_editable": false,
          "name": "Kubernetes Cluster",
          "ranked": true,
          "required_integrations": [
            "pager_duty"
          ],
          "schema": {
            "attributes": [
              {
                "array": false,
                "id": "01GW2G3V0S59R238FAHPDS1R66",
                "mode": "manual",
                "name": "tier",
                "type": "Custom[\"Service\"]"
              }
            ],
            "version": 1
          },
          "semantic_type": "custom",
          "type_name": "Custom[\"BackstageGroup\"]",
          "updated_at": "2021-08-17T13:28:57.801578Z"
        },
        "properties": {
          "annotations": {
            "additionalProperties": {
              "example": "abc123",
              "type": "string"
            },
            "description": "Annotations that can track metadata about this type",
            "example": {
              "incident.io/catalog-importer/id": "id-of-config"
            },
            "type": "object"
          },
          "color": {
            "description": "Sets the display color of this type in the dashboard",
            "enum": [
              "slate",
              "red",
              "yellow",
              "green",
              "blue",
              "violet"
            ],
            "example": "slate",
            "type": "string"
          },
          "created_at": {
            "description": "When this type was created",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "description": {
            "description": "Human readble description of this type",
            "example": "Represents Kubernetes clusters that we run inside of GKE.",
            "type": "string"
          },
          "estimated_count": {
            "description": "If populated, gives an estimated count of entries for this type",
            "example": 7,
            "format": "int64",
            "type": "integer"
          },
          "external_type": {
            "description": "The external resource this type is synced from, if any",
            "example": "PagerDutyService",
            "type": "string"
          },
          "icon": {
            "description": "Sets the display icon of this type in the dashboard",
            "enum": [
              "bolt",
              "box",
              "briefcase",
              "browser",
              "bulb",
              "clock",
              "cog",
              "database",
              "doc",
              "email",
              "server",
              "severity",
              "star",
              "tag",
              "user",
              "users"
            ],
            "example": "bolt",
            "type": "string"
          },
          "id": {
            "description": "ID of this catalog type",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "is_editable": {
            "description": "Catalog types that are synced with external resources can't be edited",
            "example": false,
            "type": "boolean"
          },
          "name": {
            "description": "Name is the human readable name of this type",
            "example": "Kubernetes Cluster",
            "type": "string"
          },
          "ranked": {
            "description": "If this type should be ranked",
            "example": true,
            "type": "boolean"
          },
          "required_integrations": {
            "description": "If populated, the integrations required for this type",
            "example": [
              "pager_duty"
            ],
            "items": {
              "example": "abc123",
              "type": "string"
            },
            "type": "array"
          },
          "schema": {
            "$ref": "#/components/schemas/CatalogTypeSchemaV2ResponseBody"
          },
          "semantic_type": {
            "description": "Semantic type of this resource",
            "example": "custom",
            "type": "string"
          },
          "type_name": {
            "description": "The type name of this catalog type, to be used when defining attributes. This is immutable once a CatalogType has been created. For non-externally sync types, it must follow the pattern Custom[\"SomeName \"]",
            "example": "Custom[\"BackstageGroup\"]",
            "type": "string"
          },
          "updated_at": {
            "description": "When this type was last updated",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "annotations",
          "color",
          "created_at",
          "description",
          "icon",
          "id",
          "is_editable",
          "name",
          "ranked",
          "schema",
          "semantic_type",
          "type_name",
          "updated_at"
        ],
        "title": "CatalogTypeV2ResponseBody",
        "type": "object"
      },
      "CatalogV2CreateEntryRequestBody": {
        "example": {
          "aliases": [
            "lawrence@incident.io",
            "lawrence"
          ],
          "attribute_values": {
            "abc123": {
              "array_value": [
                {
                  "literal": "SEV123"
                }
              ],
              "value": {
                "literal": "SEV123"
              }
            }
          },
          "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
          "name": "Primary On-call",
          "rank": 3
        },
        "properties": {
          "aliases": {
            "description": "Optional aliases that can be used to reference this entry",
            "example": [
              "lawrence@incident.io",
              "lawrence"
            ],
            "items": {
              "example": "abc123",
              "type": "string"
            },
            "type": "array"
          },
          "attribute_values": {
            "additionalProperties": {
              "$ref": "#/components/schemas/CatalogAttributeBindingPayloadV2RequestBody"
            },
            "description": "Values of this entry",
            "example": {
              "abc123": {
                "array_value": [
                  {
                    "literal": "SEV123"
                  }
                ],
                "value": {
                  "literal": "SEV123"
                }
              }
            },
            "type": "object"
          },
          "catalog_type_id": {
            "description": "ID of this catalog type",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "external_id": {
            "description": "An optional alternative ID for this entry, which is ensured to be unique for the type",
            "example": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
            "type": "string"
          },
          "name": {
            "description": "Name is the human readable name of this entry",
            "example": "Primary On-call",
            "type": "string"
          },
          "rank": {
            "description": "When catalog type is ranked, this is used to help order things",
            "example": 3,
            "format": "int32",
            "type": "integer"
          }
        },
        "required": [
          "attribute_values",
          "catalog_type_id",
          "name"
        ],
        "title": "CatalogV2CreateEntryRequestBody",
        "type": "object"
      },
      "CatalogV2CreateEntryResponseBody": {
        "example": {
          "catalog_entry": {
            "aliases": [
              "lawrence@incident.io",
              "lawrence"
            ],
            "archived_at": "2021-08-17T14:28:57.801578Z",
            "attribute_values": {
              "abc123": {
                "array_value": [
                  {
                    "catalog_entry": {
                      "catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "catalog_entry_name": "Primary escalation",
                      "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                    },
                    "image_url": "https://avatars.slack-edge.com/2021-08-09/2372763167857_6f65d94928b0a0ac590b_192.jpg",
                    "is_image_slack_icon": false,
                    "label": "Lawrence Jones",
                    "literal": "SEV123",
                    "sort_key": "000020"
                  }
                ],
                "value": {
                  "catalog_entry": {
                    "catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "catalog_entry_name": "Primary escalation",
                    "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                  },
                  "image_url": "https://avatars.slack-edge.com/2021-08-09/2372763167857_6f65d94928b0a0ac590b_192.jpg",
                  "is_image_slack_icon": false,
                  "label": "Lawrence Jones",
                  "literal": "SEV123",
                  "sort_key": "000020"
                }
              }
            },
            "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "name": "Primary On-call",
            "rank": 3,
            "updated_at": "2021-08-17T13:28:57.801578Z"
          }
        },
        "properties": {
          "catalog_entry": {
            "$ref": "#/components/schemas/CatalogEntryV2ResponseBody"
          }
        },
        "required": [
          "catalog_entry"
        ],
        "title": "CatalogV2CreateEntryResponseBody",
        "type": "object"
      },
      "CatalogV2CreateTypeRequestBody": {
        "example": {
          "annotations": {
            "incident.io/catalog-importer/id": "id-of-config"
          },
          "color": "slate",
          "description": "Represents Kubernetes clusters that we run inside of GKE.",
          "icon": "bolt",
          "name": "Kubernetes Cluster",
          "ranked": true,
          "semantic_type": "custom",
          "type_name": "Custom[\"BackstageGroup\"]"
        },
        "properties": {
          "annotations": {
            "additionalProperties": {
              "example": "abc123",
              "type": "string"
            },
            "description": "Annotations that can track metadata about this type",
            "example": {
              "incident.io/catalog-importer/id": "id-of-config"
            },
            "type": "object"
          },
          "color": {
            "description": "Sets the display color of this type in the dashboard",
            "enum": [
              "slate",
              "red",
              "yellow",
              "green",
              "blue",
              "violet"
            ],
            "example": "slate",
            "type": "string"
          },
          "description": {
            "description": "Human readble description of this type",
            "example": "Represents Kubernetes clusters that we run inside of GKE.",
            "type": "string"
          },
          "icon": {
            "description": "Sets the display icon of this type in the dashboard",
            "enum": [
              "bolt",
              "box",
              "briefcase",
              "browser",
              "bulb",
              "clock",
              "cog",
              "database",
              "doc",
              "email",
              "server",
              "severity",
              "star",
              "tag",
              "user",
              "users"
            ],
            "example": "bolt",
            "type": "string"
          },
          "name": {
            "description": "Name is the human readable name of this type",
            "example": "Kubernetes Cluster",
            "type": "string"
          },
          "ranked": {
            "description": "If this type should be ranked",
            "example": true,
            "type": "boolean"
          },
          "semantic_type": {
            "description": "Semantic type of this resource",
            "example": "custom",
            "type": "string"
          },
          "type_name": {
            "description": "The type name of this catalog type, to be used when defining attributes. This is immutable once a CatalogType has been created. For non-externally sync types, it must follow the pattern Custom[\"SomeName \"]",
            "example": "Custom[\"BackstageGroup\"]",
            "type": "string"
          }
        },
        "required": [
          "description",
          "name"
        ],
        "title": "CatalogV2CreateTypeRequestBody",
        "type": "object"
      },
      "CatalogV2CreateTypeResponseBody": {
        "example": {
          "catalog_type": {
            "annotations": {
              "incident.io/catalog-importer/id": "id-of-config"
            },
            "color": "slate",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Represents Kubernetes clusters that we run inside of GKE.",
            "estimated_count": 7,
            "external_type": "PagerDutyService",
            "icon": "bolt",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "is_editable": false,
            "name": "Kubernetes Cluster",
            "ranked": true,
            "required_integrations": [
              "pager_duty"
            ],
            "schema": {
              "attributes": [
                {
                  "array": false,
                  "id": "01GW2G3V0S59R238FAHPDS1R66",
                  "mode": "manual",
                  "name": "tier",
                  "type": "Custom[\"Service\"]"
                }
              ],
              "version": 1
            },
            "semantic_type": "custom",
            "type_name": "Custom[\"BackstageGroup\"]",
            "updated_at": "2021-08-17T13:28:57.801578Z"
          }
        },
        "properties": {
          "catalog_type": {
            "$ref": "#/components/schemas/CatalogTypeV2ResponseBody"
          }
        },
        "required": [
          "catalog_type"
        ],
        "title": "CatalogV2CreateTypeResponseBody",
        "type": "object"
      },
      "CatalogV2ListEntriesResponseBody": {
        "example": {
          "catalog_entries": [
            {
              "aliases": [
                "lawrence@incident.io",
                "lawrence"
              ],
              "archived_at": "2021-08-17T14:28:57.801578Z",
              "attribute_values": {
                "abc123": {
                  "array_value": [
                    {
                      "catalog_entry": {
                        "catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "catalog_entry_name": "Primary escalation",
                        "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                      },
                      "image_url": "https://avatars.slack-edge.com/2021-08-09/2372763167857_6f65d94928b0a0ac590b_192.jpg",
                      "is_image_slack_icon": false,
                      "label": "Lawrence Jones",
                      "literal": "SEV123",
                      "sort_key": "000020"
                    }
                  ],
                  "value": {
                    "catalog_entry": {
                      "catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "catalog_entry_name": "Primary escalation",
                      "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                    },
                    "image_url": "https://avatars.slack-edge.com/2021-08-09/2372763167857_6f65d94928b0a0ac590b_192.jpg",
                    "is_image_slack_icon": false,
                    "label": "Lawrence Jones",
                    "literal": "SEV123",
                    "sort_key": "000020"
                  }
                }
              },
              "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "created_at": "2021-08-17T13:28:57.801578Z",
              "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Primary On-call",
              "rank": 3,
              "updated_at": "2021-08-17T13:28:57.801578Z"
            }
          ],
          "catalog_type": {
            "annotations": {
              "incident.io/catalog-importer/id": "id-of-config"
            },
            "color": "slate",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Represents Kubernetes clusters that we run inside of GKE.",
            "estimated_count": 7,
            "external_type": "PagerDutyService",
            "icon": "bolt",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "is_editable": false,
            "name": "Kubernetes Cluster",
            "ranked": true,
            "required_integrations": [
              "pager_duty"
            ],
            "schema": {
              "attributes": [
                {
                  "array": false,
                  "id": "01GW2G3V0S59R238FAHPDS1R66",
                  "mode": "manual",
                  "name": "tier",
                  "type": "Custom[\"Service\"]"
                }
              ],
              "version": 1
            },
            "semantic_type": "custom",
            "type_name": "Custom[\"BackstageGroup\"]",
            "updated_at": "2021-08-17T13:28:57.801578Z"
          },
          "pagination_meta": {
            "after": "01FCNDV6P870EA6S7TK1DSYDG0",
            "page_size": 25
          }
        },
        "properties": {
          "catalog_entries": {
            "example": [
              {
                "aliases": [
                  "lawrence@incident.io",
                  "lawrence"
                ],
                "archived_at": "2021-08-17T14:28:57.801578Z",
                "attribute_values": {
                  "abc123": {
                    "array_value": [
                      {
                        "catalog_entry": {
                          "catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "catalog_entry_name": "Primary escalation",
                          "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                        },
                        "image_url": "https://avatars.slack-edge.com/2021-08-09/2372763167857_6f65d94928b0a0ac590b_192.jpg",
                        "is_image_slack_icon": false,
                        "label": "Lawrence Jones",
                        "literal": "SEV123",
                        "sort_key": "000020"
                      }
                    ],
                    "value": {
                      "catalog_entry": {
                        "catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "catalog_entry_name": "Primary escalation",
                        "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                      },
                      "image_url": "https://avatars.slack-edge.com/2021-08-09/2372763167857_6f65d94928b0a0ac590b_192.jpg",
                      "is_image_slack_icon": false,
                      "label": "Lawrence Jones",
                      "literal": "SEV123",
                      "sort_key": "000020"
                    }
                  }
                },
                "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "created_at": "2021-08-17T13:28:57.801578Z",
                "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Primary On-call",
                "rank": 3,
                "updated_at": "2021-08-17T13:28:57.801578Z"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/CatalogEntryV2ResponseBody"
            },
            "type": "array"
          },
          "catalog_type": {
            "$ref": "#/components/schemas/CatalogTypeV2ResponseBody"
          },
          "pagination_meta": {
            "$ref": "#/components/schemas/PaginationMetaResultResponseBody"
          }
        },
        "required": [
          "catalog_entries",
          "catalog_type",
          "pagination_meta"
        ],
        "title": "CatalogV2ListEntriesResponseBody",
        "type": "object"
      },
      "CatalogV2ListResourcesResponseBody": {
        "example": {
          "resources": [
            {
              "category": "custom",
              "description": "Boolean true or false value",
              "label": "GitHub Repository",
              "type": "CatalogEntry[\"01GVGYJSD39FRKVDWACK9NDS4E\"]",
              "value_docstring": "Either the GraphQL node ID of the repository or a string of <owner>/<repo>, e.g. incident-io/website"
            }
          ]
        },
        "properties": {
          "resources": {
            "example": [
              {
                "category": "custom",
                "description": "Boolean true or false value",
                "label": "GitHub Repository",
                "type": "CatalogEntry[\"01GVGYJSD39FRKVDWACK9NDS4E\"]",
                "value_docstring": "Either the GraphQL node ID of the repository or a string of <owner>/<repo>, e.g. incident-io/website"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/CatalogResourceV2ResponseBody"
            },
            "type": "array"
          }
        },
        "required": [
          "resources"
        ],
        "title": "CatalogV2ListResourcesResponseBody",
        "type": "object"
      },
      "CatalogV2ListTypesResponseBody": {
        "example": {
          "catalog_types": [
            {
              "annotations": {
                "incident.io/catalog-importer/id": "id-of-config"
              },
              "color": "slate",
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Represents Kubernetes clusters that we run inside of GKE.",
              "estimated_count": 7,
              "external_type": "PagerDutyService",
              "icon": "bolt",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "is_editable": false,
              "name": "Kubernetes Cluster",
              "ranked": true,
              "required_integrations": [
                "pager_duty"
              ],
              "schema": {
                "attributes": [
                  {
                    "array": false,
                    "id": "01GW2G3V0S59R238FAHPDS1R66",
                    "mode": "manual",
                    "name": "tier",
                    "type": "Custom[\"Service\"]"
                  }
                ],
                "version": 1
              },
              "semantic_type": "custom",
              "type_name": "Custom[\"BackstageGroup\"]",
              "updated_at": "2021-08-17T13:28:57.801578Z"
            }
          ]
        },
        "properties": {
          "catalog_types": {
            "example": [
              {
                "annotations": {
                  "incident.io/catalog-importer/id": "id-of-config"
                },
                "color": "slate",
                "created_at": "2021-08-17T13:28:57.801578Z",
                "description": "Represents Kubernetes clusters that we run inside of GKE.",
                "estimated_count": 7,
                "external_type": "PagerDutyService",
                "icon": "bolt",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "is_editable": false,
                "name": "Kubernetes Cluster",
                "ranked": true,
                "required_integrations": [
                  "pager_duty"
                ],
                "schema": {
                  "attributes": [
                    {
                      "array": false,
                      "id": "01GW2G3V0S59R238FAHPDS1R66",
                      "mode": "manual",
                      "name": "tier",
                      "type": "Custom[\"Service\"]"
                    }
                  ],
                  "version": 1
                },
                "semantic_type": "custom",
                "type_name": "Custom[\"BackstageGroup\"]",
                "updated_at": "2021-08-17T13:28:57.801578Z"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/CatalogTypeV2ResponseBody"
            },
            "type": "array"
          }
        },
        "required": [
          "catalog_types"
        ],
        "title": "CatalogV2ListTypesResponseBody",
        "type": "object"
      },
      "CatalogV2ShowEntryResponseBody": {
        "example": {
          "catalog_entry": {
            "aliases": [
              "lawrence@incident.io",
              "lawrence"
            ],
            "archived_at": "2021-08-17T14:28:57.801578Z",
            "attribute_values": {
              "abc123": {
                "array_value": [
                  {
                    "catalog_entry": {
                      "catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "catalog_entry_name": "Primary escalation",
                      "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                    },
                    "image_url": "https://avatars.slack-edge.com/2021-08-09/2372763167857_6f65d94928b0a0ac590b_192.jpg",
                    "is_image_slack_icon": false,
                    "label": "Lawrence Jones",
                    "literal": "SEV123",
                    "sort_key": "000020"
                  }
                ],
                "value": {
                  "catalog_entry": {
                    "catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "catalog_entry_name": "Primary escalation",
                    "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                  },
                  "image_url": "https://avatars.slack-edge.com/2021-08-09/2372763167857_6f65d94928b0a0ac590b_192.jpg",
                  "is_image_slack_icon": false,
                  "label": "Lawrence Jones",
                  "literal": "SEV123",
                  "sort_key": "000020"
                }
              }
            },
            "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "name": "Primary On-call",
            "rank": 3,
            "updated_at": "2021-08-17T13:28:57.801578Z"
          },
          "catalog_type": {
            "annotations": {
              "incident.io/catalog-importer/id": "id-of-config"
            },
            "color": "slate",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Represents Kubernetes clusters that we run inside of GKE.",
            "estimated_count": 7,
            "external_type": "PagerDutyService",
            "icon": "bolt",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "is_editable": false,
            "name": "Kubernetes Cluster",
            "ranked": true,
            "required_integrations": [
              "pager_duty"
            ],
            "schema": {
              "attributes": [
                {
                  "array": false,
                  "id": "01GW2G3V0S59R238FAHPDS1R66",
                  "mode": "manual",
                  "name": "tier",
                  "type": "Custom[\"Service\"]"
                }
              ],
              "version": 1
            },
            "semantic_type": "custom",
            "type_name": "Custom[\"BackstageGroup\"]",
            "updated_at": "2021-08-17T13:28:57.801578Z"
          }
        },
        "properties": {
          "catalog_entry": {
            "$ref": "#/components/schemas/CatalogEntryV2ResponseBody"
          },
          "catalog_type": {
            "$ref": "#/components/schemas/CatalogTypeV2ResponseBody"
          }
        },
        "required": [
          "catalog_entry",
          "catalog_type"
        ],
        "title": "CatalogV2ShowEntryResponseBody",
        "type": "object"
      },
      "CatalogV2ShowTypeResponseBody": {
        "example": {
          "catalog_type": {
            "annotations": {
              "incident.io/catalog-importer/id": "id-of-config"
            },
            "color": "slate",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Represents Kubernetes clusters that we run inside of GKE.",
            "estimated_count": 7,
            "external_type": "PagerDutyService",
            "icon": "bolt",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "is_editable": false,
            "name": "Kubernetes Cluster",
            "ranked": true,
            "required_integrations": [
              "pager_duty"
            ],
            "schema": {
              "attributes": [
                {
                  "array": false,
                  "id": "01GW2G3V0S59R238FAHPDS1R66",
                  "mode": "manual",
                  "name": "tier",
                  "type": "Custom[\"Service\"]"
                }
              ],
              "version": 1
            },
            "semantic_type": "custom",
            "type_name": "Custom[\"BackstageGroup\"]",
            "updated_at": "2021-08-17T13:28:57.801578Z"
          }
        },
        "properties": {
          "catalog_type": {
            "$ref": "#/components/schemas/CatalogTypeV2ResponseBody"
          }
        },
        "required": [
          "catalog_type"
        ],
        "title": "CatalogV2ShowTypeResponseBody",
        "type": "object"
      },
      "CatalogV2UpdateEntryRequestBody": {
        "example": {
          "aliases": [
            "lawrence@incident.io",
            "lawrence"
          ],
          "attribute_values": {
            "abc123": {
              "array_value": [
                {
                  "literal": "SEV123"
                }
              ],
              "value": {
                "literal": "SEV123"
              }
            }
          },
          "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
          "name": "Primary On-call",
          "rank": 3
        },
        "properties": {
          "aliases": {
            "description": "Optional aliases that can be used to reference this entry",
            "example": [
              "lawrence@incident.io",
              "lawrence"
            ],
            "items": {
              "example": "abc123",
              "type": "string"
            },
            "type": "array"
          },
          "attribute_values": {
            "additionalProperties": {
              "$ref": "#/components/schemas/CatalogAttributeBindingPayloadV2RequestBody"
            },
            "description": "Values of this entry",
            "example": {
              "abc123": {
                "array_value": [
                  {
                    "literal": "SEV123"
                  }
                ],
                "value": {
                  "literal": "SEV123"
                }
              }
            },
            "type": "object"
          },
          "external_id": {
            "description": "An optional alternative ID for this entry, which is ensured to be unique for the type",
            "example": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
            "type": "string"
          },
          "name": {
            "description": "Name is the human readable name of this entry",
            "example": "Primary On-call",
            "type": "string"
          },
          "rank": {
            "description": "When catalog type is ranked, this is used to help order things",
            "example": 3,
            "format": "int32",
            "type": "integer"
          }
        },
        "required": [
          "attribute_values",
          "name"
        ],
        "title": "CatalogV2UpdateEntryRequestBody",
        "type": "object"
      },
      "CatalogV2UpdateEntryResponseBody": {
        "example": {
          "catalog_entry": {
            "aliases": [
              "lawrence@incident.io",
              "lawrence"
            ],
            "archived_at": "2021-08-17T14:28:57.801578Z",
            "attribute_values": {
              "abc123": {
                "array_value": [
                  {
                    "catalog_entry": {
                      "catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "catalog_entry_name": "Primary escalation",
                      "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                    },
                    "image_url": "https://avatars.slack-edge.com/2021-08-09/2372763167857_6f65d94928b0a0ac590b_192.jpg",
                    "is_image_slack_icon": false,
                    "label": "Lawrence Jones",
                    "literal": "SEV123",
                    "sort_key": "000020"
                  }
                ],
                "value": {
                  "catalog_entry": {
                    "catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "catalog_entry_name": "Primary escalation",
                    "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                  },
                  "image_url": "https://avatars.slack-edge.com/2021-08-09/2372763167857_6f65d94928b0a0ac590b_192.jpg",
                  "is_image_slack_icon": false,
                  "label": "Lawrence Jones",
                  "literal": "SEV123",
                  "sort_key": "000020"
                }
              }
            },
            "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "name": "Primary On-call",
            "rank": 3,
            "updated_at": "2021-08-17T13:28:57.801578Z"
          },
          "catalog_type": {
            "annotations": {
              "incident.io/catalog-importer/id": "id-of-config"
            },
            "color": "slate",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Represents Kubernetes clusters that we run inside of GKE.",
            "estimated_count": 7,
            "external_type": "PagerDutyService",
            "icon": "bolt",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "is_editable": false,
            "name": "Kubernetes Cluster",
            "ranked": true,
            "required_integrations": [
              "pager_duty"
            ],
            "schema": {
              "attributes": [
                {
                  "array": false,
                  "id": "01GW2G3V0S59R238FAHPDS1R66",
                  "mode": "manual",
                  "name": "tier",
                  "type": "Custom[\"Service\"]"
                }
              ],
              "version": 1
            },
            "semantic_type": "custom",
            "type_name": "Custom[\"BackstageGroup\"]",
            "updated_at": "2021-08-17T13:28:57.801578Z"
          }
        },
        "properties": {
          "catalog_entry": {
            "$ref": "#/components/schemas/CatalogEntryV2ResponseBody"
          },
          "catalog_type": {
            "$ref": "#/components/schemas/CatalogTypeV2ResponseBody"
          }
        },
        "required": [
          "catalog_entry",
          "catalog_type"
        ],
        "title": "CatalogV2UpdateEntryResponseBody",
        "type": "object"
      },
      "CatalogV2UpdateTypeRequestBody": {
        "example": {
          "annotations": {
            "incident.io/catalog-importer/id": "id-of-config"
          },
          "color": "slate",
          "description": "Represents Kubernetes clusters that we run inside of GKE.",
          "icon": "bolt",
          "name": "Kubernetes Cluster",
          "ranked": true,
          "semantic_type": "custom"
        },
        "properties": {
          "annotations": {
            "additionalProperties": {
              "example": "abc123",
              "type": "string"
            },
            "description": "Annotations that can track metadata about this type",
            "example": {
              "incident.io/catalog-importer/id": "id-of-config"
            },
            "type": "object"
          },
          "color": {
            "description": "Sets the display color of this type in the dashboard",
            "enum": [
              "slate",
              "red",
              "yellow",
              "green",
              "blue",
              "violet"
            ],
            "example": "slate",
            "type": "string"
          },
          "description": {
            "description": "Human readble description of this type",
            "example": "Represents Kubernetes clusters that we run inside of GKE.",
            "type": "string"
          },
          "icon": {
            "description": "Sets the display icon of this type in the dashboard",
            "enum": [
              "bolt",
              "box",
              "briefcase",
              "browser",
              "bulb",
              "clock",
              "cog",
              "database",
              "doc",
              "email",
              "server",
              "severity",
              "star",
              "tag",
              "user",
              "users"
            ],
            "example": "bolt",
            "type": "string"
          },
          "name": {
            "description": "Name is the human readable name of this type",
            "example": "Kubernetes Cluster",
            "type": "string"
          },
          "ranked": {
            "description": "If this type should be ranked",
            "example": true,
            "type": "boolean"
          },
          "semantic_type": {
            "description": "Semantic type of this resource",
            "example": "custom",
            "type": "string"
          }
        },
        "required": [
          "description",
          "name"
        ],
        "title": "CatalogV2UpdateTypeRequestBody",
        "type": "object"
      },
      "CatalogV2UpdateTypeResponseBody": {
        "example": {
          "catalog_type": {
            "annotations": {
              "incident.io/catalog-importer/id": "id-of-config"
            },
            "color": "slate",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Represents Kubernetes clusters that we run inside of GKE.",
            "estimated_count": 7,
            "external_type": "PagerDutyService",
            "icon": "bolt",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "is_editable": false,
            "name": "Kubernetes Cluster",
            "ranked": true,
            "required_integrations": [
              "pager_duty"
            ],
            "schema": {
              "attributes": [
                {
                  "array": false,
                  "id": "01GW2G3V0S59R238FAHPDS1R66",
                  "mode": "manual",
                  "name": "tier",
                  "type": "Custom[\"Service\"]"
                }
              ],
              "version": 1
            },
            "semantic_type": "custom",
            "type_name": "Custom[\"BackstageGroup\"]",
            "updated_at": "2021-08-17T13:28:57.801578Z"
          }
        },
        "properties": {
          "catalog_type": {
            "$ref": "#/components/schemas/CatalogTypeV2ResponseBody"
          }
        },
        "required": [
          "catalog_type"
        ],
        "title": "CatalogV2UpdateTypeResponseBody",
        "type": "object"
      },
      "CatalogV2UpdateTypeSchemaRequestBody": {
        "example": {
          "attributes": [
            {
              "array": false,
              "id": "01GW2G3V0S59R238FAHPDS1R66",
              "mode": "manual",
              "name": "tier",
              "type": "Custom[\"Service\"]"
            }
          ],
          "version": 1
        },
        "properties": {
          "attributes": {
            "example": [
              {
                "array": false,
                "id": "01GW2G3V0S59R238FAHPDS1R66",
                "mode": "manual",
                "name": "tier",
                "type": "Custom[\"Service\"]"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/CatalogTypeAttributePayloadV2RequestBody"
            },
            "type": "array"
          },
          "version": {
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "attributes",
          "version"
        ],
        "title": "CatalogV2UpdateTypeSchemaRequestBody",
        "type": "object"
      },
      "CatalogV2UpdateTypeSchemaResponseBody": {
        "example": {
          "catalog_type": {
            "annotations": {
              "incident.io/catalog-importer/id": "id-of-config"
            },
            "color": "slate",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Represents Kubernetes clusters that we run inside of GKE.",
            "estimated_count": 7,
            "external_type": "PagerDutyService",
            "icon": "bolt",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "is_editable": false,
            "name": "Kubernetes Cluster",
            "ranked": true,
            "required_integrations": [
              "pager_duty"
            ],
            "schema": {
              "attributes": [
                {
                  "array": false,
                  "id": "01GW2G3V0S59R238FAHPDS1R66",
                  "mode": "manual",
                  "name": "tier",
                  "type": "Custom[\"Service\"]"
                }
              ],
              "version": 1
            },
            "semantic_type": "custom",
            "type_name": "Custom[\"BackstageGroup\"]",
            "updated_at": "2021-08-17T13:28:57.801578Z"
          }
        },
        "properties": {
          "catalog_type": {
            "$ref": "#/components/schemas/CatalogTypeV2ResponseBody"
          }
        },
        "required": [
          "catalog_type"
        ],
        "title": "CatalogV2UpdateTypeSchemaResponseBody",
        "type": "object"
      },
      "CustomFieldEntryPayloadV1RequestBody": {
        "example": {
          "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "values": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "value_catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "value_link": "https://google.com/",
              "value_numeric": "123.456",
              "value_option_id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "value_text": "This is my text field, I hope you like it",
              "value_timestamp": ""
            }
          ]
        },
        "properties": {
          "custom_field_id": {
            "description": "ID of the custom field this entry is linked against",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "values": {
            "description": "List of values to associate with this entry. Use an empty array to unset the value of the custom field.",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "value_catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "value_link": "https://google.com/",
                "value_numeric": "123.456",
                "value_option_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "value_text": "This is my text field, I hope you like it",
                "value_timestamp": ""
              }
            ],
            "items": {
              "$ref": "#/components/schemas/CustomFieldValuePayloadV1RequestBody"
            },
            "type": "array"
          }
        },
        "required": [
          "custom_field_id",
          "values"
        ],
        "title": "CustomFieldEntryPayloadV1RequestBody",
        "type": "object"
      },
      "CustomFieldEntryPayloadV2RequestBody": {
        "example": {
          "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "values": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "value_catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "value_link": "https://google.com/",
              "value_numeric": "123.456",
              "value_option_id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "value_text": "This is my text field, I hope you like it",
              "value_timestamp": ""
            }
          ]
        },
        "properties": {
          "custom_field_id": {
            "description": "ID of the custom field this entry is linked against",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "values": {
            "description": "List of values to associate with this entry. Use an empty array to unset the value of the custom field.",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "value_catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "value_link": "https://google.com/",
                "value_numeric": "123.456",
                "value_option_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "value_text": "This is my text field, I hope you like it",
                "value_timestamp": ""
              }
            ],
            "items": {
              "$ref": "#/components/schemas/CustomFieldValuePayloadV2RequestBody"
            },
            "type": "array"
          }
        },
        "required": [
          "custom_field_id",
          "values"
        ],
        "title": "CustomFieldEntryPayloadV2RequestBody",
        "type": "object"
      },
      "CustomFieldEntryV1ResponseBody": {
        "example": {
          "custom_field": {
            "description": "Which team is impacted by this issue",
            "field_type": "single_select",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "name": "Affected Team",
            "options": [
              {
                "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "sort_key": 10,
                "value": "Product"
              }
            ]
          },
          "values": [
            {
              "value_catalog_entry": {
                "aliases": [
                  "lawrence@incident.io",
                  "lawrence"
                ],
                "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Primary On-call"
              },
              "value_link": "https://google.com/",
              "value_numeric": "123.456",
              "value_option": {
                "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "sort_key": 10,
                "value": "Product"
              },
              "value_text": "This is my text field, I hope you like it"
            }
          ]
        },
        "properties": {
          "custom_field": {
            "$ref": "#/components/schemas/CustomFieldTypeInfoV1ResponseBody"
          },
          "values": {
            "description": "List of custom field values set on this entry",
            "example": [
              {
                "value_catalog_entry": {
                  "aliases": [
                    "lawrence@incident.io",
                    "lawrence"
                  ],
                  "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Primary On-call"
                },
                "value_link": "https://google.com/",
                "value_numeric": "123.456",
                "value_option": {
                  "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "sort_key": 10,
                  "value": "Product"
                },
                "value_text": "This is my text field, I hope you like it"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/CustomFieldValueV1ResponseBody"
            },
            "type": "array"
          }
        },
        "required": [
          "custom_field",
          "values"
        ],
        "title": "CustomFieldEntryV1ResponseBody",
        "type": "object"
      },
      "CustomFieldEntryV2ResponseBody": {
        "example": {
          "custom_field": {
            "description": "Which team is impacted by this issue",
            "field_type": "single_select",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "name": "Affected Team",
            "options": [
              {
                "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "sort_key": 10,
                "value": "Product"
              }
            ]
          },
          "values": [
            {
              "value_catalog_entry": {
                "aliases": [
                  "lawrence@incident.io",
                  "lawrence"
                ],
                "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Primary On-call"
              },
              "value_link": "https://google.com/",
              "value_numeric": "123.456",
              "value_option": {
                "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "sort_key": 10,
                "value": "Product"
              },
              "value_text": "This is my text field, I hope you like it"
            }
          ]
        },
        "properties": {
          "custom_field": {
            "$ref": "#/components/schemas/CustomFieldTypeInfoV2ResponseBody"
          },
          "values": {
            "description": "List of custom field values set on this entry",
            "example": [
              {
                "value_catalog_entry": {
                  "aliases": [
                    "lawrence@incident.io",
                    "lawrence"
                  ],
                  "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Primary On-call"
                },
                "value_link": "https://google.com/",
                "value_numeric": "123.456",
                "value_option": {
                  "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "sort_key": 10,
                  "value": "Product"
                },
                "value_text": "This is my text field, I hope you like it"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/CustomFieldValueV2ResponseBody"
            },
            "type": "array"
          }
        },
        "required": [
          "custom_field",
          "values"
        ],
        "title": "CustomFieldEntryV2ResponseBody",
        "type": "object"
      },
      "CustomFieldOptionV1ResponseBody": {
        "example": {
          "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "sort_key": 10,
          "value": "Product"
        },
        "properties": {
          "custom_field_id": {
            "description": "ID of the custom field this option belongs to",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the custom field option",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "sort_key": {
            "default": 1000,
            "description": "Sort key used to order the custom field options correctly",
            "example": 10,
            "format": "int64",
            "type": "integer"
          },
          "value": {
            "description": "Human readable name for the custom field option",
            "example": "Product",
            "type": "string"
          }
        },
        "required": [
          "custom_field_id",
          "id",
          "sort_key",
          "value"
        ],
        "title": "CustomFieldOptionV1ResponseBody",
        "type": "object"
      },
      "CustomFieldOptionV2ResponseBody": {
        "example": {
          "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "sort_key": 10,
          "value": "Product"
        },
        "properties": {
          "custom_field_id": {
            "description": "ID of the custom field this option belongs to",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the custom field option",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "sort_key": {
            "default": 1000,
            "description": "Sort key used to order the custom field options correctly",
            "example": 10,
            "format": "int64",
            "type": "integer"
          },
          "value": {
            "description": "Human readable name for the custom field option",
            "example": "Product",
            "type": "string"
          }
        },
        "required": [
          "custom_field_id",
          "id",
          "sort_key",
          "value"
        ],
        "title": "CustomFieldOptionV2ResponseBody",
        "type": "object"
      },
      "CustomFieldOptionsV1CreateRequestBody": {
        "example": {
          "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "sort_key": 10,
          "value": "Product"
        },
        "properties": {
          "custom_field_id": {
            "description": "ID of the custom field this option belongs to",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "sort_key": {
            "default": 1000,
            "description": "Sort key used to order the custom field options correctly",
            "example": 10,
            "format": "int64",
            "type": "integer"
          },
          "value": {
            "description": "Human readable name for the custom field option",
            "example": "Product",
            "type": "string"
          }
        },
        "required": [
          "custom_field_id",
          "value"
        ],
        "title": "CustomFieldOptionsV1CreateRequestBody",
        "type": "object"
      },
      "CustomFieldOptionsV1CreateResponseBody": {
        "example": {
          "custom_field_option": {
            "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "sort_key": 10,
            "value": "Product"
          }
        },
        "properties": {
          "custom_field_option": {
            "$ref": "#/components/schemas/CustomFieldOptionV1ResponseBody"
          }
        },
        "required": [
          "custom_field_option"
        ],
        "title": "CustomFieldOptionsV1CreateResponseBody",
        "type": "object"
      },
      "CustomFieldOptionsV1ListResponseBody": {
        "example": {
          "custom_field_options": [
            {
              "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "sort_key": 10,
              "value": "Product"
            }
          ],
          "pagination_meta": {
            "after": "01FCNDV6P870EA6S7TK1DSYDG0",
            "page_size": 25
          }
        },
        "properties": {
          "custom_field_options": {
            "example": [
              {
                "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "sort_key": 10,
                "value": "Product"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/CustomFieldOptionV1ResponseBody"
            },
            "type": "array"
          },
          "pagination_meta": {
            "$ref": "#/components/schemas/PaginationMetaResultResponseBody"
          }
        },
        "required": [
          "custom_field_options",
          "pagination_meta"
        ],
        "title": "CustomFieldOptionsV1ListResponseBody",
        "type": "object"
      },
      "CustomFieldOptionsV1ShowResponseBody": {
        "example": {
          "custom_field_option": {
            "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "sort_key": 10,
            "value": "Product"
          }
        },
        "properties": {
          "custom_field_option": {
            "$ref": "#/components/schemas/CustomFieldOptionV1ResponseBody"
          }
        },
        "required": [
          "custom_field_option"
        ],
        "title": "CustomFieldOptionsV1ShowResponseBody",
        "type": "object"
      },
      "CustomFieldOptionsV1UpdateRequestBody": {
        "example": {
          "sort_key": 10,
          "value": "Product"
        },
        "properties": {
          "sort_key": {
            "default": 1000,
            "description": "Sort key used to order the custom field options correctly",
            "example": 10,
            "format": "int64",
            "type": "integer"
          },
          "value": {
            "description": "Human readable name for the custom field option",
            "example": "Product",
            "type": "string"
          }
        },
        "required": [
          "sort_key",
          "value"
        ],
        "title": "CustomFieldOptionsV1UpdateRequestBody",
        "type": "object"
      },
      "CustomFieldOptionsV1UpdateResponseBody": {
        "example": {
          "custom_field_option": {
            "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "sort_key": 10,
            "value": "Product"
          }
        },
        "properties": {
          "custom_field_option": {
            "$ref": "#/components/schemas/CustomFieldOptionV1ResponseBody"
          }
        },
        "required": [
          "custom_field_option"
        ],
        "title": "CustomFieldOptionsV1UpdateResponseBody",
        "type": "object"
      },
      "CustomFieldTypeInfoV1ResponseBody": {
        "example": {
          "description": "Which team is impacted by this issue",
          "field_type": "single_select",
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "name": "Affected Team",
          "options": [
            {
              "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "sort_key": 10,
              "value": "Product"
            }
          ]
        },
        "properties": {
          "description": {
            "description": "Description of the custom field",
            "example": "Which team is impacted by this issue",
            "type": "string"
          },
          "field_type": {
            "description": "Type of custom field",
            "enum": [
              "single_select",
              "multi_select",
              "text",
              "link",
              "numeric"
            ],
            "example": "single_select",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the custom field",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "name": {
            "description": "Human readable name for the custom field",
            "example": "Affected Team",
            "maxLength": 50,
            "type": "string"
          },
          "options": {
            "description": "What options are available for this custom field, if this field has options",
            "example": [
              {
                "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "sort_key": 10,
                "value": "Product"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/CustomFieldOptionV1ResponseBody"
            },
            "type": "array"
          }
        },
        "required": [
          "description",
          "field_type",
          "id",
          "name",
          "options"
        ],
        "title": "CustomFieldTypeInfoV1ResponseBody",
        "type": "object"
      },
      "CustomFieldTypeInfoV2ResponseBody": {
        "example": {
          "description": "Which team is impacted by this issue",
          "field_type": "single_select",
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "name": "Affected Team",
          "options": [
            {
              "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "sort_key": 10,
              "value": "Product"
            }
          ]
        },
        "properties": {
          "description": {
            "description": "Description of the custom field",
            "example": "Which team is impacted by this issue",
            "type": "string"
          },
          "field_type": {
            "description": "Type of custom field",
            "enum": [
              "single_select",
              "multi_select",
              "text",
              "link",
              "numeric"
            ],
            "example": "single_select",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the custom field",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "name": {
            "description": "Human readable name for the custom field",
            "example": "Affected Team",
            "maxLength": 50,
            "type": "string"
          },
          "options": {
            "description": "What options are available for this custom field, if this field has options",
            "example": [
              {
                "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "sort_key": 10,
                "value": "Product"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/CustomFieldOptionV2ResponseBody"
            },
            "type": "array"
          }
        },
        "required": [
          "description",
          "field_type",
          "id",
          "name",
          "options"
        ],
        "title": "CustomFieldTypeInfoV2ResponseBody",
        "type": "object"
      },
      "CustomFieldV1ResponseBody": {
        "example": {
          "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "created_at": "2021-08-17T13:28:57.801578Z",
          "description": "Which team is impacted by this issue",
          "field_type": "single_select",
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "name": "Affected Team",
          "options": [
            {
              "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "sort_key": 10,
              "value": "Product"
            }
          ],
          "required": "never",
          "show_before_closure": true,
          "show_before_creation": true,
          "show_before_update": true,
          "show_in_announcement_post": true,
          "updated_at": "2021-08-17T13:28:57.801578Z"
        },
        "properties": {
          "catalog_type_id": {
            "description": "For catalog fields, the ID of the associated catalog type",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "created_at": {
            "description": "When the action was created",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "description": {
            "description": "Description of the custom field",
            "example": "Which team is impacted by this issue",
            "type": "string"
          },
          "field_type": {
            "description": "Type of custom field",
            "enum": [
              "single_select",
              "multi_select",
              "text",
              "link",
              "numeric"
            ],
            "example": "single_select",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the custom field",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "name": {
            "description": "Human readable name for the custom field",
            "example": "Affected Team",
            "maxLength": 50,
            "type": "string"
          },
          "options": {
            "description": "What options are available for this custom field, if this field has options",
            "example": [
              {
                "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "sort_key": 10,
                "value": "Product"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/CustomFieldOptionV1ResponseBody"
            },
            "type": "array"
          },
          "required": {
            "description": "When this custom field must be set during the incident lifecycle.",
            "enum": [
              "never",
              "before_closure",
              "always"
            ],
            "example": "never",
            "type": "string"
          },
          "show_before_closure": {
            "description": "Whether a custom field should be shown in the incident close modal. If this custom field is required before closure, but no value has been set for it, the field will be shown in the closure modal whatever the value of this setting.",
            "example": true,
            "type": "boolean"
          },
          "show_before_creation": {
            "description": "Whether a custom field should be shown in the incident creation modal. This must be true if the field is always required.",
            "example": true,
            "type": "boolean"
          },
          "show_before_update": {
            "description": "Whether a custom field should be shown in the incident update modal.",
            "example": true,
            "type": "boolean"
          },
          "show_in_announcement_post": {
            "description": "Whether a custom field should be shown in the list of fields as part of the announcement post when set.",
            "example": true,
            "type": "boolean"
          },
          "updated_at": {
            "description": "When the action was last updated",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "created_at",
          "description",
          "field_type",
          "id",
          "name",
          "options",
          "required",
          "show_before_closure",
          "show_before_creation",
          "show_before_update",
          "updated_at"
        ],
        "title": "CustomFieldV1ResponseBody",
        "type": "object"
      },
      "CustomFieldValuePayloadV1RequestBody": {
        "example": {
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "value_catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "value_link": "https://google.com/",
          "value_numeric": "123.456",
          "value_option_id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "value_text": "This is my text field, I hope you like it",
          "value_timestamp": ""
        },
        "properties": {
          "id": {
            "description": "Unique identifier for the custom field value",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "value_catalog_entry_id": {
            "description": "ID of the catalog entry",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "value_link": {
            "description": "If the custom field type is 'link', this will contain the value assigned.",
            "example": "https://google.com/",
            "type": "string"
          },
          "value_numeric": {
            "description": "If the custom field type is 'numeric', this will contain the value assigned.",
            "example": "123.456",
            "type": "string"
          },
          "value_option_id": {
            "description": "ID of the custom field option",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "value_text": {
            "description": "If the custom field type is 'text', this will contain the value assigned.",
            "example": "This is my text field, I hope you like it",
            "type": "string"
          },
          "value_timestamp": {
            "description": "Deprecated: please use incident timestamp values instead",
            "example": "",
            "type": "string"
          }
        },
        "title": "CustomFieldValuePayloadV1RequestBody",
        "type": "object"
      },
      "CustomFieldValuePayloadV2RequestBody": {
        "example": {
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "value_catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "value_link": "https://google.com/",
          "value_numeric": "123.456",
          "value_option_id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "value_text": "This is my text field, I hope you like it",
          "value_timestamp": ""
        },
        "properties": {
          "id": {
            "description": "Unique identifier for the custom field value",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "value_catalog_entry_id": {
            "description": "ID of the catalog entry",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "value_link": {
            "description": "If the custom field type is 'link', this will contain the value assigned.",
            "example": "https://google.com/",
            "type": "string"
          },
          "value_numeric": {
            "description": "If the custom field type is 'numeric', this will contain the value assigned.",
            "example": "123.456",
            "type": "string"
          },
          "value_option_id": {
            "description": "ID of the custom field option",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "value_text": {
            "description": "If the custom field type is 'text', this will contain the value assigned.",
            "example": "This is my text field, I hope you like it",
            "type": "string"
          },
          "value_timestamp": {
            "description": "Deprecated: please use incident timestamp values instead",
            "example": "",
            "type": "string"
          }
        },
        "title": "CustomFieldValuePayloadV2RequestBody",
        "type": "object"
      },
      "CustomFieldValueV1ResponseBody": {
        "example": {
          "value_catalog_entry": {
            "aliases": [
              "lawrence@incident.io",
              "lawrence"
            ],
            "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "name": "Primary On-call"
          },
          "value_link": "https://google.com/",
          "value_numeric": "123.456",
          "value_option": {
            "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "sort_key": 10,
            "value": "Product"
          },
          "value_text": "This is my text field, I hope you like it"
        },
        "properties": {
          "value_catalog_entry": {
            "$ref": "#/components/schemas/EmbeddedCatalogEntryV1ResponseBody"
          },
          "value_link": {
            "description": "If the custom field type is 'link', this will contain the value assigned.",
            "example": "https://google.com/",
            "type": "string"
          },
          "value_numeric": {
            "description": "If the custom field type is 'numeric', this will contain the value assigned.",
            "example": "123.456",
            "type": "string"
          },
          "value_option": {
            "$ref": "#/components/schemas/CustomFieldOptionV1ResponseBody"
          },
          "value_text": {
            "description": "If the custom field type is 'text', this will contain the value assigned.",
            "example": "This is my text field, I hope you like it",
            "type": "string"
          }
        },
        "title": "CustomFieldValueV1ResponseBody",
        "type": "object"
      },
      "CustomFieldValueV2ResponseBody": {
        "example": {
          "value_catalog_entry": {
            "aliases": [
              "lawrence@incident.io",
              "lawrence"
            ],
            "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "name": "Primary On-call"
          },
          "value_link": "https://google.com/",
          "value_numeric": "123.456",
          "value_option": {
            "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "sort_key": 10,
            "value": "Product"
          },
          "value_text": "This is my text field, I hope you like it"
        },
        "properties": {
          "value_catalog_entry": {
            "$ref": "#/components/schemas/EmbeddedCatalogEntryV2ResponseBody"
          },
          "value_link": {
            "description": "If the custom field type is 'link', this will contain the value assigned.",
            "example": "https://google.com/",
            "type": "string"
          },
          "value_numeric": {
            "description": "If the custom field type is 'numeric', this will contain the value assigned.",
            "example": "123.456",
            "type": "string"
          },
          "value_option": {
            "$ref": "#/components/schemas/CustomFieldOptionV2ResponseBody"
          },
          "value_text": {
            "description": "If the custom field type is 'text', this will contain the value assigned.",
            "example": "This is my text field, I hope you like it",
            "type": "string"
          }
        },
        "title": "CustomFieldValueV2ResponseBody",
        "type": "object"
      },
      "CustomFieldsV1CreateRequestBody": {
        "example": {
          "description": "Which team is impacted by this issue",
          "field_type": "single_select",
          "name": "Affected Team",
          "required": "never",
          "show_before_closure": true,
          "show_before_creation": true,
          "show_before_update": true,
          "show_in_announcement_post": true
        },
        "properties": {
          "description": {
            "description": "Description of the custom field",
            "example": "Which team is impacted by this issue",
            "type": "string"
          },
          "field_type": {
            "description": "Type of custom field",
            "enum": [
              "single_select",
              "multi_select",
              "text",
              "link",
              "numeric"
            ],
            "example": "single_select",
            "type": "string"
          },
          "name": {
            "description": "Human readable name for the custom field",
            "example": "Affected Team",
            "maxLength": 50,
            "type": "string"
          },
          "required": {
            "description": "When this custom field must be set during the incident lifecycle.",
            "enum": [
              "never",
              "before_closure",
              "always"
            ],
            "example": "never",
            "type": "string"
          },
          "show_before_closure": {
            "description": "Whether a custom field should be shown in the incident close modal. If this custom field is required before closure, but no value has been set for it, the field will be shown in the closure modal whatever the value of this setting.",
            "example": true,
            "type": "boolean"
          },
          "show_before_creation": {
            "description": "Whether a custom field should be shown in the incident creation modal. This must be true if the field is always required.",
            "example": true,
            "type": "boolean"
          },
          "show_before_update": {
            "description": "Whether a custom field should be shown in the incident update modal.",
            "example": true,
            "type": "boolean"
          },
          "show_in_announcement_post": {
            "description": "Whether a custom field should be shown in the list of fields as part of the announcement post when set.",
            "example": true,
            "type": "boolean"
          }
        },
        "required": [
          "description",
          "field_type",
          "name",
          "required",
          "show_before_closure",
          "show_before_creation",
          "show_before_update"
        ],
        "title": "CustomFieldsV1CreateRequestBody",
        "type": "object"
      },
      "CustomFieldsV1CreateResponseBody": {
        "example": {
          "custom_field": {
            "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Which team is impacted by this issue",
            "field_type": "single_select",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "name": "Affected Team",
            "options": [
              {
                "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "sort_key": 10,
                "value": "Product"
              }
            ],
            "required": "never",
            "show_before_closure": true,
            "show_before_creation": true,
            "show_before_update": true,
            "show_in_announcement_post": true,
            "updated_at": "2021-08-17T13:28:57.801578Z"
          }
        },
        "properties": {
          "custom_field": {
            "$ref": "#/components/schemas/CustomFieldV1ResponseBody"
          }
        },
        "required": [
          "custom_field"
        ],
        "title": "CustomFieldsV1CreateResponseBody",
        "type": "object"
      },
      "CustomFieldsV1ListResponseBody": {
        "example": {
          "custom_fields": [
            {
              "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Which team is impacted by this issue",
              "field_type": "single_select",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Affected Team",
              "options": [
                {
                  "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "sort_key": 10,
                  "value": "Product"
                }
              ],
              "required": "never",
              "show_before_closure": true,
              "show_before_creation": true,
              "show_before_update": true,
              "show_in_announcement_post": true,
              "updated_at": "2021-08-17T13:28:57.801578Z"
            }
          ]
        },
        "properties": {
          "custom_fields": {
            "example": [
              {
                "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "created_at": "2021-08-17T13:28:57.801578Z",
                "description": "Which team is impacted by this issue",
                "field_type": "single_select",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Affected Team",
                "options": [
                  {
                    "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "sort_key": 10,
                    "value": "Product"
                  }
                ],
                "required": "never",
                "show_before_closure": true,
                "show_before_creation": true,
                "show_before_update": true,
                "show_in_announcement_post": true,
                "updated_at": "2021-08-17T13:28:57.801578Z"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/CustomFieldV1ResponseBody"
            },
            "type": "array"
          }
        },
        "required": [
          "custom_fields"
        ],
        "title": "CustomFieldsV1ListResponseBody",
        "type": "object"
      },
      "CustomFieldsV1ShowResponseBody": {
        "example": {
          "custom_field": {
            "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Which team is impacted by this issue",
            "field_type": "single_select",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "name": "Affected Team",
            "options": [
              {
                "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "sort_key": 10,
                "value": "Product"
              }
            ],
            "required": "never",
            "show_before_closure": true,
            "show_before_creation": true,
            "show_before_update": true,
            "show_in_announcement_post": true,
            "updated_at": "2021-08-17T13:28:57.801578Z"
          }
        },
        "properties": {
          "custom_field": {
            "$ref": "#/components/schemas/CustomFieldV1ResponseBody"
          }
        },
        "required": [
          "custom_field"
        ],
        "title": "CustomFieldsV1ShowResponseBody",
        "type": "object"
      },
      "CustomFieldsV1UpdateRequestBody": {
        "example": {
          "description": "Which team is impacted by this issue",
          "name": "Affected Team",
          "required": "never",
          "show_before_closure": true,
          "show_before_creation": true,
          "show_before_update": true,
          "show_in_announcement_post": true
        },
        "properties": {
          "description": {
            "description": "Description of the custom field",
            "example": "Which team is impacted by this issue",
            "type": "string"
          },
          "name": {
            "description": "Human readable name for the custom field",
            "example": "Affected Team",
            "maxLength": 50,
            "type": "string"
          },
          "required": {
            "description": "When this custom field must be set during the incident lifecycle.",
            "enum": [
              "never",
              "before_closure",
              "always"
            ],
            "example": "never",
            "type": "string"
          },
          "show_before_closure": {
            "description": "Whether a custom field should be shown in the incident close modal. If this custom field is required before closure, but no value has been set for it, the field will be shown in the closure modal whatever the value of this setting.",
            "example": true,
            "type": "boolean"
          },
          "show_before_creation": {
            "description": "Whether a custom field should be shown in the incident creation modal. This must be true if the field is always required.",
            "example": true,
            "type": "boolean"
          },
          "show_before_update": {
            "description": "Whether a custom field should be shown in the incident update modal.",
            "example": true,
            "type": "boolean"
          },
          "show_in_announcement_post": {
            "description": "Whether a custom field should be shown in the list of fields as part of the announcement post when set.",
            "example": true,
            "type": "boolean"
          }
        },
        "required": [
          "description",
          "name",
          "required",
          "show_before_closure",
          "show_before_creation",
          "show_before_update"
        ],
        "title": "CustomFieldsV1UpdateRequestBody",
        "type": "object"
      },
      "CustomFieldsV1UpdateResponseBody": {
        "example": {
          "custom_field": {
            "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Which team is impacted by this issue",
            "field_type": "single_select",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "name": "Affected Team",
            "options": [
              {
                "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "sort_key": 10,
                "value": "Product"
              }
            ],
            "required": "never",
            "show_before_closure": true,
            "show_before_creation": true,
            "show_before_update": true,
            "show_in_announcement_post": true,
            "updated_at": "2021-08-17T13:28:57.801578Z"
          }
        },
        "properties": {
          "custom_field": {
            "$ref": "#/components/schemas/CustomFieldV1ResponseBody"
          }
        },
        "required": [
          "custom_field"
        ],
        "title": "CustomFieldsV1UpdateResponseBody",
        "type": "object"
      },
      "EmbeddedCatalogEntryV1ResponseBody": {
        "example": {
          "aliases": [
            "lawrence@incident.io",
            "lawrence"
          ],
          "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "name": "Primary On-call"
        },
        "properties": {
          "aliases": {
            "description": "Optional aliases that can be used to reference this entry",
            "example": [
              "lawrence@incident.io",
              "lawrence"
            ],
            "items": {
              "example": "abc123",
              "type": "string"
            },
            "type": "array"
          },
          "external_id": {
            "description": "An optional alternative ID for this entry, which is ensured to be unique for the type",
            "example": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
            "type": "string"
          },
          "id": {
            "description": "ID of this catalog entry",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "name": {
            "description": "Name is the human readable name of this entry",
            "example": "Primary On-call",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name"
        ],
        "title": "EmbeddedCatalogEntryV1ResponseBody",
        "type": "object"
      },
      "EmbeddedCatalogEntryV2ResponseBody": {
        "example": {
          "aliases": [
            "lawrence@incident.io",
            "lawrence"
          ],
          "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "name": "Primary On-call"
        },
        "properties": {
          "aliases": {
            "description": "Optional aliases that can be used to reference this entry",
            "example": [
              "lawrence@incident.io",
              "lawrence"
            ],
            "items": {
              "example": "abc123",
              "type": "string"
            },
            "type": "array"
          },
          "external_id": {
            "description": "An optional alternative ID for this entry, which is ensured to be unique for the type",
            "example": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
            "type": "string"
          },
          "id": {
            "description": "ID of this catalog entry",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "name": {
            "description": "Name is the human readable name of this entry",
            "example": "Primary On-call",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name"
        ],
        "title": "EmbeddedCatalogEntryV2ResponseBody",
        "type": "object"
      },
      "ExternalIssueReferenceV1ResponseBody": {
        "example": {
          "issue_name": "INC-123",
          "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
          "provider": "asana"
        },
        "properties": {
          "issue_name": {
            "description": "Human readable ID for the issue",
            "example": "INC-123",
            "type": "string"
          },
          "issue_permalink": {
            "description": "URL linking directly to the action in the issue tracker",
            "example": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
            "type": "string"
          },
          "provider": {
            "description": "ID of the issue tracker provider",
            "enum": [
              "asana",
              "linear",
              "jira",
              "jira_server",
              "github",
              "shortcut"
            ],
            "example": "asana",
            "type": "string"
          }
        },
        "title": "ExternalIssueReferenceV1ResponseBody",
        "type": "object"
      },
      "ExternalIssueReferenceV2ResponseBody": {
        "example": {
          "issue_name": "INC-123",
          "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
          "provider": "asana"
        },
        "properties": {
          "issue_name": {
            "description": "Human readable ID for the issue",
            "example": "INC-123",
            "type": "string"
          },
          "issue_permalink": {
            "description": "URL linking directly to the action in the issue tracker",
            "example": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
            "type": "string"
          },
          "provider": {
            "description": "ID of the issue tracker provider",
            "enum": [
              "asana",
              "linear",
              "jira",
              "jira_server",
              "github",
              "shortcut"
            ],
            "example": "asana",
            "type": "string"
          }
        },
        "required": [
          "issue_name",
          "issue_permalink",
          "provider"
        ],
        "title": "ExternalIssueReferenceV2ResponseBody",
        "type": "object"
      },
      "ExternalResourceV1ResponseBody": {
        "example": {
          "external_id": "123",
          "permalink": "https://my.pagerduty.com/incidents/ABC",
          "resource_type": "pager_duty_incident",
          "title": "The database has gone down"
        },
        "properties": {
          "external_id": {
            "description": "ID of the resource in the external system",
            "example": "123",
            "type": "string"
          },
          "permalink": {
            "description": "URL of the resource",
            "example": "https://my.pagerduty.com/incidents/ABC",
            "type": "string"
          },
          "resource_type": {
            "description": "E.g. PagerDuty: the external system that holds the resource",
            "enum": [
              "pager_duty_incident",
              "opsgenie_alert",
              "datadog_monitor_alert",
              "github_pull_request",
              "sentry_issue",
              "atlassian_statuspage_incident",
              "zendesk_ticket",
              "google_calendar_event",
              "statuspage_incident"
            ],
            "example": "pager_duty_incident",
            "type": "string"
          },
          "title": {
            "description": "Title of resource",
            "example": "The database has gone down",
            "type": "string"
          }
        },
        "required": [
          "external_id",
          "permalink",
          "resource_type",
          "title"
        ],
        "title": "ExternalResourceV1ResponseBody",
        "type": "object"
      },
      "FollowUpPriorityV2ResponseBody": {
        "example": {
          "description": "A follow-up that requires immediate attention.",
          "id": "01GNW4BAQ7XRMFF6FHKNXDFPRW",
          "name": "Urgent",
          "rank": 10
        },
        "properties": {
          "description": {
            "description": "Description of the follow-up priority option",
            "example": "A follow-up that requires immediate attention.",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the follow-up priority option",
            "example": "01GNW4BAQ7XRMFF6FHKNXDFPRW",
            "type": "string"
          },
          "name": {
            "description": "Name of the follow-up priority option",
            "example": "Urgent",
            "type": "string"
          },
          "rank": {
            "description": "Rank is used to order the follow-up priority options correctly",
            "example": 10,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "id",
          "name",
          "rank"
        ],
        "title": "FollowUpPriorityV2ResponseBody",
        "type": "object"
      },
      "FollowUpV2ResponseBody": {
        "example": {
          "assignee": {
            "email": "lisa@incident.io",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "name": "Lisa Karlin Curtis",
            "role": "viewer",
            "slack_user_id": "U02AYNF2XJM"
          },
          "completed_at": "2021-08-17T13:28:57.801578Z",
          "created_at": "2021-08-17T13:28:57.801578Z",
          "description": "Call the fire brigade",
          "external_issue_reference": {
            "issue_name": "INC-123",
            "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
            "provider": "asana"
          },
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "incident_id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "priority": {
            "description": "A follow-up that requires immediate attention.",
            "id": "01GNW4BAQ7XRMFF6FHKNXDFPRW",
            "name": "Urgent",
            "rank": 10
          },
          "status": "outstanding",
          "title": "Cat is stuck in the tree",
          "updated_at": "2021-08-17T13:28:57.801578Z"
        },
        "properties": {
          "assignee": {
            "$ref": "#/components/schemas/UserV2ResponseBody"
          },
          "completed_at": {
            "description": "When the follow-up was completed",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "created_at": {
            "description": "When the follow-up was created",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "description": {
            "description": "Description of the follow-up",
            "example": "Call the fire brigade",
            "type": "string"
          },
          "external_issue_reference": {
            "$ref": "#/components/schemas/ExternalIssueReferenceV2ResponseBody"
          },
          "id": {
            "description": "Unique identifier for the follow-up",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "incident_id": {
            "description": "Unique identifier of the incident the follow-up belongs to",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "priority": {
            "$ref": "#/components/schemas/FollowUpPriorityV2ResponseBody"
          },
          "status": {
            "description": "Status of the follow-up",
            "enum": [
              "outstanding",
              "completed",
              "deleted",
              "not_doing"
            ],
            "example": "outstanding",
            "type": "string"
          },
          "title": {
            "description": "Title of the follow-up",
            "example": "Cat is stuck in the tree",
            "type": "string"
          },
          "updated_at": {
            "description": "When the follow-up was last updated",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "created_at",
          "id",
          "incident_id",
          "status",
          "title",
          "updated_at"
        ],
        "title": "FollowUpV2ResponseBody",
        "type": "object"
      },
      "FollowUpsV2ListResponseBody": {
        "example": {
          "follow_ups": [
            {
              "assignee": {
                "email": "lisa@incident.io",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Lisa Karlin Curtis",
                "role": "viewer",
                "slack_user_id": "U02AYNF2XJM"
              },
              "completed_at": "2021-08-17T13:28:57.801578Z",
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Call the fire brigade",
              "external_issue_reference": {
                "issue_name": "INC-123",
                "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
                "provider": "asana"
              },
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "incident_id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "priority": {
                "description": "A follow-up that requires immediate attention.",
                "id": "01GNW4BAQ7XRMFF6FHKNXDFPRW",
                "name": "Urgent",
                "rank": 10
              },
              "status": "outstanding",
              "title": "Cat is stuck in the tree",
              "updated_at": "2021-08-17T13:28:57.801578Z"
            }
          ]
        },
        "properties": {
          "follow_ups": {
            "example": [
              {
                "assignee": {
                  "email": "lisa@incident.io",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Lisa Karlin Curtis",
                  "role": "viewer",
                  "slack_user_id": "U02AYNF2XJM"
                },
                "completed_at": "2021-08-17T13:28:57.801578Z",
                "created_at": "2021-08-17T13:28:57.801578Z",
                "description": "Call the fire brigade",
                "external_issue_reference": {
                  "issue_name": "INC-123",
                  "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
                  "provider": "asana"
                },
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "incident_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "priority": {
                  "description": "A follow-up that requires immediate attention.",
                  "id": "01GNW4BAQ7XRMFF6FHKNXDFPRW",
                  "name": "Urgent",
                  "rank": 10
                },
                "status": "outstanding",
                "title": "Cat is stuck in the tree",
                "updated_at": "2021-08-17T13:28:57.801578Z"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/FollowUpV2ResponseBody"
            },
            "type": "array"
          }
        },
        "required": [
          "follow_ups"
        ],
        "title": "FollowUpsV2ListResponseBody",
        "type": "object"
      },
      "FollowUpsV2ShowResponseBody": {
        "example": {
          "follow_up": {
            "assignee": {
              "email": "lisa@incident.io",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Lisa Karlin Curtis",
              "role": "viewer",
              "slack_user_id": "U02AYNF2XJM"
            },
            "completed_at": "2021-08-17T13:28:57.801578Z",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Call the fire brigade",
            "external_issue_reference": {
              "issue_name": "INC-123",
              "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
              "provider": "asana"
            },
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "incident_id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "priority": {
              "description": "A follow-up that requires immediate attention.",
              "id": "01GNW4BAQ7XRMFF6FHKNXDFPRW",
              "name": "Urgent",
              "rank": 10
            },
            "status": "outstanding",
            "title": "Cat is stuck in the tree",
            "updated_at": "2021-08-17T13:28:57.801578Z"
          }
        },
        "properties": {
          "follow_up": {
            "$ref": "#/components/schemas/FollowUpV2ResponseBody"
          }
        },
        "required": [
          "follow_up"
        ],
        "title": "FollowUpsV2ShowResponseBody",
        "type": "object"
      },
      "IdentityV1ResponseBody": {
        "example": {
          "name": "Alertmanager token",
          "roles": [
            "incident_creator"
          ]
        },
        "properties": {
          "name": {
            "description": "The name assigned to the current API Key",
            "example": "Alertmanager token",
            "type": "string"
          },
          "roles": {
            "description": "Which roles have been enabled for this key",
            "example": [
              "incident_creator"
            ],
            "items": {
              "enum": [
                "viewer",
                "incident_creator",
                "incident_editor",
                "manage_settings",
                "global_access",
                "catalog_viewer",
                "catalog_editor"
              ],
              "example": "incident_creator",
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "name",
          "roles"
        ],
        "title": "IdentityV1ResponseBody",
        "type": "object"
      },
      "IncidentAttachmentV1ResponseBody": {
        "example": {
          "id": "01FCNDV6P870EA6S7TK1DSYD5H",
          "incident_id": "01FCNDV6P870EA6S7TK1DSYD5H",
          "resource": {
            "external_id": "123",
            "permalink": "https://my.pagerduty.com/incidents/ABC",
            "resource_type": "pager_duty_incident",
            "title": "The database has gone down"
          }
        },
        "properties": {
          "id": {
            "description": "Unique identifier of this incident membership",
            "example": "01FCNDV6P870EA6S7TK1DSYD5H",
            "type": "string"
          },
          "incident_id": {
            "description": "Unique identifier of the incident",
            "example": "01FCNDV6P870EA6S7TK1DSYD5H",
            "type": "string"
          },
          "resource": {
            "$ref": "#/components/schemas/ExternalResourceV1ResponseBody"
          }
        },
        "required": [
          "id",
          "incident_id",
          "resource"
        ],
        "title": "IncidentAttachmentV1ResponseBody",
        "type": "object"
      },
      "IncidentAttachmentsV1CreateRequestBody": {
        "example": {
          "incident_id": "01FDAG4SAP5TYPT98WGR2N7W91",
          "resource": {
            "external_id": "123",
            "resource_type": "pager_duty_incident"
          }
        },
        "properties": {
          "incident_id": {
            "description": "ID of the incident to add an attachment to",
            "example": "01FDAG4SAP5TYPT98WGR2N7W91",
            "type": "string"
          },
          "resource": {
            "example": {
              "external_id": "123",
              "resource_type": "pager_duty_incident"
            },
            "properties": {
              "external_id": {
                "description": "ID of the resource in the external system",
                "example": "123",
                "type": "string"
              },
              "resource_type": {
                "description": "E.g. PagerDuty: the external system that holds the resource",
                "enum": [
                  "pager_duty_incident",
                  "opsgenie_alert",
                  "datadog_monitor_alert",
                  "github_pull_request",
                  "sentry_issue",
                  "atlassian_statuspage_incident",
                  "zendesk_ticket",
                  "google_calendar_event",
                  "statuspage_incident"
                ],
                "example": "pager_duty_incident",
                "type": "string"
              }
            },
            "required": [
              "external_id",
              "resource_type"
            ],
            "type": "object"
          }
        },
        "required": [
          "incident_id",
          "resource"
        ],
        "title": "IncidentAttachmentsV1CreateRequestBody",
        "type": "object"
      },
      "IncidentAttachmentsV1CreateResponseBody": {
        "example": {
          "incident_attachment": {
            "id": "01FCNDV6P870EA6S7TK1DSYD5H",
            "incident_id": "01FCNDV6P870EA6S7TK1DSYD5H",
            "resource": {
              "external_id": "123",
              "permalink": "https://my.pagerduty.com/incidents/ABC",
              "resource_type": "pager_duty_incident",
              "title": "The database has gone down"
            }
          }
        },
        "properties": {
          "incident_attachment": {
            "$ref": "#/components/schemas/IncidentAttachmentV1ResponseBody"
          }
        },
        "required": [
          "incident_attachment"
        ],
        "title": "IncidentAttachmentsV1CreateResponseBody",
        "type": "object"
      },
      "IncidentAttachmentsV1ListResponseBody": {
        "example": {
          "incident_attachments": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYD5H",
              "incident_id": "01FCNDV6P870EA6S7TK1DSYD5H",
              "resource": {
                "external_id": "123",
                "permalink": "https://my.pagerduty.com/incidents/ABC",
                "resource_type": "pager_duty_incident",
                "title": "The database has gone down"
              }
            }
          ]
        },
        "properties": {
          "incident_attachments": {
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                "incident_id": "01FCNDV6P870EA6S7TK1DSYD5H",
                "resource": {
                  "external_id": "123",
                  "permalink": "https://my.pagerduty.com/incidents/ABC",
                  "resource_type": "pager_duty_incident",
                  "title": "The database has gone down"
                }
              }
            ],
            "items": {
              "$ref": "#/components/schemas/IncidentAttachmentV1ResponseBody"
            },
            "type": "array"
          }
        },
        "required": [
          "incident_attachments"
        ],
        "title": "IncidentAttachmentsV1ListResponseBody",
        "type": "object"
      },
      "IncidentEditPayloadV2RequestBody": {
        "example": {
          "custom_field_entries": [
            {
              "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "values": [
                {
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "value_catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "value_link": "https://google.com/",
                  "value_numeric": "123.456",
                  "value_option_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "value_text": "This is my text field, I hope you like it",
                  "value_timestamp": ""
                }
              ]
            }
          ],
          "incident_timestamp_values": [
            {
              "incident_timestamp_id": "01FCNDV6P870EA6S7TK1DSYD5H",
              "value": "2021-08-17T13:28:57.801578Z"
            }
          ],
          "name": "Our database is sad",
          "severity_id": "01FH5TZRWMNAFB0DZ23FD1TV96",
          "summary": "Our database is really really sad, and we don't know why yet."
        },
        "properties": {
          "custom_field_entries": {
            "description": "Set the incident's custom fields to these values",
            "example": [
              {
                "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "values": [
                  {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "value_catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "value_link": "https://google.com/",
                    "value_numeric": "123.456",
                    "value_option_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "value_text": "This is my text field, I hope you like it",
                    "value_timestamp": ""
                  }
                ]
              }
            ],
            "items": {
              "$ref": "#/components/schemas/CustomFieldEntryPayloadV2RequestBody"
            },
            "type": "array"
          },
          "incident_timestamp_values": {
            "description": "Assign the incident's timestamps to these values",
            "example": [
              {
                "incident_timestamp_id": "01FCNDV6P870EA6S7TK1DSYD5H",
                "value": "2021-08-17T13:28:57.801578Z"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/IncidentTimestampValuePayloadV2RequestBody"
            },
            "type": "array"
          },
          "name": {
            "description": "Explanation of the incident",
            "example": "Our database is sad",
            "type": "string"
          },
          "severity_id": {
            "description": "Severity to change incident to",
            "example": "01FH5TZRWMNAFB0DZ23FD1TV96",
            "type": "string"
          },
          "summary": {
            "description": "Detailed description of the incident",
            "example": "Our database is really really sad, and we don't know why yet.",
            "type": "string"
          }
        },
        "title": "IncidentEditPayloadV2RequestBody",
        "type": "object"
      },
      "IncidentRoleAssignmentPayloadV1RequestBody": {
        "example": {
          "assignee": {
            "email": "bob@example.com",
            "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
            "slack_user_id": "USER123"
          },
          "incident_role_id": "01FH5TZRWMNAFB0DZ23FD1TV96"
        },
        "properties": {
          "assignee": {
            "$ref": "#/components/schemas/UserReferencePayloadV1RequestBody"
          },
          "incident_role_id": {
            "description": "Unique ID of an incident role",
            "example": "01FH5TZRWMNAFB0DZ23FD1TV96",
            "type": "string"
          }
        },
        "required": [
          "assignee",
          "incident_role_id"
        ],
        "title": "IncidentRoleAssignmentPayloadV1RequestBody",
        "type": "object"
      },
      "IncidentRoleAssignmentPayloadV2RequestBody": {
        "example": {
          "assignee": {
            "email": "bob@example.com",
            "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
            "slack_user_id": "USER123"
          },
          "incident_role_id": "01FH5TZRWMNAFB0DZ23FD1TV96"
        },
        "properties": {
          "assignee": {
            "$ref": "#/components/schemas/UserReferencePayloadV2RequestBody"
          },
          "incident_role_id": {
            "description": "Unique ID of an incident role",
            "example": "01FH5TZRWMNAFB0DZ23FD1TV96",
            "type": "string"
          }
        },
        "required": [
          "incident_role_id"
        ],
        "title": "IncidentRoleAssignmentPayloadV2RequestBody",
        "type": "object"
      },
      "IncidentRoleAssignmentV1ResponseBody": {
        "example": {
          "assignee": {
            "email": "lisa@incident.io",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "name": "Lisa Karlin Curtis",
            "role": "viewer",
            "slack_user_id": "U02AYNF2XJM"
          },
          "role": {
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "The person currently coordinating the incident",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
            "name": "Incident Lead",
            "required": true,
            "role_type": "lead",
            "shortform": "lead",
            "updated_at": "2021-08-17T13:28:57.801578Z"
          }
        },
        "properties": {
          "assignee": {
            "$ref": "#/components/schemas/UserV1ResponseBody"
          },
          "role": {
            "$ref": "#/components/schemas/IncidentRoleV1ResponseBody"
          }
        },
        "required": [
          "role"
        ],
        "title": "IncidentRoleAssignmentV1ResponseBody",
        "type": "object"
      },
      "IncidentRoleAssignmentV2ResponseBody": {
        "example": {
          "assignee": {
            "email": "lisa@incident.io",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "name": "Lisa Karlin Curtis",
            "role": "viewer",
            "slack_user_id": "U02AYNF2XJM"
          },
          "role": {
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "The person currently coordinating the incident",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
            "name": "Incident Lead",
            "required": true,
            "role_type": "lead",
            "shortform": "lead",
            "updated_at": "2021-08-17T13:28:57.801578Z"
          }
        },
        "properties": {
          "assignee": {
            "$ref": "#/components/schemas/UserV2ResponseBody"
          },
          "role": {
            "$ref": "#/components/schemas/IncidentRoleV2ResponseBody"
          }
        },
        "required": [
          "role"
        ],
        "title": "IncidentRoleAssignmentV2ResponseBody",
        "type": "object"
      },
      "IncidentRoleV1ResponseBody": {
        "example": {
          "created_at": "2021-08-17T13:28:57.801578Z",
          "description": "The person currently coordinating the incident",
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
          "name": "Incident Lead",
          "required": true,
          "role_type": "lead",
          "shortform": "lead",
          "updated_at": "2021-08-17T13:28:57.801578Z"
        },
        "properties": {
          "created_at": {
            "description": "When the action was created",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "description": {
            "description": "Describes the purpose of the role",
            "example": "The person currently coordinating the incident",
            "minLength": 1,
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the role",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "instructions": {
            "description": "Provided to whoever is nominated for the role",
            "example": "Take point on the incident; Make sure people are clear on responsibilities",
            "type": "string"
          },
          "name": {
            "description": "Human readable name of the incident role",
            "example": "Incident Lead",
            "minLength": 1,
            "type": "string"
          },
          "required": {
            "description": "Whether incident require this role to be set",
            "example": true,
            "type": "boolean"
          },
          "role_type": {
            "description": "Type of incident role",
            "enum": [
              "lead",
              "reporter",
              "custom"
            ],
            "example": "lead",
            "type": "string"
          },
          "shortform": {
            "description": "Short human readable name for Slack",
            "example": "lead",
            "minLength": 1,
            "type": "string"
          },
          "updated_at": {
            "description": "When the action was last updated",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "created_at",
          "description",
          "id",
          "instructions",
          "name",
          "required",
          "role_type",
          "shortform",
          "updated_at"
        ],
        "title": "IncidentRoleV1ResponseBody",
        "type": "object"
      },
      "IncidentRoleV2ResponseBody": {
        "example": {
          "created_at": "2021-08-17T13:28:57.801578Z",
          "description": "The person currently coordinating the incident",
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
          "name": "Incident Lead",
          "required": true,
          "role_type": "lead",
          "shortform": "lead",
          "updated_at": "2021-08-17T13:28:57.801578Z"
        },
        "properties": {
          "created_at": {
            "description": "When the action was created",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "description": {
            "description": "Describes the purpose of the role",
            "example": "The person currently coordinating the incident",
            "minLength": 1,
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the role",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "instructions": {
            "description": "Provided to whoever is nominated for the role",
            "example": "Take point on the incident; Make sure people are clear on responsibilities",
            "type": "string"
          },
          "name": {
            "description": "Human readable name of the incident role",
            "example": "Incident Lead",
            "minLength": 1,
            "type": "string"
          },
          "required": {
            "description": "Whether incident require this role to be set",
            "example": true,
            "type": "boolean"
          },
          "role_type": {
            "description": "Type of incident role",
            "enum": [
              "lead",
              "reporter",
              "custom"
            ],
            "example": "lead",
            "type": "string"
          },
          "shortform": {
            "description": "Short human readable name for Slack",
            "example": "lead",
            "minLength": 1,
            "type": "string"
          },
          "updated_at": {
            "description": "When the action was last updated",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "created_at",
          "description",
          "id",
          "instructions",
          "name",
          "required",
          "role_type",
          "shortform",
          "updated_at"
        ],
        "title": "IncidentRoleV2ResponseBody",
        "type": "object"
      },
      "IncidentRolesV1CreateRequestBody": {
        "example": {
          "description": "The person currently coordinating the incident",
          "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
          "name": "Incident Lead",
          "required": true,
          "shortform": "lead"
        },
        "properties": {
          "description": {
            "description": "Describes the purpose of the role",
            "example": "The person currently coordinating the incident",
            "minLength": 1,
            "type": "string"
          },
          "instructions": {
            "description": "Provided to whoever is nominated for the role",
            "example": "Take point on the incident; Make sure people are clear on responsibilities",
            "type": "string"
          },
          "name": {
            "description": "Human readable name of the incident role",
            "example": "Incident Lead",
            "minLength": 1,
            "type": "string"
          },
          "required": {
            "description": "Whether incident require this role to be set",
            "example": true,
            "type": "boolean"
          },
          "shortform": {
            "description": "Short human readable name for Slack",
            "example": "lead",
            "minLength": 1,
            "type": "string"
          }
        },
        "required": [
          "description",
          "instructions",
          "name",
          "required",
          "shortform"
        ],
        "title": "IncidentRolesV1CreateRequestBody",
        "type": "object"
      },
      "IncidentRolesV1CreateResponseBody": {
        "example": {
          "incident_role": {
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "The person currently coordinating the incident",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
            "name": "Incident Lead",
            "required": true,
            "role_type": "lead",
            "shortform": "lead",
            "updated_at": "2021-08-17T13:28:57.801578Z"
          }
        },
        "properties": {
          "incident_role": {
            "$ref": "#/components/schemas/IncidentRoleV1ResponseBody"
          }
        },
        "required": [
          "incident_role"
        ],
        "title": "IncidentRolesV1CreateResponseBody",
        "type": "object"
      },
      "IncidentRolesV1ListResponseBody": {
        "example": {
          "incident_roles": [
            {
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "The person currently coordinating the incident",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
              "name": "Incident Lead",
              "required": true,
              "role_type": "lead",
              "shortform": "lead",
              "updated_at": "2021-08-17T13:28:57.801578Z"
            }
          ]
        },
        "properties": {
          "incident_roles": {
            "example": [
              {
                "created_at": "2021-08-17T13:28:57.801578Z",
                "description": "The person currently coordinating the incident",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                "name": "Incident Lead",
                "required": true,
                "role_type": "lead",
                "shortform": "lead",
                "updated_at": "2021-08-17T13:28:57.801578Z"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/IncidentRoleV1ResponseBody"
            },
            "type": "array"
          }
        },
        "required": [
          "incident_roles"
        ],
        "title": "IncidentRolesV1ListResponseBody",
        "type": "object"
      },
      "IncidentRolesV1ShowResponseBody": {
        "example": {
          "incident_role": {
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "The person currently coordinating the incident",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
            "name": "Incident Lead",
            "required": true,
            "role_type": "lead",
            "shortform": "lead",
            "updated_at": "2021-08-17T13:28:57.801578Z"
          }
        },
        "properties": {
          "incident_role": {
            "$ref": "#/components/schemas/IncidentRoleV1ResponseBody"
          }
        },
        "required": [
          "incident_role"
        ],
        "title": "IncidentRolesV1ShowResponseBody",
        "type": "object"
      },
      "IncidentRolesV1UpdateRequestBody": {
        "example": {
          "description": "The person currently coordinating the incident",
          "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
          "name": "Incident Lead",
          "required": true,
          "shortform": "lead"
        },
        "properties": {
          "description": {
            "description": "Describes the purpose of the role",
            "example": "The person currently coordinating the incident",
            "minLength": 1,
            "type": "string"
          },
          "instructions": {
            "description": "Provided to whoever is nominated for the role",
            "example": "Take point on the incident; Make sure people are clear on responsibilities",
            "type": "string"
          },
          "name": {
            "description": "Human readable name of the incident role",
            "example": "Incident Lead",
            "minLength": 1,
            "type": "string"
          },
          "required": {
            "description": "Whether incident require this role to be set",
            "example": true,
            "type": "boolean"
          },
          "shortform": {
            "description": "Short human readable name for Slack",
            "example": "lead",
            "minLength": 1,
            "type": "string"
          }
        },
        "required": [
          "description",
          "instructions",
          "name",
          "required",
          "shortform"
        ],
        "title": "IncidentRolesV1UpdateRequestBody",
        "type": "object"
      },
      "IncidentRolesV1UpdateResponseBody": {
        "example": {
          "incident_role": {
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "The person currently coordinating the incident",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
            "name": "Incident Lead",
            "required": true,
            "role_type": "lead",
            "shortform": "lead",
            "updated_at": "2021-08-17T13:28:57.801578Z"
          }
        },
        "properties": {
          "incident_role": {
            "$ref": "#/components/schemas/IncidentRoleV1ResponseBody"
          }
        },
        "required": [
          "incident_role"
        ],
        "title": "IncidentRolesV1UpdateResponseBody",
        "type": "object"
      },
      "IncidentStatusV1ResponseBody": {
        "example": {
          "category": "triage",
          "created_at": "2021-08-17T13:28:57.801578Z",
          "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
          "id": "01FCNDV6P870EA6S7TK1DSYD5H",
          "name": "Closed",
          "rank": 4,
          "updated_at": "2021-08-17T13:28:57.801578Z"
        },
        "properties": {
          "category": {
            "description": "Whether this status is a live or closed status. If you have enabled auto-create, there will also be 'triage' and 'declined' statuses, which cannot be modified.",
            "enum": [
              "triage",
              "declined",
              "merged",
              "canceled",
              "live",
              "learning",
              "closed"
            ],
            "example": "triage",
            "type": "string"
          },
          "created_at": {
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "description": {
            "description": "Rich text description of the incident status",
            "example": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
            "type": "string"
          },
          "id": {
            "description": "Unique ID of this incident status",
            "example": "01FCNDV6P870EA6S7TK1DSYD5H",
            "type": "string"
          },
          "name": {
            "description": "Unique name of this status",
            "example": "Closed",
            "type": "string"
          },
          "rank": {
            "description": "Order of this incident status",
            "example": 4,
            "format": "int64",
            "type": "integer"
          },
          "updated_at": {
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "category",
          "created_at",
          "description",
          "id",
          "name",
          "rank",
          "updated_at"
        ],
        "title": "IncidentStatusV1ResponseBody",
        "type": "object"
      },
      "IncidentStatusV2ResponseBody": {
        "example": {
          "category": "triage",
          "created_at": "2021-08-17T13:28:57.801578Z",
          "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
          "id": "01FCNDV6P870EA6S7TK1DSYD5H",
          "name": "Closed",
          "rank": 4,
          "updated_at": "2021-08-17T13:28:57.801578Z"
        },
        "properties": {
          "category": {
            "description": "Whether this status is a live or closed status. If you have enabled auto-create, there will also be 'triage' and 'declined' statuses, which cannot be modified.",
            "enum": [
              "triage",
              "declined",
              "merged",
              "canceled",
              "live",
              "learning",
              "closed"
            ],
            "example": "triage",
            "type": "string"
          },
          "created_at": {
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "description": {
            "description": "Rich text description of the incident status",
            "example": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
            "type": "string"
          },
          "id": {
            "description": "Unique ID of this incident status",
            "example": "01FCNDV6P870EA6S7TK1DSYD5H",
            "type": "string"
          },
          "name": {
            "description": "Unique name of this status",
            "example": "Closed",
            "type": "string"
          },
          "rank": {
            "description": "Order of this incident status",
            "example": 4,
            "format": "int64",
            "type": "integer"
          },
          "updated_at": {
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "category",
          "created_at",
          "description",
          "id",
          "name",
          "rank",
          "updated_at"
        ],
        "title": "IncidentStatusV2ResponseBody",
        "type": "object"
      },
      "IncidentStatusesV1CreateRequestBody": {
        "example": {
          "category": "live",
          "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
          "name": "Closed"
        },
        "properties": {
          "category": {
            "description": "Whether the status should be considered 'live' or 'closed'. The triage and declined statuses cannot be created or modified.",
            "enum": [
              "live",
              "learning",
              "closed"
            ],
            "example": "live",
            "type": "string"
          },
          "description": {
            "description": "Rich text description of the incident status",
            "example": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
            "type": "string"
          },
          "name": {
            "description": "Unique name of this status",
            "example": "Closed",
            "type": "string"
          }
        },
        "required": [
          "category",
          "description",
          "name"
        ],
        "title": "IncidentStatusesV1CreateRequestBody",
        "type": "object"
      },
      "IncidentStatusesV1CreateResponseBody": {
        "example": {
          "incident_status": {
            "category": "triage",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
            "id": "01FCNDV6P870EA6S7TK1DSYD5H",
            "name": "Closed",
            "rank": 4,
            "updated_at": "2021-08-17T13:28:57.801578Z"
          }
        },
        "properties": {
          "incident_status": {
            "$ref": "#/components/schemas/IncidentStatusV1ResponseBody"
          }
        },
        "required": [
          "incident_status"
        ],
        "title": "IncidentStatusesV1CreateResponseBody",
        "type": "object"
      },
      "IncidentStatusesV1ListResponseBody": {
        "example": {
          "incident_statuses": [
            {
              "category": "triage",
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
              "id": "01FCNDV6P870EA6S7TK1DSYD5H",
              "name": "Closed",
              "rank": 4,
              "updated_at": "2021-08-17T13:28:57.801578Z"
            }
          ]
        },
        "properties": {
          "incident_statuses": {
            "example": [
              {
                "category": "triage",
                "created_at": "2021-08-17T13:28:57.801578Z",
                "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
                "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                "name": "Closed",
                "rank": 4,
                "updated_at": "2021-08-17T13:28:57.801578Z"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/IncidentStatusV1ResponseBody"
            },
            "type": "array"
          }
        },
        "required": [
          "incident_statuses"
        ],
        "title": "IncidentStatusesV1ListResponseBody",
        "type": "object"
      },
      "IncidentStatusesV1ShowResponseBody": {
        "example": {
          "incident_status": {
            "category": "triage",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
            "id": "01FCNDV6P870EA6S7TK1DSYD5H",
            "name": "Closed",
            "rank": 4,
            "updated_at": "2021-08-17T13:28:57.801578Z"
          }
        },
        "properties": {
          "incident_status": {
            "$ref": "#/components/schemas/IncidentStatusV1ResponseBody"
          }
        },
        "required": [
          "incident_status"
        ],
        "title": "IncidentStatusesV1ShowResponseBody",
        "type": "object"
      },
      "IncidentStatusesV1UpdateRequestBody": {
        "example": {
          "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
          "name": "Closed"
        },
        "properties": {
          "description": {
            "description": "Rich text description of the incident status",
            "example": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
            "type": "string"
          },
          "name": {
            "description": "Unique name of this status",
            "example": "Closed",
            "type": "string"
          }
        },
        "required": [
          "description",
          "name"
        ],
        "title": "IncidentStatusesV1UpdateRequestBody",
        "type": "object"
      },
      "IncidentStatusesV1UpdateResponseBody": {
        "example": {
          "incident_status": {
            "category": "triage",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
            "id": "01FCNDV6P870EA6S7TK1DSYD5H",
            "name": "Closed",
            "rank": 4,
            "updated_at": "2021-08-17T13:28:57.801578Z"
          }
        },
        "properties": {
          "incident_status": {
            "$ref": "#/components/schemas/IncidentStatusV1ResponseBody"
          }
        },
        "required": [
          "incident_status"
        ],
        "title": "IncidentStatusesV1UpdateResponseBody",
        "type": "object"
      },
      "IncidentTimestampV1ResponseBody": {
        "example": {
          "last_occurred_at": "2021-08-17T13:28:57.801578Z",
          "name": "last_activity"
        },
        "properties": {
          "last_occurred_at": {
            "description": "When this last occurred, if it did",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "name": {
            "description": "Name of the lifecycle event",
            "example": "last_activity",
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "title": "IncidentTimestampV1ResponseBody",
        "type": "object"
      },
      "IncidentTimestampV2ResponseBody": {
        "example": {
          "id": "01FCNDV6P870EA6S7TK1DSYD5H",
          "name": "Impact started",
          "rank": 1
        },
        "properties": {
          "id": {
            "description": "Unique ID of this incident timestamp",
            "example": "01FCNDV6P870EA6S7TK1DSYD5H",
            "type": "string"
          },
          "name": {
            "description": "Unique name of this timestamp",
            "example": "Impact started",
            "type": "string"
          },
          "rank": {
            "description": "Order in which this timestamp should be shown",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "id",
          "name",
          "rank"
        ],
        "title": "IncidentTimestampV2ResponseBody",
        "type": "object"
      },
      "IncidentTimestampValuePayloadV2RequestBody": {
        "example": {
          "incident_timestamp_id": "01FCNDV6P870EA6S7TK1DSYD5H",
          "value": "2021-08-17T13:28:57.801578Z"
        },
        "properties": {
          "incident_timestamp_id": {
            "description": "The id of the incident timestamp that this incident timestamp value is associated with.",
            "example": "01FCNDV6P870EA6S7TK1DSYD5H",
            "type": "string"
          },
          "value": {
            "description": "The current value of this timestamp, for this incident",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "incident_timestamp_id"
        ],
        "title": "IncidentTimestampValuePayloadV2RequestBody",
        "type": "object"
      },
      "IncidentTimestampValueV2ResponseBody": {
        "example": {
          "value": "2021-08-17T13:28:57.801578Z"
        },
        "properties": {
          "value": {
            "description": "The current value of this timestamp, for this incident",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          }
        },
        "title": "IncidentTimestampValueV2ResponseBody",
        "type": "object"
      },
      "IncidentTimestampWithValueV2ResponseBody": {
        "example": {
          "incident_timestamp": {
            "id": "01FCNDV6P870EA6S7TK1DSYD5H",
            "name": "Impact started",
            "rank": 1
          },
          "value": {
            "value": "2021-08-17T13:28:57.801578Z"
          }
        },
        "properties": {
          "incident_timestamp": {
            "$ref": "#/components/schemas/IncidentTimestampV2ResponseBody"
          },
          "value": {
            "$ref": "#/components/schemas/IncidentTimestampValueV2ResponseBody"
          }
        },
        "required": [
          "incident_timestamp"
        ],
        "title": "IncidentTimestampWithValueV2ResponseBody",
        "type": "object"
      },
      "IncidentTimestampsV2ListResponseBody": {
        "example": {
          "incident_timestamps": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYD5H",
              "name": "Impact started",
              "rank": 1
            }
          ]
        },
        "properties": {
          "incident_timestamps": {
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                "name": "Impact started",
                "rank": 1
              }
            ],
            "items": {
              "$ref": "#/components/schemas/IncidentTimestampV2ResponseBody"
            },
            "type": "array"
          }
        },
        "required": [
          "incident_timestamps"
        ],
        "title": "IncidentTimestampsV2ListResponseBody",
        "type": "object"
      },
      "IncidentTimestampsV2ShowResponseBody": {
        "example": {
          "incident_timestamp": {
            "id": "01FCNDV6P870EA6S7TK1DSYD5H",
            "name": "Impact started",
            "rank": 1
          }
        },
        "properties": {
          "incident_timestamp": {
            "$ref": "#/components/schemas/IncidentTimestampV2ResponseBody"
          }
        },
        "required": [
          "incident_timestamp"
        ],
        "title": "IncidentTimestampsV2ShowResponseBody",
        "type": "object"
      },
      "IncidentTypeV1ResponseBody": {
        "example": {
          "create_in_triage": "always",
          "created_at": "2021-08-17T13:28:57.801578Z",
          "description": "Customer facing production outages",
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "is_default": false,
          "name": "Production Outage",
          "private_incidents_only": false,
          "updated_at": "2021-08-17T13:28:57.801578Z"
        },
        "properties": {
          "create_in_triage": {
            "description": "Whether incidents of this must always, or can optionally, be created in triage",
            "enum": [
              "always",
              "optional"
            ],
            "example": "always",
            "type": "string"
          },
          "created_at": {
            "description": "When this resource was created",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "description": {
            "description": "What is this incident type for?",
            "example": "Customer facing production outages",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for this Incident Type",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "is_default": {
            "description": "The default Incident Type is used when no other type is explicitly specified",
            "example": false,
            "type": "boolean"
          },
          "name": {
            "description": "The name of this Incident Type",
            "example": "Production Outage",
            "type": "string"
          },
          "private_incidents_only": {
            "description": "Should all incidents created with this Incident Type be private?",
            "example": false,
            "type": "boolean"
          },
          "updated_at": {
            "description": "When this resource was last updated",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "create_in_triage",
          "created_at",
          "description",
          "id",
          "is_default",
          "name",
          "private_incidents_only",
          "updated_at"
        ],
        "title": "IncidentTypeV1ResponseBody",
        "type": "object"
      },
      "IncidentTypeV2ResponseBody": {
        "example": {
          "create_in_triage": "always",
          "created_at": "2021-08-17T13:28:57.801578Z",
          "description": "Customer facing production outages",
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "is_default": false,
          "name": "Production Outage",
          "private_incidents_only": false,
          "updated_at": "2021-08-17T13:28:57.801578Z"
        },
        "properties": {
          "create_in_triage": {
            "description": "Whether incidents of this must always, or can optionally, be created in triage",
            "enum": [
              "always",
              "optional"
            ],
            "example": "always",
            "type": "string"
          },
          "created_at": {
            "description": "When this resource was created",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "description": {
            "description": "What is this incident type for?",
            "example": "Customer facing production outages",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for this Incident Type",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "is_default": {
            "description": "The default Incident Type is used when no other type is explicitly specified",
            "example": false,
            "type": "boolean"
          },
          "name": {
            "description": "The name of this Incident Type",
            "example": "Production Outage",
            "type": "string"
          },
          "private_incidents_only": {
            "description": "Should all incidents created with this Incident Type be private?",
            "example": false,
            "type": "boolean"
          },
          "updated_at": {
            "description": "When this resource was last updated",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "create_in_triage",
          "created_at",
          "description",
          "id",
          "is_default",
          "name",
          "private_incidents_only",
          "updated_at"
        ],
        "title": "IncidentTypeV2ResponseBody",
        "type": "object"
      },
      "IncidentTypesV1ListResponseBody": {
        "example": {
          "incident_types": [
            {
              "create_in_triage": "always",
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Customer facing production outages",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "is_default": false,
              "name": "Production Outage",
              "private_incidents_only": false,
              "updated_at": "2021-08-17T13:28:57.801578Z"
            }
          ]
        },
        "properties": {
          "incident_types": {
            "example": [
              {
                "create_in_triage": "always",
                "created_at": "2021-08-17T13:28:57.801578Z",
                "description": "Customer facing production outages",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "is_default": false,
                "name": "Production Outage",
                "private_incidents_only": false,
                "updated_at": "2021-08-17T13:28:57.801578Z"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/IncidentTypeV1ResponseBody"
            },
            "type": "array"
          }
        },
        "required": [
          "incident_types"
        ],
        "title": "IncidentTypesV1ListResponseBody",
        "type": "object"
      },
      "IncidentTypesV1ShowResponseBody": {
        "example": {
          "incident_type": {
            "create_in_triage": "always",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Customer facing production outages",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "is_default": false,
            "name": "Production Outage",
            "private_incidents_only": false,
            "updated_at": "2021-08-17T13:28:57.801578Z"
          }
        },
        "properties": {
          "incident_type": {
            "$ref": "#/components/schemas/IncidentTypeV1ResponseBody"
          }
        },
        "required": [
          "incident_type"
        ],
        "title": "IncidentTypesV1ShowResponseBody",
        "type": "object"
      },
      "IncidentUpdateV2ResponseBody": {
        "example": {
          "created_at": "2021-08-17T13:28:57.801578Z",
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "incident_id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "message": "The cat is getting irritable, best rescue it soon",
          "new_incident_status": {
            "category": "triage",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
            "id": "01FCNDV6P870EA6S7TK1DSYD5H",
            "name": "Closed",
            "rank": 4,
            "updated_at": "2021-08-17T13:28:57.801578Z"
          },
          "new_severity": {
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Issues with **low impact**.",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "name": "Minor",
            "rank": 1,
            "updated_at": "2021-08-17T13:28:57.801578Z"
          },
          "updater": {
            "api_key": {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "My test API key"
            },
            "user": {
              "email": "lisa@incident.io",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Lisa Karlin Curtis",
              "role": "viewer",
              "slack_user_id": "U02AYNF2XJM"
            }
          }
        },
        "properties": {
          "created_at": {
            "description": "When the update was created",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for this incident update",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "incident_id": {
            "description": "The incident this update relates to",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "message": {
            "description": "Message that explains the context behind the update",
            "example": "The cat is getting irritable, best rescue it soon",
            "type": "string"
          },
          "new_incident_status": {
            "$ref": "#/components/schemas/IncidentStatusV2ResponseBody"
          },
          "new_severity": {
            "$ref": "#/components/schemas/SeverityV2ResponseBody"
          },
          "updater": {
            "$ref": "#/components/schemas/ActorV2ResponseBody"
          }
        },
        "required": [
          "created_at",
          "id",
          "incident_id",
          "new_incident_status",
          "updater"
        ],
        "title": "IncidentUpdateV2ResponseBody",
        "type": "object"
      },
      "IncidentUpdatesV2ListResponseBody": {
        "example": {
          "incident_updates": [
            {
              "created_at": "2021-08-17T13:28:57.801578Z",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "incident_id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "message": "The cat is getting irritable, best rescue it soon",
              "new_incident_status": {
                "category": "triage",
                "created_at": "2021-08-17T13:28:57.801578Z",
                "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
                "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                "name": "Closed",
                "rank": 4,
                "updated_at": "2021-08-17T13:28:57.801578Z"
              },
              "new_severity": {
                "created_at": "2021-08-17T13:28:57.801578Z",
                "description": "Issues with **low impact**.",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Minor",
                "rank": 1,
                "updated_at": "2021-08-17T13:28:57.801578Z"
              },
              "updater": {
                "api_key": {
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "My test API key"
                },
                "user": {
                  "email": "lisa@incident.io",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Lisa Karlin Curtis",
                  "role": "viewer",
                  "slack_user_id": "U02AYNF2XJM"
                }
              }
            }
          ],
          "pagination_meta": {
            "after": "01FCNDV6P870EA6S7TK1DSYDG0",
            "page_size": 25
          }
        },
        "properties": {
          "incident_updates": {
            "example": [
              {
                "created_at": "2021-08-17T13:28:57.801578Z",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "incident_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "message": "The cat is getting irritable, best rescue it soon",
                "new_incident_status": {
                  "category": "triage",
                  "created_at": "2021-08-17T13:28:57.801578Z",
                  "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
                  "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                  "name": "Closed",
                  "rank": 4,
                  "updated_at": "2021-08-17T13:28:57.801578Z"
                },
                "new_severity": {
                  "created_at": "2021-08-17T13:28:57.801578Z",
                  "description": "Issues with **low impact**.",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Minor",
                  "rank": 1,
                  "updated_at": "2021-08-17T13:28:57.801578Z"
                },
                "updater": {
                  "api_key": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "name": "My test API key"
                  },
                  "user": {
                    "email": "lisa@incident.io",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "name": "Lisa Karlin Curtis",
                    "role": "viewer",
                    "slack_user_id": "U02AYNF2XJM"
                  }
                }
              }
            ],
            "items": {
              "$ref": "#/components/schemas/IncidentUpdateV2ResponseBody"
            },
            "type": "array"
          },
          "pagination_meta": {
            "$ref": "#/components/schemas/PaginationMetaResultResponseBody"
          }
        },
        "required": [
          "incident_updates"
        ],
        "title": "IncidentUpdatesV2ListResponseBody",
        "type": "object"
      },
      "IncidentV1ResponseBody": {
        "example": {
          "call_url": "https://zoom.us/foo",
          "created_at": "2021-08-17T13:28:57.801578Z",
          "creator": {
            "api_key": {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "My test API key"
            },
            "user": {
              "email": "lisa@incident.io",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Lisa Karlin Curtis",
              "role": "viewer",
              "slack_user_id": "U02AYNF2XJM"
            }
          },
          "custom_field_entries": [
            {
              "custom_field": {
                "description": "Which team is impacted by this issue",
                "field_type": "single_select",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Affected Team",
                "options": [
                  {
                    "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "sort_key": 10,
                    "value": "Product"
                  }
                ]
              },
              "values": [
                {
                  "value_catalog_entry": {
                    "aliases": [
                      "lawrence@incident.io",
                      "lawrence"
                    ],
                    "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "name": "Primary On-call"
                  },
                  "value_link": "https://google.com/",
                  "value_numeric": "123.456",
                  "value_option": {
                    "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "sort_key": 10,
                    "value": "Product"
                  },
                  "value_text": "This is my text field, I hope you like it"
                }
              ]
            }
          ],
          "id": "01FDAG4SAP5TYPT98WGR2N7W91",
          "incident_role_assignments": [
            {
              "assignee": {
                "email": "lisa@incident.io",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Lisa Karlin Curtis",
                "role": "viewer",
                "slack_user_id": "U02AYNF2XJM"
              },
              "role": {
                "created_at": "2021-08-17T13:28:57.801578Z",
                "description": "The person currently coordinating the incident",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                "name": "Incident Lead",
                "required": true,
                "role_type": "lead",
                "shortform": "lead",
                "updated_at": "2021-08-17T13:28:57.801578Z"
              }
            }
          ],
          "incident_type": {
            "create_in_triage": "always",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Customer facing production outages",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "is_default": false,
            "name": "Production Outage",
            "private_incidents_only": false,
            "updated_at": "2021-08-17T13:28:57.801578Z"
          },
          "mode": "real",
          "name": "Our database is sad",
          "permalink": "https://app.incident.io/incidents/123",
          "postmortem_document_url": "https://docs.google.com/my_doc_id",
          "reference": "INC-123",
          "severity": {
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Issues with **low impact**.",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "name": "Minor",
            "rank": 1,
            "updated_at": "2021-08-17T13:28:57.801578Z"
          },
          "slack_channel_id": "C02AW36C1M5",
          "slack_channel_name": "inc-165-green-parrot",
          "slack_team_id": "T02A1FSLE8J",
          "status": "triage",
          "summary": "Our database is really really sad, and we don't know why yet.",
          "timestamps": [
            {
              "last_occurred_at": "2021-08-17T13:28:57.801578Z",
              "name": "last_activity"
            }
          ],
          "updated_at": "2021-08-17T13:28:57.801578Z",
          "visibility": "public"
        },
        "properties": {
          "call_url": {
            "description": "The call URL attached to this incident",
            "example": "https://zoom.us/foo",
            "type": "string"
          },
          "created_at": {
            "description": "When the incident was created",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "creator": {
            "$ref": "#/components/schemas/ActorV1ResponseBody"
          },
          "custom_field_entries": {
            "description": "Custom field entries for this incident",
            "example": [
              {
                "custom_field": {
                  "description": "Which team is impacted by this issue",
                  "field_type": "single_select",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Affected Team",
                  "options": [
                    {
                      "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "sort_key": 10,
                      "value": "Product"
                    }
                  ]
                },
                "values": [
                  {
                    "value_catalog_entry": {
                      "aliases": [
                        "lawrence@incident.io",
                        "lawrence"
                      ],
                      "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Primary On-call"
                    },
                    "value_link": "https://google.com/",
                    "value_numeric": "123.456",
                    "value_option": {
                      "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "sort_key": 10,
                      "value": "Product"
                    },
                    "value_text": "This is my text field, I hope you like it"
                  }
                ]
              }
            ],
            "items": {
              "$ref": "#/components/schemas/CustomFieldEntryV1ResponseBody"
            },
            "type": "array"
          },
          "id": {
            "description": "Unique identifier for the incident",
            "example": "01FDAG4SAP5TYPT98WGR2N7W91",
            "type": "string"
          },
          "incident_role_assignments": {
            "description": "A list of who is assigned to each role for this incident",
            "example": [
              {
                "assignee": {
                  "email": "lisa@incident.io",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Lisa Karlin Curtis",
                  "role": "viewer",
                  "slack_user_id": "U02AYNF2XJM"
                },
                "role": {
                  "created_at": "2021-08-17T13:28:57.801578Z",
                  "description": "The person currently coordinating the incident",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                  "name": "Incident Lead",
                  "required": true,
                  "role_type": "lead",
                  "shortform": "lead",
                  "updated_at": "2021-08-17T13:28:57.801578Z"
                }
              }
            ],
            "items": {
              "$ref": "#/components/schemas/IncidentRoleAssignmentV1ResponseBody"
            },
            "type": "array"
          },
          "incident_type": {
            "$ref": "#/components/schemas/IncidentTypeV1ResponseBody"
          },
          "mode": {
            "description": "Whether the incident is real, a test, a tutorial, or importing as a retrospective incident",
            "enum": [
              "real",
              "test",
              "tutorial"
            ],
            "example": "real",
            "type": "string"
          },
          "name": {
            "description": "Explanation of the incident",
            "example": "Our database is sad",
            "type": "string"
          },
          "permalink": {
            "description": "A permanent link to the homepage for this incident",
            "example": "https://app.incident.io/incidents/123",
            "type": "string"
          },
          "postmortem_document_url": {
            "description": "Description of the incident",
            "example": "https://docs.google.com/my_doc_id",
            "type": "string"
          },
          "reference": {
            "description": "Reference to this incident, as displayed across the product",
            "example": "INC-123",
            "type": "string"
          },
          "severity": {
            "$ref": "#/components/schemas/SeverityV1ResponseBody"
          },
          "slack_channel_id": {
            "description": "ID of the Slack channel in the organisation Slack workspace",
            "example": "C02AW36C1M5",
            "type": "string"
          },
          "slack_channel_name": {
            "description": "Name of the slack channel",
            "example": "inc-165-green-parrot",
            "type": "string"
          },
          "slack_team_id": {
            "description": "ID of the Slack team / workspace",
            "example": "T02A1FSLE8J",
            "type": "string"
          },
          "status": {
            "description": "Current status of the incident",
            "enum": [
              "triage",
              "investigating",
              "fixing",
              "monitoring",
              "closed",
              "declined"
            ],
            "example": "triage",
            "type": "string"
          },
          "summary": {
            "description": "Detailed description of the incident",
            "example": "Our database is really really sad, and we don't know why yet.",
            "type": "string"
          },
          "timestamps": {
            "description": "Incident lifecycle events and when they last occurred",
            "example": [
              {
                "last_occurred_at": "2021-08-17T13:28:57.801578Z",
                "name": "last_activity"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/IncidentTimestampV1ResponseBody"
            },
            "type": "array"
          },
          "updated_at": {
            "description": "When the incident was last updated",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "visibility": {
            "description": "Whether the incident should be open to anyone in your Slack workspace (public), or invite-only (private). For more information on Private Incidents see our [help centre](https://help.incident.io/en/articles/5947963-can-we-mark-incidents-as-sensitive-and-restrict-access).",
            "enum": [
              "public",
              "private"
            ],
            "example": "public",
            "type": "string"
          }
        },
        "required": [
          "created_at",
          "creator",
          "custom_field_entries",
          "id",
          "incident_role_assignments",
          "mode",
          "name",
          "reference",
          "slack_channel_id",
          "slack_team_id",
          "status",
          "updated_at",
          "visibility"
        ],
        "title": "IncidentV1ResponseBody",
        "type": "object"
      },
      "IncidentV2ResponseBody": {
        "example": {
          "call_url": "https://zoom.us/foo",
          "created_at": "2021-08-17T13:28:57.801578Z",
          "creator": {
            "api_key": {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "My test API key"
            },
            "user": {
              "email": "lisa@incident.io",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Lisa Karlin Curtis",
              "role": "viewer",
              "slack_user_id": "U02AYNF2XJM"
            }
          },
          "custom_field_entries": [
            {
              "custom_field": {
                "description": "Which team is impacted by this issue",
                "field_type": "single_select",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Affected Team",
                "options": [
                  {
                    "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "sort_key": 10,
                    "value": "Product"
                  }
                ]
              },
              "values": [
                {
                  "value_catalog_entry": {
                    "aliases": [
                      "lawrence@incident.io",
                      "lawrence"
                    ],
                    "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "name": "Primary On-call"
                  },
                  "value_link": "https://google.com/",
                  "value_numeric": "123.456",
                  "value_option": {
                    "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "sort_key": 10,
                    "value": "Product"
                  },
                  "value_text": "This is my text field, I hope you like it"
                }
              ]
            }
          ],
          "external_issue_reference": {
            "issue_name": "INC-123",
            "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
            "provider": "asana"
          },
          "id": "01FDAG4SAP5TYPT98WGR2N7W91",
          "incident_role_assignments": [
            {
              "assignee": {
                "email": "lisa@incident.io",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Lisa Karlin Curtis",
                "role": "viewer",
                "slack_user_id": "U02AYNF2XJM"
              },
              "role": {
                "created_at": "2021-08-17T13:28:57.801578Z",
                "description": "The person currently coordinating the incident",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                "name": "Incident Lead",
                "required": true,
                "role_type": "lead",
                "shortform": "lead",
                "updated_at": "2021-08-17T13:28:57.801578Z"
              }
            }
          ],
          "incident_status": {
            "category": "triage",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
            "id": "01FCNDV6P870EA6S7TK1DSYD5H",
            "name": "Closed",
            "rank": 4,
            "updated_at": "2021-08-17T13:28:57.801578Z"
          },
          "incident_timestamp_values": [
            {
              "incident_timestamp": {
                "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                "name": "Impact started",
                "rank": 1
              },
              "value": {
                "value": "2021-08-17T13:28:57.801578Z"
              }
            }
          ],
          "incident_type": {
            "create_in_triage": "always",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Customer facing production outages",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "is_default": false,
            "name": "Production Outage",
            "private_incidents_only": false,
            "updated_at": "2021-08-17T13:28:57.801578Z"
          },
          "mode": "standard",
          "name": "Our database is sad",
          "permalink": "https://app.incident.io/incidents/123",
          "postmortem_document_url": "https://docs.google.com/my_doc_id",
          "reference": "INC-123",
          "severity": {
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Issues with **low impact**.",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "name": "Minor",
            "rank": 1,
            "updated_at": "2021-08-17T13:28:57.801578Z"
          },
          "slack_channel_id": "C02AW36C1M5",
          "slack_channel_name": "inc-165-green-parrot",
          "slack_team_id": "T02A1FSLE8J",
          "summary": "Our database is really really sad, and we don't know why yet.",
          "updated_at": "2021-08-17T13:28:57.801578Z",
          "visibility": "public",
          "workload_minutes_late": 40.7,
          "workload_minutes_sleeping": 0,
          "workload_minutes_total": 60.7,
          "workload_minutes_working": 20
        },
        "properties": {
          "call_url": {
            "description": "The call URL attached to this incident",
            "example": "https://zoom.us/foo",
            "type": "string"
          },
          "created_at": {
            "description": "When the incident was created",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "creator": {
            "$ref": "#/components/schemas/ActorV2ResponseBody"
          },
          "custom_field_entries": {
            "description": "Custom field entries for this incident",
            "example": [
              {
                "custom_field": {
                  "description": "Which team is impacted by this issue",
                  "field_type": "single_select",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Affected Team",
                  "options": [
                    {
                      "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "sort_key": 10,
                      "value": "Product"
                    }
                  ]
                },
                "values": [
                  {
                    "value_catalog_entry": {
                      "aliases": [
                        "lawrence@incident.io",
                        "lawrence"
                      ],
                      "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Primary On-call"
                    },
                    "value_link": "https://google.com/",
                    "value_numeric": "123.456",
                    "value_option": {
                      "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "sort_key": 10,
                      "value": "Product"
                    },
                    "value_text": "This is my text field, I hope you like it"
                  }
                ]
              }
            ],
            "items": {
              "$ref": "#/components/schemas/CustomFieldEntryV2ResponseBody"
            },
            "type": "array"
          },
          "external_issue_reference": {
            "$ref": "#/components/schemas/ExternalIssueReferenceV2ResponseBody"
          },
          "id": {
            "description": "Unique identifier for the incident",
            "example": "01FDAG4SAP5TYPT98WGR2N7W91",
            "type": "string"
          },
          "incident_role_assignments": {
            "description": "A list of who is assigned to each role for this incident",
            "example": [
              {
                "assignee": {
                  "email": "lisa@incident.io",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Lisa Karlin Curtis",
                  "role": "viewer",
                  "slack_user_id": "U02AYNF2XJM"
                },
                "role": {
                  "created_at": "2021-08-17T13:28:57.801578Z",
                  "description": "The person currently coordinating the incident",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                  "name": "Incident Lead",
                  "required": true,
                  "role_type": "lead",
                  "shortform": "lead",
                  "updated_at": "2021-08-17T13:28:57.801578Z"
                }
              }
            ],
            "items": {
              "$ref": "#/components/schemas/IncidentRoleAssignmentV2ResponseBody"
            },
            "type": "array"
          },
          "incident_status": {
            "$ref": "#/components/schemas/IncidentStatusV2ResponseBody"
          },
          "incident_timestamp_values": {
            "description": "Incident lifecycle events and when they occurred",
            "example": [
              {
                "incident_timestamp": {
                  "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                  "name": "Impact started",
                  "rank": 1
                },
                "value": {
                  "value": "2021-08-17T13:28:57.801578Z"
                }
              }
            ],
            "items": {
              "$ref": "#/components/schemas/IncidentTimestampWithValueV2ResponseBody"
            },
            "type": "array"
          },
          "incident_type": {
            "$ref": "#/components/schemas/IncidentTypeV2ResponseBody"
          },
          "mode": {
            "description": "Whether the incident is real, a test, a tutorial, or importing as a retrospective incident",
            "enum": [
              "standard",
              "retrospective",
              "test",
              "tutorial"
            ],
            "example": "standard",
            "type": "string"
          },
          "name": {
            "description": "Explanation of the incident",
            "example": "Our database is sad",
            "type": "string"
          },
          "permalink": {
            "description": "A permanent link to the homepage for this incident",
            "example": "https://app.incident.io/incidents/123",
            "type": "string"
          },
          "postmortem_document_url": {
            "description": "Description of the incident",
            "example": "https://docs.google.com/my_doc_id",
            "type": "string"
          },
          "reference": {
            "description": "Reference to this incident, as displayed across the product",
            "example": "INC-123",
            "type": "string"
          },
          "severity": {
            "$ref": "#/components/schemas/SeverityV2ResponseBody"
          },
          "slack_channel_id": {
            "description": "ID of the Slack channel in the organisation Slack workspace",
            "example": "C02AW36C1M5",
            "type": "string"
          },
          "slack_channel_name": {
            "description": "Name of the slack channel",
            "example": "inc-165-green-parrot",
            "type": "string"
          },
          "slack_team_id": {
            "description": "ID of the Slack team / workspace",
            "example": "T02A1FSLE8J",
            "type": "string"
          },
          "summary": {
            "description": "Detailed description of the incident",
            "example": "Our database is really really sad, and we don't know why yet.",
            "type": "string"
          },
          "updated_at": {
            "description": "When the incident was last updated",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "visibility": {
            "description": "Whether the incident should be open to anyone in your Slack workspace (public), or invite-only (private). For more information on Private Incidents see our [help centre](https://help.incident.io/en/articles/5947963-can-we-mark-incidents-as-sensitive-and-restrict-access).",
            "enum": [
              "public",
              "private"
            ],
            "example": "public",
            "type": "string"
          },
          "workload_minutes_late": {
            "description": "Amount of time spent on the incident in late hours",
            "example": 40.7,
            "format": "double",
            "type": "number"
          },
          "workload_minutes_sleeping": {
            "description": "Amount of time spent on the incident in sleeping hours",
            "example": 0,
            "format": "double",
            "type": "number"
          },
          "workload_minutes_total": {
            "description": "Amount of time spent on the incident in total",
            "example": 60.7,
            "format": "double",
            "type": "number"
          },
          "workload_minutes_working": {
            "description": "Amount of time spent on the incident in working hours",
            "example": 20,
            "format": "double",
            "type": "number"
          }
        },
        "required": [
          "created_at",
          "creator",
          "custom_field_entries",
          "id",
          "incident_role_assignments",
          "incident_status",
          "mode",
          "name",
          "reference",
          "slack_channel_id",
          "slack_team_id",
          "updated_at",
          "visibility"
        ],
        "title": "IncidentV2ResponseBody",
        "type": "object"
      },
      "IncidentsV1CreateRequestBody": {
        "example": {
          "custom_field_entries": [
            {
              "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "values": [
                {
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "value_catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "value_link": "https://google.com/",
                  "value_numeric": "123.456",
                  "value_option_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "value_text": "This is my text field, I hope you like it",
                  "value_timestamp": ""
                }
              ]
            }
          ],
          "idempotency_key": "alert-uuid",
          "incident_role_assignments": [
            {
              "assignee": {
                "email": "bob@example.com",
                "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                "slack_user_id": "USER123"
              },
              "incident_role_id": "01FH5TZRWMNAFB0DZ23FD1TV96"
            }
          ],
          "incident_type_id": "01FH5TZRWMNAFB0DZ23FD1TV96",
          "mode": "real",
          "name": "Our database is sad",
          "severity_id": "01FH5TZRWMNAFB0DZ23FD1TV96",
          "slack_team_id": "T02A1FSLE8J",
          "source_message_channel_id": "C02AW36C1M5",
          "source_message_timestamp": "1653650280.526509",
          "status": "triage",
          "summary": "Our database is really really sad, and we don't know why yet.",
          "visibility": "public"
        },
        "properties": {
          "custom_field_entries": {
            "description": "Set the incident's custom fields to these values",
            "example": [
              {
                "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "values": [
                  {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "value_catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "value_link": "https://google.com/",
                    "value_numeric": "123.456",
                    "value_option_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "value_text": "This is my text field, I hope you like it",
                    "value_timestamp": ""
                  }
                ]
              }
            ],
            "items": {
              "$ref": "#/components/schemas/CustomFieldEntryPayloadV1RequestBody"
            },
            "type": "array"
          },
          "idempotency_key": {
            "description": "Unique string used to de-duplicate incident create requests",
            "example": "alert-uuid",
            "type": "string"
          },
          "incident_role_assignments": {
            "description": "Assign incident roles to these people",
            "example": [
              {
                "assignee": {
                  "email": "bob@example.com",
                  "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                  "slack_user_id": "USER123"
                },
                "incident_role_id": "01FH5TZRWMNAFB0DZ23FD1TV96"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/IncidentRoleAssignmentPayloadV1RequestBody"
            },
            "type": "array"
          },
          "incident_type_id": {
            "description": "Incident type to create this incident as",
            "example": "01FH5TZRWMNAFB0DZ23FD1TV96",
            "type": "string"
          },
          "mode": {
            "description": "Whether the incident is real or test",
            "enum": [
              "real",
              "test"
            ],
            "example": "real",
            "type": "string"
          },
          "name": {
            "description": "Explanation of the incident",
            "example": "Our database is sad",
            "type": "string"
          },
          "severity_id": {
            "description": "Severity to create incident as",
            "example": "01FH5TZRWMNAFB0DZ23FD1TV96",
            "type": "string"
          },
          "slack_team_id": {
            "description": "ID of the Slack team / workspace",
            "example": "T02A1FSLE8J",
            "type": "string"
          },
          "source_message_channel_id": {
            "description": "Channel ID of the source message, if this incident was created from one",
            "example": "C02AW36C1M5",
            "type": "string"
          },
          "source_message_timestamp": {
            "description": "Timestamp of the source message, if this incident was created from one",
            "example": "1653650280.526509",
            "type": "string"
          },
          "status": {
            "description": "Current status of the incident",
            "enum": [
              "triage",
              "investigating",
              "fixing",
              "monitoring",
              "closed",
              "declined"
            ],
            "example": "triage",
            "type": "string"
          },
          "summary": {
            "description": "Detailed description of the incident",
            "example": "Our database is really really sad, and we don't know why yet.",
            "type": "string"
          },
          "visibility": {
            "description": "Whether the incident should be open to anyone in your Slack workspace (public), or invite-only (private). For more information on Private Incidents see our [help centre](https://help.incident.io/en/articles/5947963-can-we-mark-incidents-as-sensitive-and-restrict-access).",
            "enum": [
              "public",
              "private"
            ],
            "example": "public",
            "type": "string"
          }
        },
        "required": [
          "idempotency_key",
          "visibility"
        ],
        "title": "IncidentsV1CreateRequestBody",
        "type": "object"
      },
      "IncidentsV1CreateResponseBody": {
        "example": {
          "incident": {
            "call_url": "https://zoom.us/foo",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "creator": {
              "api_key": {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "My test API key"
              },
              "user": {
                "email": "lisa@incident.io",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Lisa Karlin Curtis",
                "role": "viewer",
                "slack_user_id": "U02AYNF2XJM"
              }
            },
            "custom_field_entries": [
              {
                "custom_field": {
                  "description": "Which team is impacted by this issue",
                  "field_type": "single_select",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Affected Team",
                  "options": [
                    {
                      "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "sort_key": 10,
                      "value": "Product"
                    }
                  ]
                },
                "values": [
                  {
                    "value_catalog_entry": {
                      "aliases": [
                        "lawrence@incident.io",
                        "lawrence"
                      ],
                      "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Primary On-call"
                    },
                    "value_link": "https://google.com/",
                    "value_numeric": "123.456",
                    "value_option": {
                      "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "sort_key": 10,
                      "value": "Product"
                    },
                    "value_text": "This is my text field, I hope you like it"
                  }
                ]
              }
            ],
            "id": "01FDAG4SAP5TYPT98WGR2N7W91",
            "incident_role_assignments": [
              {
                "assignee": {
                  "email": "lisa@incident.io",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Lisa Karlin Curtis",
                  "role": "viewer",
                  "slack_user_id": "U02AYNF2XJM"
                },
                "role": {
                  "created_at": "2021-08-17T13:28:57.801578Z",
                  "description": "The person currently coordinating the incident",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                  "name": "Incident Lead",
                  "required": true,
                  "role_type": "lead",
                  "shortform": "lead",
                  "updated_at": "2021-08-17T13:28:57.801578Z"
                }
              }
            ],
            "incident_type": {
              "create_in_triage": "always",
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Customer facing production outages",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "is_default": false,
              "name": "Production Outage",
              "private_incidents_only": false,
              "updated_at": "2021-08-17T13:28:57.801578Z"
            },
            "mode": "real",
            "name": "Our database is sad",
            "permalink": "https://app.incident.io/incidents/123",
            "postmortem_document_url": "https://docs.google.com/my_doc_id",
            "reference": "INC-123",
            "severity": {
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Issues with **low impact**.",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Minor",
              "rank": 1,
              "updated_at": "2021-08-17T13:28:57.801578Z"
            },
            "slack_channel_id": "C02AW36C1M5",
            "slack_channel_name": "inc-165-green-parrot",
            "slack_team_id": "T02A1FSLE8J",
            "status": "triage",
            "summary": "Our database is really really sad, and we don't know why yet.",
            "timestamps": [
              {
                "last_occurred_at": "2021-08-17T13:28:57.801578Z",
                "name": "last_activity"
              }
            ],
            "updated_at": "2021-08-17T13:28:57.801578Z",
            "visibility": "public"
          }
        },
        "properties": {
          "incident": {
            "$ref": "#/components/schemas/IncidentV1ResponseBody"
          }
        },
        "required": [
          "incident"
        ],
        "title": "IncidentsV1CreateResponseBody",
        "type": "object"
      },
      "IncidentsV1ListResponseBody": {
        "example": {
          "incidents": [
            {
              "call_url": "https://zoom.us/foo",
              "created_at": "2021-08-17T13:28:57.801578Z",
              "creator": {
                "api_key": {
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "My test API key"
                },
                "user": {
                  "email": "lisa@incident.io",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Lisa Karlin Curtis",
                  "role": "viewer",
                  "slack_user_id": "U02AYNF2XJM"
                }
              },
              "custom_field_entries": [
                {
                  "custom_field": {
                    "description": "Which team is impacted by this issue",
                    "field_type": "single_select",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "name": "Affected Team",
                    "options": [
                      {
                        "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "sort_key": 10,
                        "value": "Product"
                      }
                    ]
                  },
                  "values": [
                    {
                      "value_catalog_entry": {
                        "aliases": [
                          "lawrence@incident.io",
                          "lawrence"
                        ],
                        "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "name": "Primary On-call"
                      },
                      "value_link": "https://google.com/",
                      "value_numeric": "123.456",
                      "value_option": {
                        "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "sort_key": 10,
                        "value": "Product"
                      },
                      "value_text": "This is my text field, I hope you like it"
                    }
                  ]
                }
              ],
              "id": "01FDAG4SAP5TYPT98WGR2N7W91",
              "incident_role_assignments": [
                {
                  "assignee": {
                    "email": "lisa@incident.io",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "name": "Lisa Karlin Curtis",
                    "role": "viewer",
                    "slack_user_id": "U02AYNF2XJM"
                  },
                  "role": {
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "description": "The person currently coordinating the incident",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                    "name": "Incident Lead",
                    "required": true,
                    "role_type": "lead",
                    "shortform": "lead",
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  }
                }
              ],
              "incident_type": {
                "create_in_triage": "always",
                "created_at": "2021-08-17T13:28:57.801578Z",
                "description": "Customer facing production outages",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "is_default": false,
                "name": "Production Outage",
                "private_incidents_only": false,
                "updated_at": "2021-08-17T13:28:57.801578Z"
              },
              "mode": "real",
              "name": "Our database is sad",
              "permalink": "https://app.incident.io/incidents/123",
              "postmortem_document_url": "https://docs.google.com/my_doc_id",
              "reference": "INC-123",
              "severity": {
                "created_at": "2021-08-17T13:28:57.801578Z",
                "description": "Issues with **low impact**.",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Minor",
                "rank": 1,
                "updated_at": "2021-08-17T13:28:57.801578Z"
              },
              "slack_channel_id": "C02AW36C1M5",
              "slack_channel_name": "inc-165-green-parrot",
              "slack_team_id": "T02A1FSLE8J",
              "status": "triage",
              "summary": "Our database is really really sad, and we don't know why yet.",
              "timestamps": [
                {
                  "last_occurred_at": "2021-08-17T13:28:57.801578Z",
                  "name": "last_activity"
                }
              ],
              "updated_at": "2021-08-17T13:28:57.801578Z",
              "visibility": "public"
            }
          ],
          "pagination_meta": {
            "after": "01FCNDV6P870EA6S7TK1DSYDG0",
            "page_size": 25,
            "total_record_count": 238
          }
        },
        "properties": {
          "incidents": {
            "example": [
              {
                "call_url": "https://zoom.us/foo",
                "created_at": "2021-08-17T13:28:57.801578Z",
                "creator": {
                  "api_key": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "name": "My test API key"
                  },
                  "user": {
                    "email": "lisa@incident.io",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "name": "Lisa Karlin Curtis",
                    "role": "viewer",
                    "slack_user_id": "U02AYNF2XJM"
                  }
                },
                "custom_field_entries": [
                  {
                    "custom_field": {
                      "description": "Which team is impacted by this issue",
                      "field_type": "single_select",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Affected Team",
                      "options": [
                        {
                          "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "sort_key": 10,
                          "value": "Product"
                        }
                      ]
                    },
                    "values": [
                      {
                        "value_catalog_entry": {
                          "aliases": [
                            "lawrence@incident.io",
                            "lawrence"
                          ],
                          "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "name": "Primary On-call"
                        },
                        "value_link": "https://google.com/",
                        "value_numeric": "123.456",
                        "value_option": {
                          "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "sort_key": 10,
                          "value": "Product"
                        },
                        "value_text": "This is my text field, I hope you like it"
                      }
                    ]
                  }
                ],
                "id": "01FDAG4SAP5TYPT98WGR2N7W91",
                "incident_role_assignments": [
                  {
                    "assignee": {
                      "email": "lisa@incident.io",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Lisa Karlin Curtis",
                      "role": "viewer",
                      "slack_user_id": "U02AYNF2XJM"
                    },
                    "role": {
                      "created_at": "2021-08-17T13:28:57.801578Z",
                      "description": "The person currently coordinating the incident",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                      "name": "Incident Lead",
                      "required": true,
                      "role_type": "lead",
                      "shortform": "lead",
                      "updated_at": "2021-08-17T13:28:57.801578Z"
                    }
                  }
                ],
                "incident_type": {
                  "create_in_triage": "always",
                  "created_at": "2021-08-17T13:28:57.801578Z",
                  "description": "Customer facing production outages",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "is_default": false,
                  "name": "Production Outage",
                  "private_incidents_only": false,
                  "updated_at": "2021-08-17T13:28:57.801578Z"
                },
                "mode": "real",
                "name": "Our database is sad",
                "permalink": "https://app.incident.io/incidents/123",
                "postmortem_document_url": "https://docs.google.com/my_doc_id",
                "reference": "INC-123",
                "severity": {
                  "created_at": "2021-08-17T13:28:57.801578Z",
                  "description": "Issues with **low impact**.",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Minor",
                  "rank": 1,
                  "updated_at": "2021-08-17T13:28:57.801578Z"
                },
                "slack_channel_id": "C02AW36C1M5",
                "slack_channel_name": "inc-165-green-parrot",
                "slack_team_id": "T02A1FSLE8J",
                "status": "triage",
                "summary": "Our database is really really sad, and we don't know why yet.",
                "timestamps": [
                  {
                    "last_occurred_at": "2021-08-17T13:28:57.801578Z",
                    "name": "last_activity"
                  }
                ],
                "updated_at": "2021-08-17T13:28:57.801578Z",
                "visibility": "public"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/IncidentV1ResponseBody"
            },
            "type": "array"
          },
          "pagination_meta": {
            "$ref": "#/components/schemas/PaginationMetaResultWithTotalResponseBody"
          }
        },
        "required": [
          "incidents"
        ],
        "title": "IncidentsV1ListResponseBody",
        "type": "object"
      },
      "IncidentsV1ShowResponseBody": {
        "example": {
          "incident": {
            "call_url": "https://zoom.us/foo",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "creator": {
              "api_key": {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "My test API key"
              },
              "user": {
                "email": "lisa@incident.io",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Lisa Karlin Curtis",
                "role": "viewer",
                "slack_user_id": "U02AYNF2XJM"
              }
            },
            "custom_field_entries": [
              {
                "custom_field": {
                  "description": "Which team is impacted by this issue",
                  "field_type": "single_select",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Affected Team",
                  "options": [
                    {
                      "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "sort_key": 10,
                      "value": "Product"
                    }
                  ]
                },
                "values": [
                  {
                    "value_catalog_entry": {
                      "aliases": [
                        "lawrence@incident.io",
                        "lawrence"
                      ],
                      "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Primary On-call"
                    },
                    "value_link": "https://google.com/",
                    "value_numeric": "123.456",
                    "value_option": {
                      "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "sort_key": 10,
                      "value": "Product"
                    },
                    "value_text": "This is my text field, I hope you like it"
                  }
                ]
              }
            ],
            "id": "01FDAG4SAP5TYPT98WGR2N7W91",
            "incident_role_assignments": [
              {
                "assignee": {
                  "email": "lisa@incident.io",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Lisa Karlin Curtis",
                  "role": "viewer",
                  "slack_user_id": "U02AYNF2XJM"
                },
                "role": {
                  "created_at": "2021-08-17T13:28:57.801578Z",
                  "description": "The person currently coordinating the incident",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                  "name": "Incident Lead",
                  "required": true,
                  "role_type": "lead",
                  "shortform": "lead",
                  "updated_at": "2021-08-17T13:28:57.801578Z"
                }
              }
            ],
            "incident_type": {
              "create_in_triage": "always",
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Customer facing production outages",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "is_default": false,
              "name": "Production Outage",
              "private_incidents_only": false,
              "updated_at": "2021-08-17T13:28:57.801578Z"
            },
            "mode": "real",
            "name": "Our database is sad",
            "permalink": "https://app.incident.io/incidents/123",
            "postmortem_document_url": "https://docs.google.com/my_doc_id",
            "reference": "INC-123",
            "severity": {
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Issues with **low impact**.",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Minor",
              "rank": 1,
              "updated_at": "2021-08-17T13:28:57.801578Z"
            },
            "slack_channel_id": "C02AW36C1M5",
            "slack_channel_name": "inc-165-green-parrot",
            "slack_team_id": "T02A1FSLE8J",
            "status": "triage",
            "summary": "Our database is really really sad, and we don't know why yet.",
            "timestamps": [
              {
                "last_occurred_at": "2021-08-17T13:28:57.801578Z",
                "name": "last_activity"
              }
            ],
            "updated_at": "2021-08-17T13:28:57.801578Z",
            "visibility": "public"
          }
        },
        "properties": {
          "incident": {
            "$ref": "#/components/schemas/IncidentV1ResponseBody"
          }
        },
        "required": [
          "incident"
        ],
        "title": "IncidentsV1ShowResponseBody",
        "type": "object"
      },
      "IncidentsV2CreateRequestBody": {
        "example": {
          "custom_field_entries": [
            {
              "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "values": [
                {
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "value_catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "value_link": "https://google.com/",
                  "value_numeric": "123.456",
                  "value_option_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "value_text": "This is my text field, I hope you like it",
                  "value_timestamp": ""
                }
              ]
            }
          ],
          "id": "01FDAG4SAP5TYPT98WGR2N7W91",
          "idempotency_key": "alert-uuid",
          "incident_role_assignments": [
            {
              "assignee": {
                "email": "bob@example.com",
                "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                "slack_user_id": "USER123"
              },
              "incident_role_id": "01FH5TZRWMNAFB0DZ23FD1TV96"
            }
          ],
          "incident_status_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
          "incident_timestamp_values": [
            {
              "incident_timestamp_id": "01FCNDV6P870EA6S7TK1DSYD5H",
              "value": "2021-08-17T13:28:57.801578Z"
            }
          ],
          "incident_type_id": "01FH5TZRWMNAFB0DZ23FD1TV96",
          "mode": "standard",
          "name": "Our database is sad",
          "retrospective_incident_options": {
            "slack_channel_id": "abc123"
          },
          "severity_id": "01FH5TZRWMNAFB0DZ23FD1TV96",
          "slack_team_id": "T02A1FSLE8J",
          "summary": "Our database is really really sad, and we don't know why yet.",
          "visibility": "public"
        },
        "properties": {
          "custom_field_entries": {
            "description": "Set the incident's custom fields to these values",
            "example": [
              {
                "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "values": [
                  {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "value_catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "value_link": "https://google.com/",
                    "value_numeric": "123.456",
                    "value_option_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "value_text": "This is my text field, I hope you like it",
                    "value_timestamp": ""
                  }
                ]
              }
            ],
            "items": {
              "$ref": "#/components/schemas/CustomFieldEntryPayloadV2RequestBody"
            },
            "type": "array"
          },
          "id": {
            "description": "Unique identifier for the incident",
            "example": "01FDAG4SAP5TYPT98WGR2N7W91",
            "type": "string"
          },
          "idempotency_key": {
            "description": "Unique string used to de-duplicate incident create requests",
            "example": "alert-uuid",
            "type": "string"
          },
          "incident_role_assignments": {
            "description": "Assign incident roles to these people",
            "example": [
              {
                "assignee": {
                  "email": "bob@example.com",
                  "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                  "slack_user_id": "USER123"
                },
                "incident_role_id": "01FH5TZRWMNAFB0DZ23FD1TV96"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/IncidentRoleAssignmentPayloadV2RequestBody"
            },
            "type": "array"
          },
          "incident_status_id": {
            "description": "Incident status to assign to the incident",
            "example": "01G0J1EXE7AXZ2C93K61WBPYEH",
            "type": "string"
          },
          "incident_timestamp_values": {
            "description": "Assign the incident's timestamps to these values",
            "example": [
              {
                "incident_timestamp_id": "01FCNDV6P870EA6S7TK1DSYD5H",
                "value": "2021-08-17T13:28:57.801578Z"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/IncidentTimestampValuePayloadV2RequestBody"
            },
            "type": "array"
          },
          "incident_type_id": {
            "description": "Incident type to create this incident as",
            "example": "01FH5TZRWMNAFB0DZ23FD1TV96",
            "type": "string"
          },
          "mode": {
            "description": "Whether the incident is real, a test, a tutorial, or importing as a retrospective incident",
            "enum": [
              "standard",
              "retrospective",
              "test",
              "tutorial"
            ],
            "example": "standard",
            "type": "string"
          },
          "name": {
            "description": "Explanation of the incident",
            "example": "Our database is sad",
            "type": "string"
          },
          "retrospective_incident_options": {
            "$ref": "#/components/schemas/RetrospectiveIncidentOptionsV2RequestBody"
          },
          "severity_id": {
            "description": "Severity to create incident as",
            "example": "01FH5TZRWMNAFB0DZ23FD1TV96",
            "type": "string"
          },
          "slack_team_id": {
            "description": "Slack Team to create the incident in",
            "example": "T02A1FSLE8J",
            "type": "string"
          },
          "summary": {
            "description": "Detailed description of the incident",
            "example": "Our database is really really sad, and we don't know why yet.",
            "type": "string"
          },
          "visibility": {
            "description": "Whether the incident should be open to anyone in your Slack workspace (public), or invite-only (private). For more information on Private Incidents see our [help centre](https://help.incident.io/en/articles/5947963-can-we-mark-incidents-as-sensitive-and-restrict-access).",
            "enum": [
              "public",
              "private"
            ],
            "example": "public",
            "type": "string"
          }
        },
        "required": [
          "idempotency_key",
          "visibility"
        ],
        "title": "IncidentsV2CreateRequestBody",
        "type": "object"
      },
      "IncidentsV2CreateResponseBody": {
        "example": {
          "incident": {
            "call_url": "https://zoom.us/foo",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "creator": {
              "api_key": {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "My test API key"
              },
              "user": {
                "email": "lisa@incident.io",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Lisa Karlin Curtis",
                "role": "viewer",
                "slack_user_id": "U02AYNF2XJM"
              }
            },
            "custom_field_entries": [
              {
                "custom_field": {
                  "description": "Which team is impacted by this issue",
                  "field_type": "single_select",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Affected Team",
                  "options": [
                    {
                      "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "sort_key": 10,
                      "value": "Product"
                    }
                  ]
                },
                "values": [
                  {
                    "value_catalog_entry": {
                      "aliases": [
                        "lawrence@incident.io",
                        "lawrence"
                      ],
                      "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Primary On-call"
                    },
                    "value_link": "https://google.com/",
                    "value_numeric": "123.456",
                    "value_option": {
                      "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "sort_key": 10,
                      "value": "Product"
                    },
                    "value_text": "This is my text field, I hope you like it"
                  }
                ]
              }
            ],
            "external_issue_reference": {
              "issue_name": "INC-123",
              "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
              "provider": "asana"
            },
            "id": "01FDAG4SAP5TYPT98WGR2N7W91",
            "incident_role_assignments": [
              {
                "assignee": {
                  "email": "lisa@incident.io",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Lisa Karlin Curtis",
                  "role": "viewer",
                  "slack_user_id": "U02AYNF2XJM"
                },
                "role": {
                  "created_at": "2021-08-17T13:28:57.801578Z",
                  "description": "The person currently coordinating the incident",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                  "name": "Incident Lead",
                  "required": true,
                  "role_type": "lead",
                  "shortform": "lead",
                  "updated_at": "2021-08-17T13:28:57.801578Z"
                }
              }
            ],
            "incident_status": {
              "category": "triage",
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
              "id": "01FCNDV6P870EA6S7TK1DSYD5H",
              "name": "Closed",
              "rank": 4,
              "updated_at": "2021-08-17T13:28:57.801578Z"
            },
            "incident_timestamp_values": [
              {
                "incident_timestamp": {
                  "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                  "name": "Impact started",
                  "rank": 1
                },
                "value": {
                  "value": "2021-08-17T13:28:57.801578Z"
                }
              }
            ],
            "incident_type": {
              "create_in_triage": "always",
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Customer facing production outages",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "is_default": false,
              "name": "Production Outage",
              "private_incidents_only": false,
              "updated_at": "2021-08-17T13:28:57.801578Z"
            },
            "mode": "standard",
            "name": "Our database is sad",
            "permalink": "https://app.incident.io/incidents/123",
            "postmortem_document_url": "https://docs.google.com/my_doc_id",
            "reference": "INC-123",
            "severity": {
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Issues with **low impact**.",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Minor",
              "rank": 1,
              "updated_at": "2021-08-17T13:28:57.801578Z"
            },
            "slack_channel_id": "C02AW36C1M5",
            "slack_channel_name": "inc-165-green-parrot",
            "slack_team_id": "T02A1FSLE8J",
            "summary": "Our database is really really sad, and we don't know why yet.",
            "updated_at": "2021-08-17T13:28:57.801578Z",
            "visibility": "public",
            "workload_minutes_late": 40.7,
            "workload_minutes_sleeping": 0,
            "workload_minutes_total": 60.7,
            "workload_minutes_working": 20
          }
        },
        "properties": {
          "incident": {
            "$ref": "#/components/schemas/IncidentV2ResponseBody"
          }
        },
        "required": [
          "incident"
        ],
        "title": "IncidentsV2CreateResponseBody",
        "type": "object"
      },
      "IncidentsV2EditRequestBody": {
        "example": {
          "incident": {
            "custom_field_entries": [
              {
                "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "values": [
                  {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "value_catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "value_link": "https://google.com/",
                    "value_numeric": "123.456",
                    "value_option_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "value_text": "This is my text field, I hope you like it",
                    "value_timestamp": ""
                  }
                ]
              }
            ],
            "incident_timestamp_values": [
              {
                "incident_timestamp_id": "01FCNDV6P870EA6S7TK1DSYD5H",
                "value": "2021-08-17T13:28:57.801578Z"
              }
            ],
            "name": "Our database is sad",
            "severity_id": "01FH5TZRWMNAFB0DZ23FD1TV96",
            "summary": "Our database is really really sad, and we don't know why yet."
          },
          "notify_incident_channel": true
        },
        "properties": {
          "incident": {
            "$ref": "#/components/schemas/IncidentEditPayloadV2RequestBody"
          },
          "notify_incident_channel": {
            "description": "Should we send Slack channel notifications to inform responders of this update? Note that this won't work if the Slack channel has already been archived.",
            "example": true,
            "type": "boolean"
          }
        },
        "required": [
          "incident",
          "notify_incident_channel"
        ],
        "title": "IncidentsV2EditRequestBody",
        "type": "object"
      },
      "IncidentsV2EditResponseBody": {
        "example": {
          "incident": {
            "call_url": "https://zoom.us/foo",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "creator": {
              "api_key": {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "My test API key"
              },
              "user": {
                "email": "lisa@incident.io",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Lisa Karlin Curtis",
                "role": "viewer",
                "slack_user_id": "U02AYNF2XJM"
              }
            },
            "custom_field_entries": [
              {
                "custom_field": {
                  "description": "Which team is impacted by this issue",
                  "field_type": "single_select",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Affected Team",
                  "options": [
                    {
                      "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "sort_key": 10,
                      "value": "Product"
                    }
                  ]
                },
                "values": [
                  {
                    "value_catalog_entry": {
                      "aliases": [
                        "lawrence@incident.io",
                        "lawrence"
                      ],
                      "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Primary On-call"
                    },
                    "value_link": "https://google.com/",
                    "value_numeric": "123.456",
                    "value_option": {
                      "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "sort_key": 10,
                      "value": "Product"
                    },
                    "value_text": "This is my text field, I hope you like it"
                  }
                ]
              }
            ],
            "external_issue_reference": {
              "issue_name": "INC-123",
              "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
              "provider": "asana"
            },
            "id": "01FDAG4SAP5TYPT98WGR2N7W91",
            "incident_role_assignments": [
              {
                "assignee": {
                  "email": "lisa@incident.io",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Lisa Karlin Curtis",
                  "role": "viewer",
                  "slack_user_id": "U02AYNF2XJM"
                },
                "role": {
                  "created_at": "2021-08-17T13:28:57.801578Z",
                  "description": "The person currently coordinating the incident",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                  "name": "Incident Lead",
                  "required": true,
                  "role_type": "lead",
                  "shortform": "lead",
                  "updated_at": "2021-08-17T13:28:57.801578Z"
                }
              }
            ],
            "incident_status": {
              "category": "triage",
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
              "id": "01FCNDV6P870EA6S7TK1DSYD5H",
              "name": "Closed",
              "rank": 4,
              "updated_at": "2021-08-17T13:28:57.801578Z"
            },
            "incident_timestamp_values": [
              {
                "incident_timestamp": {
                  "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                  "name": "Impact started",
                  "rank": 1
                },
                "value": {
                  "value": "2021-08-17T13:28:57.801578Z"
                }
              }
            ],
            "incident_type": {
              "create_in_triage": "always",
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Customer facing production outages",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "is_default": false,
              "name": "Production Outage",
              "private_incidents_only": false,
              "updated_at": "2021-08-17T13:28:57.801578Z"
            },
            "mode": "standard",
            "name": "Our database is sad",
            "permalink": "https://app.incident.io/incidents/123",
            "postmortem_document_url": "https://docs.google.com/my_doc_id",
            "reference": "INC-123",
            "severity": {
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Issues with **low impact**.",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Minor",
              "rank": 1,
              "updated_at": "2021-08-17T13:28:57.801578Z"
            },
            "slack_channel_id": "C02AW36C1M5",
            "slack_channel_name": "inc-165-green-parrot",
            "slack_team_id": "T02A1FSLE8J",
            "summary": "Our database is really really sad, and we don't know why yet.",
            "updated_at": "2021-08-17T13:28:57.801578Z",
            "visibility": "public",
            "workload_minutes_late": 40.7,
            "workload_minutes_sleeping": 0,
            "workload_minutes_total": 60.7,
            "workload_minutes_working": 20
          }
        },
        "properties": {
          "incident": {
            "$ref": "#/components/schemas/IncidentV2ResponseBody"
          }
        },
        "required": [
          "incident"
        ],
        "title": "IncidentsV2EditResponseBody",
        "type": "object"
      },
      "IncidentsV2ListResponseBody": {
        "example": {
          "incidents": [
            {
              "call_url": "https://zoom.us/foo",
              "created_at": "2021-08-17T13:28:57.801578Z",
              "creator": {
                "api_key": {
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "My test API key"
                },
                "user": {
                  "email": "lisa@incident.io",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Lisa Karlin Curtis",
                  "role": "viewer",
                  "slack_user_id": "U02AYNF2XJM"
                }
              },
              "custom_field_entries": [
                {
                  "custom_field": {
                    "description": "Which team is impacted by this issue",
                    "field_type": "single_select",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "name": "Affected Team",
                    "options": [
                      {
                        "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "sort_key": 10,
                        "value": "Product"
                      }
                    ]
                  },
                  "values": [
                    {
                      "value_catalog_entry": {
                        "aliases": [
                          "lawrence@incident.io",
                          "lawrence"
                        ],
                        "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "name": "Primary On-call"
                      },
                      "value_link": "https://google.com/",
                      "value_numeric": "123.456",
                      "value_option": {
                        "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "sort_key": 10,
                        "value": "Product"
                      },
                      "value_text": "This is my text field, I hope you like it"
                    }
                  ]
                }
              ],
              "external_issue_reference": {
                "issue_name": "INC-123",
                "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
                "provider": "asana"
              },
              "id": "01FDAG4SAP5TYPT98WGR2N7W91",
              "incident_role_assignments": [
                {
                  "assignee": {
                    "email": "lisa@incident.io",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "name": "Lisa Karlin Curtis",
                    "role": "viewer",
                    "slack_user_id": "U02AYNF2XJM"
                  },
                  "role": {
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "description": "The person currently coordinating the incident",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                    "name": "Incident Lead",
                    "required": true,
                    "role_type": "lead",
                    "shortform": "lead",
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  }
                }
              ],
              "incident_status": {
                "category": "triage",
                "created_at": "2021-08-17T13:28:57.801578Z",
                "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
                "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                "name": "Closed",
                "rank": 4,
                "updated_at": "2021-08-17T13:28:57.801578Z"
              },
              "incident_timestamp_values": [
                {
                  "incident_timestamp": {
                    "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                    "name": "Impact started",
                    "rank": 1
                  },
                  "value": {
                    "value": "2021-08-17T13:28:57.801578Z"
                  }
                }
              ],
              "incident_type": {
                "create_in_triage": "always",
                "created_at": "2021-08-17T13:28:57.801578Z",
                "description": "Customer facing production outages",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "is_default": false,
                "name": "Production Outage",
                "private_incidents_only": false,
                "updated_at": "2021-08-17T13:28:57.801578Z"
              },
              "mode": "standard",
              "name": "Our database is sad",
              "permalink": "https://app.incident.io/incidents/123",
              "postmortem_document_url": "https://docs.google.com/my_doc_id",
              "reference": "INC-123",
              "severity": {
                "created_at": "2021-08-17T13:28:57.801578Z",
                "description": "Issues with **low impact**.",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Minor",
                "rank": 1,
                "updated_at": "2021-08-17T13:28:57.801578Z"
              },
              "slack_channel_id": "C02AW36C1M5",
              "slack_channel_name": "inc-165-green-parrot",
              "slack_team_id": "T02A1FSLE8J",
              "summary": "Our database is really really sad, and we don't know why yet.",
              "updated_at": "2021-08-17T13:28:57.801578Z",
              "visibility": "public",
              "workload_minutes_late": 40.7,
              "workload_minutes_sleeping": 0,
              "workload_minutes_total": 60.7,
              "workload_minutes_working": 20
            }
          ],
          "pagination_meta": {
            "after": "01FCNDV6P870EA6S7TK1DSYDG0",
            "page_size": 25,
            "total_record_count": 238
          }
        },
        "properties": {
          "incidents": {
            "example": [
              {
                "call_url": "https://zoom.us/foo",
                "created_at": "2021-08-17T13:28:57.801578Z",
                "creator": {
                  "api_key": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "name": "My test API key"
                  },
                  "user": {
                    "email": "lisa@incident.io",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "name": "Lisa Karlin Curtis",
                    "role": "viewer",
                    "slack_user_id": "U02AYNF2XJM"
                  }
                },
                "custom_field_entries": [
                  {
                    "custom_field": {
                      "description": "Which team is impacted by this issue",
                      "field_type": "single_select",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Affected Team",
                      "options": [
                        {
                          "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "sort_key": 10,
                          "value": "Product"
                        }
                      ]
                    },
                    "values": [
                      {
                        "value_catalog_entry": {
                          "aliases": [
                            "lawrence@incident.io",
                            "lawrence"
                          ],
                          "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "name": "Primary On-call"
                        },
                        "value_link": "https://google.com/",
                        "value_numeric": "123.456",
                        "value_option": {
                          "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "sort_key": 10,
                          "value": "Product"
                        },
                        "value_text": "This is my text field, I hope you like it"
                      }
                    ]
                  }
                ],
                "external_issue_reference": {
                  "issue_name": "INC-123",
                  "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
                  "provider": "asana"
                },
                "id": "01FDAG4SAP5TYPT98WGR2N7W91",
                "incident_role_assignments": [
                  {
                    "assignee": {
                      "email": "lisa@incident.io",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Lisa Karlin Curtis",
                      "role": "viewer",
                      "slack_user_id": "U02AYNF2XJM"
                    },
                    "role": {
                      "created_at": "2021-08-17T13:28:57.801578Z",
                      "description": "The person currently coordinating the incident",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                      "name": "Incident Lead",
                      "required": true,
                      "role_type": "lead",
                      "shortform": "lead",
                      "updated_at": "2021-08-17T13:28:57.801578Z"
                    }
                  }
                ],
                "incident_status": {
                  "category": "triage",
                  "created_at": "2021-08-17T13:28:57.801578Z",
                  "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
                  "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                  "name": "Closed",
                  "rank": 4,
                  "updated_at": "2021-08-17T13:28:57.801578Z"
                },
                "incident_timestamp_values": [
                  {
                    "incident_timestamp": {
                      "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                      "name": "Impact started",
                      "rank": 1
                    },
                    "value": {
                      "value": "2021-08-17T13:28:57.801578Z"
                    }
                  }
                ],
                "incident_type": {
                  "create_in_triage": "always",
                  "created_at": "2021-08-17T13:28:57.801578Z",
                  "description": "Customer facing production outages",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "is_default": false,
                  "name": "Production Outage",
                  "private_incidents_only": false,
                  "updated_at": "2021-08-17T13:28:57.801578Z"
                },
                "mode": "standard",
                "name": "Our database is sad",
                "permalink": "https://app.incident.io/incidents/123",
                "postmortem_document_url": "https://docs.google.com/my_doc_id",
                "reference": "INC-123",
                "severity": {
                  "created_at": "2021-08-17T13:28:57.801578Z",
                  "description": "Issues with **low impact**.",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Minor",
                  "rank": 1,
                  "updated_at": "2021-08-17T13:28:57.801578Z"
                },
                "slack_channel_id": "C02AW36C1M5",
                "slack_channel_name": "inc-165-green-parrot",
                "slack_team_id": "T02A1FSLE8J",
                "summary": "Our database is really really sad, and we don't know why yet.",
                "updated_at": "2021-08-17T13:28:57.801578Z",
                "visibility": "public",
                "workload_minutes_late": 40.7,
                "workload_minutes_sleeping": 0,
                "workload_minutes_total": 60.7,
                "workload_minutes_working": 20
              }
            ],
            "items": {
              "$ref": "#/components/schemas/IncidentV2ResponseBody"
            },
            "type": "array"
          },
          "pagination_meta": {
            "$ref": "#/components/schemas/PaginationMetaResultWithTotalResponseBody"
          }
        },
        "required": [
          "incidents"
        ],
        "title": "IncidentsV2ListResponseBody",
        "type": "object"
      },
      "IncidentsV2ShowResponseBody": {
        "example": {
          "incident": {
            "call_url": "https://zoom.us/foo",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "creator": {
              "api_key": {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "My test API key"
              },
              "user": {
                "email": "lisa@incident.io",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Lisa Karlin Curtis",
                "role": "viewer",
                "slack_user_id": "U02AYNF2XJM"
              }
            },
            "custom_field_entries": [
              {
                "custom_field": {
                  "description": "Which team is impacted by this issue",
                  "field_type": "single_select",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Affected Team",
                  "options": [
                    {
                      "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "sort_key": 10,
                      "value": "Product"
                    }
                  ]
                },
                "values": [
                  {
                    "value_catalog_entry": {
                      "aliases": [
                        "lawrence@incident.io",
                        "lawrence"
                      ],
                      "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Primary On-call"
                    },
                    "value_link": "https://google.com/",
                    "value_numeric": "123.456",
                    "value_option": {
                      "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "sort_key": 10,
                      "value": "Product"
                    },
                    "value_text": "This is my text field, I hope you like it"
                  }
                ]
              }
            ],
            "external_issue_reference": {
              "issue_name": "INC-123",
              "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
              "provider": "asana"
            },
            "id": "01FDAG4SAP5TYPT98WGR2N7W91",
            "incident_role_assignments": [
              {
                "assignee": {
                  "email": "lisa@incident.io",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Lisa Karlin Curtis",
                  "role": "viewer",
                  "slack_user_id": "U02AYNF2XJM"
                },
                "role": {
                  "created_at": "2021-08-17T13:28:57.801578Z",
                  "description": "The person currently coordinating the incident",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                  "name": "Incident Lead",
                  "required": true,
                  "role_type": "lead",
                  "shortform": "lead",
                  "updated_at": "2021-08-17T13:28:57.801578Z"
                }
              }
            ],
            "incident_status": {
              "category": "triage",
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
              "id": "01FCNDV6P870EA6S7TK1DSYD5H",
              "name": "Closed",
              "rank": 4,
              "updated_at": "2021-08-17T13:28:57.801578Z"
            },
            "incident_timestamp_values": [
              {
                "incident_timestamp": {
                  "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                  "name": "Impact started",
                  "rank": 1
                },
                "value": {
                  "value": "2021-08-17T13:28:57.801578Z"
                }
              }
            ],
            "incident_type": {
              "create_in_triage": "always",
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Customer facing production outages",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "is_default": false,
              "name": "Production Outage",
              "private_incidents_only": false,
              "updated_at": "2021-08-17T13:28:57.801578Z"
            },
            "mode": "standard",
            "name": "Our database is sad",
            "permalink": "https://app.incident.io/incidents/123",
            "postmortem_document_url": "https://docs.google.com/my_doc_id",
            "reference": "INC-123",
            "severity": {
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Issues with **low impact**.",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Minor",
              "rank": 1,
              "updated_at": "2021-08-17T13:28:57.801578Z"
            },
            "slack_channel_id": "C02AW36C1M5",
            "slack_channel_name": "inc-165-green-parrot",
            "slack_team_id": "T02A1FSLE8J",
            "summary": "Our database is really really sad, and we don't know why yet.",
            "updated_at": "2021-08-17T13:28:57.801578Z",
            "visibility": "public",
            "workload_minutes_late": 40.7,
            "workload_minutes_sleeping": 0,
            "workload_minutes_total": 60.7,
            "workload_minutes_working": 20
          }
        },
        "properties": {
          "incident": {
            "$ref": "#/components/schemas/IncidentV2ResponseBody"
          }
        },
        "required": [
          "incident"
        ],
        "title": "IncidentsV2ShowResponseBody",
        "type": "object"
      },
      "PaginationMetaResultResponseBody": {
        "example": {
          "after": "01FCNDV6P870EA6S7TK1DSYDG0",
          "page_size": 25
        },
        "properties": {
          "after": {
            "description": "If provided, pass this as the 'after' param to load the next page",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "page_size": {
            "default": 25,
            "description": "What was the maximum number of results requested",
            "example": 25,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "page_size"
        ],
        "title": "PaginationMetaResultResponseBody",
        "type": "object"
      },
      "PaginationMetaResultWithTotalResponseBody": {
        "example": {
          "after": "01FCNDV6P870EA6S7TK1DSYDG0",
          "page_size": 25,
          "total_record_count": 238
        },
        "properties": {
          "after": {
            "description": "If provided, pass this as the 'after' param to load the next page",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "page_size": {
            "default": 25,
            "description": "What was the maximum number of results requested",
            "example": 25,
            "format": "int64",
            "type": "integer"
          },
          "total_record_count": {
            "description": "How many matching records were there in total, if known",
            "example": 238,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "page_size"
        ],
        "title": "PaginationMetaResultWithTotalResponseBody",
        "type": "object"
      },
      "RetrospectiveIncidentOptionsV2RequestBody": {
        "example": {
          "slack_channel_id": "abc123"
        },
        "properties": {
          "slack_channel_id": {
            "description": "If the incident mode is 'retrospective', pass the ID of a Slack channel in your workspace to attach the incident to an existing channel, rather than creating a new one",
            "example": "abc123",
            "type": "string"
          }
        },
        "title": "RetrospectiveIncidentOptionsV2RequestBody",
        "type": "object"
      },
      "SeveritiesV1CreateRequestBody": {
        "example": {
          "description": "Issues with **low impact**.",
          "name": "Minor",
          "rank": 1
        },
        "properties": {
          "description": {
            "description": "Description of the severity",
            "example": "Issues with **low impact**.",
            "type": "string"
          },
          "name": {
            "description": "Human readable name of the severity",
            "example": "Minor",
            "maxLength": 50,
            "type": "string"
          },
          "rank": {
            "description": "Rank to help sort severities (lower numbers are less severe)",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "description",
          "name"
        ],
        "title": "SeveritiesV1CreateRequestBody",
        "type": "object"
      },
      "SeveritiesV1CreateResponseBody": {
        "example": {
          "severity": {
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Issues with **low impact**.",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "name": "Minor",
            "rank": 1,
            "updated_at": "2021-08-17T13:28:57.801578Z"
          }
        },
        "properties": {
          "severity": {
            "$ref": "#/components/schemas/SeverityV1ResponseBody"
          }
        },
        "required": [
          "severity"
        ],
        "title": "SeveritiesV1CreateResponseBody",
        "type": "object"
      },
      "SeveritiesV1ListResponseBody": {
        "example": {
          "severities": [
            {
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Issues with **low impact**.",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Minor",
              "rank": 1,
              "updated_at": "2021-08-17T13:28:57.801578Z"
            }
          ]
        },
        "properties": {
          "severities": {
            "example": [
              {
                "created_at": "2021-08-17T13:28:57.801578Z",
                "description": "Issues with **low impact**.",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Minor",
                "rank": 1,
                "updated_at": "2021-08-17T13:28:57.801578Z"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/SeverityV1ResponseBody"
            },
            "type": "array"
          }
        },
        "required": [
          "severities"
        ],
        "title": "SeveritiesV1ListResponseBody",
        "type": "object"
      },
      "SeveritiesV1ShowResponseBody": {
        "example": {
          "severity": {
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Issues with **low impact**.",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "name": "Minor",
            "rank": 1,
            "updated_at": "2021-08-17T13:28:57.801578Z"
          }
        },
        "properties": {
          "severity": {
            "$ref": "#/components/schemas/SeverityV1ResponseBody"
          }
        },
        "required": [
          "severity"
        ],
        "title": "SeveritiesV1ShowResponseBody",
        "type": "object"
      },
      "SeveritiesV1UpdateRequestBody": {
        "example": {
          "description": "Issues with **low impact**.",
          "name": "Minor",
          "rank": 1
        },
        "properties": {
          "description": {
            "description": "Description of the severity",
            "example": "Issues with **low impact**.",
            "type": "string"
          },
          "name": {
            "description": "Human readable name of the severity",
            "example": "Minor",
            "maxLength": 50,
            "type": "string"
          },
          "rank": {
            "description": "Rank to help sort severities (lower numbers are less severe)",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "description",
          "name"
        ],
        "title": "SeveritiesV1UpdateRequestBody",
        "type": "object"
      },
      "SeveritiesV1UpdateResponseBody": {
        "example": {
          "severity": {
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Issues with **low impact**.",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "name": "Minor",
            "rank": 1,
            "updated_at": "2021-08-17T13:28:57.801578Z"
          }
        },
        "properties": {
          "severity": {
            "$ref": "#/components/schemas/SeverityV1ResponseBody"
          }
        },
        "required": [
          "severity"
        ],
        "title": "SeveritiesV1UpdateResponseBody",
        "type": "object"
      },
      "SeverityV1ResponseBody": {
        "example": {
          "created_at": "2021-08-17T13:28:57.801578Z",
          "description": "Issues with **low impact**.",
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "name": "Minor",
          "rank": 1,
          "updated_at": "2021-08-17T13:28:57.801578Z"
        },
        "properties": {
          "created_at": {
            "description": "When the action was created",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "description": {
            "description": "Description of the severity",
            "example": "Issues with **low impact**.",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier of the severity",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "name": {
            "description": "Human readable name of the severity",
            "example": "Minor",
            "maxLength": 50,
            "type": "string"
          },
          "rank": {
            "description": "Rank to help sort severities (lower numbers are less severe)",
            "example": 1,
            "format": "int64",
            "type": "integer"
          },
          "updated_at": {
            "description": "When the action was last updated",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "created_at",
          "description",
          "id",
          "name",
          "rank",
          "updated_at"
        ],
        "title": "SeverityV1ResponseBody",
        "type": "object"
      },
      "SeverityV2ResponseBody": {
        "example": {
          "created_at": "2021-08-17T13:28:57.801578Z",
          "description": "Issues with **low impact**.",
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "name": "Minor",
          "rank": 1,
          "updated_at": "2021-08-17T13:28:57.801578Z"
        },
        "properties": {
          "created_at": {
            "description": "When the action was created",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "description": {
            "description": "Description of the severity",
            "example": "Issues with **low impact**.",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier of the severity",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "name": {
            "description": "Human readable name of the severity",
            "example": "Minor",
            "maxLength": 50,
            "type": "string"
          },
          "rank": {
            "description": "Rank to help sort severities (lower numbers are less severe)",
            "example": 1,
            "format": "int64",
            "type": "integer"
          },
          "updated_at": {
            "description": "When the action was last updated",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "created_at",
          "description",
          "id",
          "name",
          "rank",
          "updated_at"
        ],
        "title": "SeverityV2ResponseBody",
        "type": "object"
      },
      "UserReferencePayloadV1RequestBody": {
        "example": {
          "email": "bob@example.com",
          "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
          "slack_user_id": "USER123"
        },
        "properties": {
          "email": {
            "description": "The user's email address, matching the email on their Slack account",
            "example": "bob@example.com",
            "type": "string"
          },
          "id": {
            "description": "The incident.io ID of a user",
            "example": "01G0J1EXE7AXZ2C93K61WBPYEH",
            "type": "string"
          },
          "slack_user_id": {
            "description": "The ID of the user's Slack account.",
            "example": "USER123",
            "type": "string"
          }
        },
        "title": "UserReferencePayloadV1RequestBody",
        "type": "object"
      },
      "UserReferencePayloadV2RequestBody": {
        "example": {
          "email": "bob@example.com",
          "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
          "slack_user_id": "USER123"
        },
        "properties": {
          "email": {
            "description": "The user's email address, matching the email on their Slack account",
            "example": "bob@example.com",
            "type": "string"
          },
          "id": {
            "description": "The incident.io ID of a user",
            "example": "01G0J1EXE7AXZ2C93K61WBPYEH",
            "type": "string"
          },
          "slack_user_id": {
            "description": "The ID of the user's Slack account.",
            "example": "USER123",
            "type": "string"
          }
        },
        "title": "UserReferencePayloadV2RequestBody",
        "type": "object"
      },
      "UserV1ResponseBody": {
        "example": {
          "email": "lisa@incident.io",
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "name": "Lisa Karlin Curtis",
          "role": "viewer",
          "slack_user_id": "U02AYNF2XJM"
        },
        "properties": {
          "email": {
            "description": "Email address of the user.",
            "example": "lisa@incident.io",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier of the user",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "name": {
            "description": "Name of the user",
            "example": "Lisa Karlin Curtis",
            "type": "string"
          },
          "role": {
            "description": "DEPRECATED: Role of the user as of March 9th 2023, this value is no longer updated.",
            "enum": [
              "viewer",
              "responder",
              "administrator",
              "owner",
              "unset"
            ],
            "example": "viewer",
            "type": "string"
          },
          "slack_user_id": {
            "description": "Slack ID of the user",
            "example": "U02AYNF2XJM",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "role"
        ],
        "title": "UserV1ResponseBody",
        "type": "object"
      },
      "UserV2ResponseBody": {
        "example": {
          "email": "lisa@incident.io",
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "name": "Lisa Karlin Curtis",
          "role": "viewer",
          "slack_user_id": "U02AYNF2XJM"
        },
        "properties": {
          "email": {
            "description": "Email address of the user.",
            "example": "lisa@incident.io",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier of the user",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "name": {
            "description": "Name of the user",
            "example": "Lisa Karlin Curtis",
            "type": "string"
          },
          "role": {
            "description": "DEPRECATED: Role of the user as of March 9th 2023, this value is no longer updated.",
            "enum": [
              "viewer",
              "responder",
              "administrator",
              "owner",
              "unset"
            ],
            "example": "viewer",
            "type": "string"
          },
          "slack_user_id": {
            "description": "Slack ID of the user",
            "example": "U02AYNF2XJM",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "role"
        ],
        "title": "UserV2ResponseBody",
        "type": "object"
      },
      "UsersV2ListResponseBody": {
        "example": {
          "pagination_meta": {
            "after": "01FCNDV6P870EA6S7TK1DSYDG0",
            "page_size": 25
          },
          "users": [
            {
              "email": "lisa@incident.io",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Lisa Karlin Curtis",
              "role": "viewer",
              "slack_user_id": "U02AYNF2XJM"
            }
          ]
        },
        "properties": {
          "pagination_meta": {
            "$ref": "#/components/schemas/PaginationMetaResultResponseBody"
          },
          "users": {
            "example": [
              {
                "email": "lisa@incident.io",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Lisa Karlin Curtis",
                "role": "viewer",
                "slack_user_id": "U02AYNF2XJM"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/UserV2ResponseBody"
            },
            "type": "array"
          }
        },
        "required": [
          "pagination_meta",
          "users"
        ],
        "title": "UsersV2ListResponseBody",
        "type": "object"
      },
      "UsersV2ShowResponseBody": {
        "example": {
          "user": {
            "email": "lisa@incident.io",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "name": "Lisa Karlin Curtis",
            "role": "viewer",
            "slack_user_id": "U02AYNF2XJM"
          }
        },
        "properties": {
          "user": {
            "$ref": "#/components/schemas/UserV2ResponseBody"
          }
        },
        "required": [
          "user"
        ],
        "title": "UsersV2ShowResponseBody",
        "type": "object"
      },
      "UtilitiesV1IdentityResponseBody": {
        "example": {
          "identity": {
            "name": "Alertmanager token",
            "roles": [
              "incident_creator"
            ]
          }
        },
        "properties": {
          "identity": {
            "$ref": "#/components/schemas/IdentityV1ResponseBody"
          }
        },
        "required": [
          "identity"
        ],
        "title": "UtilitiesV1IdentityResponseBody",
        "type": "object"
      },
      "WebhooksAllResponseBody": {
        "example": {
          "event_type": "public_incident.incident_created_v2",
          "private_incident.action_created_v1": {
            "id": "abc123"
          },
          "private_incident.action_updated_v1": {
            "id": "abc123"
          },
          "private_incident.follow_up_created_v1": {
            "id": "abc123"
          },
          "private_incident.follow_up_updated_v1": {
            "id": "abc123"
          },
          "private_incident.incident_created_v2": {
            "id": "abc123"
          },
          "private_incident.incident_updated_v2": {
            "id": "abc123"
          },
          "public_incident.action_created_v1": {
            "assignee": {
              "email": "lisa@incident.io",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Lisa Karlin Curtis",
              "role": "viewer",
              "slack_user_id": "U02AYNF2XJM"
            },
            "completed_at": "2021-08-17T13:28:57.801578Z",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Call the fire brigade",
            "external_issue_reference": {
              "issue_name": "INC-123",
              "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
              "provider": "asana"
            },
            "follow_up": true,
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "incident_id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "status": "outstanding",
            "updated_at": "2021-08-17T13:28:57.801578Z"
          },
          "public_incident.action_updated_v1": {
            "assignee": {
              "email": "lisa@incident.io",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Lisa Karlin Curtis",
              "role": "viewer",
              "slack_user_id": "U02AYNF2XJM"
            },
            "completed_at": "2021-08-17T13:28:57.801578Z",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Call the fire brigade",
            "external_issue_reference": {
              "issue_name": "INC-123",
              "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
              "provider": "asana"
            },
            "follow_up": true,
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "incident_id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "status": "outstanding",
            "updated_at": "2021-08-17T13:28:57.801578Z"
          },
          "public_incident.follow_up_created_v1": {
            "assignee": {
              "email": "lisa@incident.io",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Lisa Karlin Curtis",
              "role": "viewer",
              "slack_user_id": "U02AYNF2XJM"
            },
            "completed_at": "2021-08-17T13:28:57.801578Z",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Call the fire brigade",
            "external_issue_reference": {
              "issue_name": "INC-123",
              "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
              "provider": "asana"
            },
            "follow_up": true,
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "incident_id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "status": "outstanding",
            "updated_at": "2021-08-17T13:28:57.801578Z"
          },
          "public_incident.follow_up_updated_v1": {
            "assignee": {
              "email": "lisa@incident.io",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Lisa Karlin Curtis",
              "role": "viewer",
              "slack_user_id": "U02AYNF2XJM"
            },
            "completed_at": "2021-08-17T13:28:57.801578Z",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Call the fire brigade",
            "external_issue_reference": {
              "issue_name": "INC-123",
              "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
              "provider": "asana"
            },
            "follow_up": true,
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "incident_id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "status": "outstanding",
            "updated_at": "2021-08-17T13:28:57.801578Z"
          },
          "public_incident.incident_created_v2": {
            "call_url": "https://zoom.us/foo",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "creator": {
              "api_key": {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "My test API key"
              },
              "user": {
                "email": "lisa@incident.io",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Lisa Karlin Curtis",
                "role": "viewer",
                "slack_user_id": "U02AYNF2XJM"
              }
            },
            "custom_field_entries": [
              {
                "custom_field": {
                  "description": "Which team is impacted by this issue",
                  "field_type": "single_select",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Affected Team",
                  "options": [
                    {
                      "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "sort_key": 10,
                      "value": "Product"
                    }
                  ]
                },
                "values": [
                  {
                    "value_catalog_entry": {
                      "aliases": [
                        "lawrence@incident.io",
                        "lawrence"
                      ],
                      "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Primary On-call"
                    },
                    "value_link": "https://google.com/",
                    "value_numeric": "123.456",
                    "value_option": {
                      "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "sort_key": 10,
                      "value": "Product"
                    },
                    "value_text": "This is my text field, I hope you like it"
                  }
                ]
              }
            ],
            "external_issue_reference": {
              "issue_name": "INC-123",
              "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
              "provider": "asana"
            },
            "id": "01FDAG4SAP5TYPT98WGR2N7W91",
            "incident_role_assignments": [
              {
                "assignee": {
                  "email": "lisa@incident.io",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Lisa Karlin Curtis",
                  "role": "viewer",
                  "slack_user_id": "U02AYNF2XJM"
                },
                "role": {
                  "created_at": "2021-08-17T13:28:57.801578Z",
                  "description": "The person currently coordinating the incident",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                  "name": "Incident Lead",
                  "required": true,
                  "role_type": "lead",
                  "shortform": "lead",
                  "updated_at": "2021-08-17T13:28:57.801578Z"
                }
              }
            ],
            "incident_status": {
              "category": "triage",
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
              "id": "01FCNDV6P870EA6S7TK1DSYD5H",
              "name": "Closed",
              "rank": 4,
              "updated_at": "2021-08-17T13:28:57.801578Z"
            },
            "incident_timestamp_values": [
              {
                "incident_timestamp": {
                  "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                  "name": "Impact started",
                  "rank": 1
                },
                "value": {
                  "value": "2021-08-17T13:28:57.801578Z"
                }
              }
            ],
            "incident_type": {
              "create_in_triage": "always",
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Customer facing production outages",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "is_default": false,
              "name": "Production Outage",
              "private_incidents_only": false,
              "updated_at": "2021-08-17T13:28:57.801578Z"
            },
            "mode": "standard",
            "name": "Our database is sad",
            "permalink": "https://app.incident.io/incidents/123",
            "postmortem_document_url": "https://docs.google.com/my_doc_id",
            "reference": "INC-123",
            "severity": {
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Issues with **low impact**.",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Minor",
              "rank": 1,
              "updated_at": "2021-08-17T13:28:57.801578Z"
            },
            "slack_channel_id": "C02AW36C1M5",
            "slack_channel_name": "inc-165-green-parrot",
            "slack_team_id": "T02A1FSLE8J",
            "summary": "Our database is really really sad, and we don't know why yet.",
            "updated_at": "2021-08-17T13:28:57.801578Z",
            "visibility": "public",
            "workload_minutes_late": 40.7,
            "workload_minutes_sleeping": 0,
            "workload_minutes_total": 60.7,
            "workload_minutes_working": 20
          },
          "public_incident.incident_updated_v2": {
            "call_url": "https://zoom.us/foo",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "creator": {
              "api_key": {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "My test API key"
              },
              "user": {
                "email": "lisa@incident.io",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Lisa Karlin Curtis",
                "role": "viewer",
                "slack_user_id": "U02AYNF2XJM"
              }
            },
            "custom_field_entries": [
              {
                "custom_field": {
                  "description": "Which team is impacted by this issue",
                  "field_type": "single_select",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Affected Team",
                  "options": [
                    {
                      "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "sort_key": 10,
                      "value": "Product"
                    }
                  ]
                },
                "values": [
                  {
                    "value_catalog_entry": {
                      "aliases": [
                        "lawrence@incident.io",
                        "lawrence"
                      ],
                      "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Primary On-call"
                    },
                    "value_link": "https://google.com/",
                    "value_numeric": "123.456",
                    "value_option": {
                      "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "sort_key": 10,
                      "value": "Product"
                    },
                    "value_text": "This is my text field, I hope you like it"
                  }
                ]
              }
            ],
            "external_issue_reference": {
              "issue_name": "INC-123",
              "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
              "provider": "asana"
            },
            "id": "01FDAG4SAP5TYPT98WGR2N7W91",
            "incident_role_assignments": [
              {
                "assignee": {
                  "email": "lisa@incident.io",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Lisa Karlin Curtis",
                  "role": "viewer",
                  "slack_user_id": "U02AYNF2XJM"
                },
                "role": {
                  "created_at": "2021-08-17T13:28:57.801578Z",
                  "description": "The person currently coordinating the incident",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                  "name": "Incident Lead",
                  "required": true,
                  "role_type": "lead",
                  "shortform": "lead",
                  "updated_at": "2021-08-17T13:28:57.801578Z"
                }
              }
            ],
            "incident_status": {
              "category": "triage",
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
              "id": "01FCNDV6P870EA6S7TK1DSYD5H",
              "name": "Closed",
              "rank": 4,
              "updated_at": "2021-08-17T13:28:57.801578Z"
            },
            "incident_timestamp_values": [
              {
                "incident_timestamp": {
                  "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                  "name": "Impact started",
                  "rank": 1
                },
                "value": {
                  "value": "2021-08-17T13:28:57.801578Z"
                }
              }
            ],
            "incident_type": {
              "create_in_triage": "always",
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Customer facing production outages",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "is_default": false,
              "name": "Production Outage",
              "private_incidents_only": false,
              "updated_at": "2021-08-17T13:28:57.801578Z"
            },
            "mode": "standard",
            "name": "Our database is sad",
            "permalink": "https://app.incident.io/incidents/123",
            "postmortem_document_url": "https://docs.google.com/my_doc_id",
            "reference": "INC-123",
            "severity": {
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Issues with **low impact**.",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Minor",
              "rank": 1,
              "updated_at": "2021-08-17T13:28:57.801578Z"
            },
            "slack_channel_id": "C02AW36C1M5",
            "slack_channel_name": "inc-165-green-parrot",
            "slack_team_id": "T02A1FSLE8J",
            "summary": "Our database is really really sad, and we don't know why yet.",
            "updated_at": "2021-08-17T13:28:57.801578Z",
            "visibility": "public",
            "workload_minutes_late": 40.7,
            "workload_minutes_sleeping": 0,
            "workload_minutes_total": 60.7,
            "workload_minutes_working": 20
          }
        },
        "properties": {
          "event_type": {
            "description": "What type of event is this webhook for?",
            "enum": [
              "public_incident.incident_created_v2",
              "private_incident.incident_created_v2",
              "public_incident.incident_updated_v2",
              "private_incident.incident_updated_v2",
              "public_incident.follow_up_created_v1",
              "private_incident.follow_up_created_v1",
              "public_incident.follow_up_updated_v1",
              "private_incident.follow_up_updated_v1",
              "public_incident.action_created_v1",
              "private_incident.action_created_v1",
              "public_incident.action_updated_v1",
              "private_incident.action_updated_v1"
            ],
            "example": "public_incident.incident_created_v2",
            "type": "string"
          },
          "private_incident.action_created_v1": {
            "$ref": "#/components/schemas/webhook_private_resourceV2ResponseBody"
          },
          "private_incident.action_updated_v1": {
            "$ref": "#/components/schemas/webhook_private_resourceV2ResponseBody"
          },
          "private_incident.follow_up_created_v1": {
            "$ref": "#/components/schemas/webhook_private_resourceV2ResponseBody"
          },
          "private_incident.follow_up_updated_v1": {
            "$ref": "#/components/schemas/webhook_private_resourceV2ResponseBody"
          },
          "private_incident.incident_created_v2": {
            "$ref": "#/components/schemas/webhook_private_resourceV2ResponseBody"
          },
          "private_incident.incident_updated_v2": {
            "$ref": "#/components/schemas/webhook_private_resourceV2ResponseBody"
          },
          "public_incident.action_created_v1": {
            "$ref": "#/components/schemas/ActionV1ResponseBody"
          },
          "public_incident.action_updated_v1": {
            "$ref": "#/components/schemas/ActionV1ResponseBody"
          },
          "public_incident.follow_up_created_v1": {
            "$ref": "#/components/schemas/ActionV1ResponseBody"
          },
          "public_incident.follow_up_updated_v1": {
            "$ref": "#/components/schemas/ActionV1ResponseBody"
          },
          "public_incident.incident_created_v2": {
            "$ref": "#/components/schemas/IncidentV2ResponseBody"
          },
          "public_incident.incident_updated_v2": {
            "$ref": "#/components/schemas/IncidentV2ResponseBody"
          }
        },
        "required": [
          "event_type"
        ],
        "title": "WebhooksAllResponseBody",
        "type": "object"
      },
      "WebhooksPrivateIncidentActionCreatedV1ResponseBody": {
        "example": {
          "event_type": "private_incident.action_created_v1",
          "private_incident.action_created_v1": {
            "id": "abc123"
          }
        },
        "properties": {
          "event_type": {
            "description": "What type of event is this webhook for?",
            "enum": [
              "public_incident.incident_created_v2",
              "private_incident.incident_created_v2",
              "public_incident.incident_updated_v2",
              "private_incident.incident_updated_v2",
              "public_incident.follow_up_created_v1",
              "private_incident.follow_up_created_v1",
              "public_incident.follow_up_updated_v1",
              "private_incident.follow_up_updated_v1",
              "public_incident.action_created_v1",
              "private_incident.action_created_v1",
              "public_incident.action_updated_v1",
              "private_incident.action_updated_v1"
            ],
            "example": "private_incident.action_created_v1",
            "type": "string"
          },
          "private_incident.action_created_v1": {
            "$ref": "#/components/schemas/webhook_private_resourceV2ResponseBody"
          }
        },
        "required": [
          "event_type",
          "private_incident.action_created_v1"
        ],
        "title": "WebhooksPrivateIncidentActionCreatedV1ResponseBody",
        "type": "object"
      },
      "WebhooksPrivateIncidentActionUpdatedV1ResponseBody": {
        "example": {
          "event_type": "private_incident.action_updated_v1",
          "private_incident.action_updated_v1": {
            "id": "abc123"
          }
        },
        "properties": {
          "event_type": {
            "description": "What type of event is this webhook for?",
            "enum": [
              "public_incident.incident_created_v2",
              "private_incident.incident_created_v2",
              "public_incident.incident_updated_v2",
              "private_incident.incident_updated_v2",
              "public_incident.follow_up_created_v1",
              "private_incident.follow_up_created_v1",
              "public_incident.follow_up_updated_v1",
              "private_incident.follow_up_updated_v1",
              "public_incident.action_created_v1",
              "private_incident.action_created_v1",
              "public_incident.action_updated_v1",
              "private_incident.action_updated_v1"
            ],
            "example": "private_incident.action_updated_v1",
            "type": "string"
          },
          "private_incident.action_updated_v1": {
            "$ref": "#/components/schemas/webhook_private_resourceV2ResponseBody"
          }
        },
        "required": [
          "event_type",
          "private_incident.action_updated_v1"
        ],
        "title": "WebhooksPrivateIncidentActionUpdatedV1ResponseBody",
        "type": "object"
      },
      "WebhooksPrivateIncidentFollowUpCreatedV1ResponseBody": {
        "example": {
          "event_type": "private_incident.follow_up_created_v1",
          "private_incident.follow_up_created_v1": {
            "id": "abc123"
          }
        },
        "properties": {
          "event_type": {
            "description": "What type of event is this webhook for?",
            "enum": [
              "public_incident.incident_created_v2",
              "private_incident.incident_created_v2",
              "public_incident.incident_updated_v2",
              "private_incident.incident_updated_v2",
              "public_incident.follow_up_created_v1",
              "private_incident.follow_up_created_v1",
              "public_incident.follow_up_updated_v1",
              "private_incident.follow_up_updated_v1",
              "public_incident.action_created_v1",
              "private_incident.action_created_v1",
              "public_incident.action_updated_v1",
              "private_incident.action_updated_v1"
            ],
            "example": "private_incident.follow_up_created_v1",
            "type": "string"
          },
          "private_incident.follow_up_created_v1": {
            "$ref": "#/components/schemas/webhook_private_resourceV2ResponseBody"
          }
        },
        "required": [
          "event_type",
          "private_incident.follow_up_created_v1"
        ],
        "title": "WebhooksPrivateIncidentFollowUpCreatedV1ResponseBody",
        "type": "object"
      },
      "WebhooksPrivateIncidentFollowUpUpdatedV1ResponseBody": {
        "example": {
          "event_type": "private_incident.follow_up_updated_v1",
          "private_incident.follow_up_updated_v1": {
            "id": "abc123"
          }
        },
        "properties": {
          "event_type": {
            "description": "What type of event is this webhook for?",
            "enum": [
              "public_incident.incident_created_v2",
              "private_incident.incident_created_v2",
              "public_incident.incident_updated_v2",
              "private_incident.incident_updated_v2",
              "public_incident.follow_up_created_v1",
              "private_incident.follow_up_created_v1",
              "public_incident.follow_up_updated_v1",
              "private_incident.follow_up_updated_v1",
              "public_incident.action_created_v1",
              "private_incident.action_created_v1",
              "public_incident.action_updated_v1",
              "private_incident.action_updated_v1"
            ],
            "example": "private_incident.follow_up_updated_v1",
            "type": "string"
          },
          "private_incident.follow_up_updated_v1": {
            "$ref": "#/components/schemas/webhook_private_resourceV2ResponseBody"
          }
        },
        "required": [
          "event_type",
          "private_incident.follow_up_updated_v1"
        ],
        "title": "WebhooksPrivateIncidentFollowUpUpdatedV1ResponseBody",
        "type": "object"
      },
      "WebhooksPrivateIncidentIncidentCreatedV2ResponseBody": {
        "example": {
          "event_type": "private_incident.incident_created_v2",
          "private_incident.incident_created_v2": {
            "id": "abc123"
          }
        },
        "properties": {
          "event_type": {
            "description": "What type of event is this webhook for?",
            "enum": [
              "public_incident.incident_created_v2",
              "private_incident.incident_created_v2",
              "public_incident.incident_updated_v2",
              "private_incident.incident_updated_v2",
              "public_incident.follow_up_created_v1",
              "private_incident.follow_up_created_v1",
              "public_incident.follow_up_updated_v1",
              "private_incident.follow_up_updated_v1",
              "public_incident.action_created_v1",
              "private_incident.action_created_v1",
              "public_incident.action_updated_v1",
              "private_incident.action_updated_v1"
            ],
            "example": "private_incident.incident_created_v2",
            "type": "string"
          },
          "private_incident.incident_created_v2": {
            "$ref": "#/components/schemas/webhook_private_resourceV2ResponseBody"
          }
        },
        "required": [
          "event_type",
          "private_incident.incident_created_v2"
        ],
        "title": "WebhooksPrivateIncidentIncidentCreatedV2ResponseBody",
        "type": "object"
      },
      "WebhooksPrivateIncidentIncidentUpdatedV2ResponseBody": {
        "example": {
          "event_type": "private_incident.incident_updated_v2",
          "private_incident.incident_updated_v2": {
            "id": "abc123"
          }
        },
        "properties": {
          "event_type": {
            "description": "What type of event is this webhook for?",
            "enum": [
              "public_incident.incident_created_v2",
              "private_incident.incident_created_v2",
              "public_incident.incident_updated_v2",
              "private_incident.incident_updated_v2",
              "public_incident.follow_up_created_v1",
              "private_incident.follow_up_created_v1",
              "public_incident.follow_up_updated_v1",
              "private_incident.follow_up_updated_v1",
              "public_incident.action_created_v1",
              "private_incident.action_created_v1",
              "public_incident.action_updated_v1",
              "private_incident.action_updated_v1"
            ],
            "example": "private_incident.incident_updated_v2",
            "type": "string"
          },
          "private_incident.incident_updated_v2": {
            "$ref": "#/components/schemas/webhook_private_resourceV2ResponseBody"
          }
        },
        "required": [
          "event_type",
          "private_incident.incident_updated_v2"
        ],
        "title": "WebhooksPrivateIncidentIncidentUpdatedV2ResponseBody",
        "type": "object"
      },
      "WebhooksPublicIncidentActionCreatedV1ResponseBody": {
        "example": {
          "event_type": "public_incident.action_created_v1",
          "public_incident.action_created_v1": {
            "assignee": {
              "email": "lisa@incident.io",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Lisa Karlin Curtis",
              "role": "viewer",
              "slack_user_id": "U02AYNF2XJM"
            },
            "completed_at": "2021-08-17T13:28:57.801578Z",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Call the fire brigade",
            "external_issue_reference": {
              "issue_name": "INC-123",
              "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
              "provider": "asana"
            },
            "follow_up": true,
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "incident_id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "status": "outstanding",
            "updated_at": "2021-08-17T13:28:57.801578Z"
          }
        },
        "properties": {
          "event_type": {
            "description": "What type of event is this webhook for?",
            "enum": [
              "public_incident.incident_created_v2",
              "private_incident.incident_created_v2",
              "public_incident.incident_updated_v2",
              "private_incident.incident_updated_v2",
              "public_incident.follow_up_created_v1",
              "private_incident.follow_up_created_v1",
              "public_incident.follow_up_updated_v1",
              "private_incident.follow_up_updated_v1",
              "public_incident.action_created_v1",
              "private_incident.action_created_v1",
              "public_incident.action_updated_v1",
              "private_incident.action_updated_v1"
            ],
            "example": "public_incident.action_created_v1",
            "type": "string"
          },
          "public_incident.action_created_v1": {
            "$ref": "#/components/schemas/ActionV1ResponseBody"
          }
        },
        "required": [
          "event_type",
          "public_incident.action_created_v1"
        ],
        "title": "WebhooksPublicIncidentActionCreatedV1ResponseBody",
        "type": "object"
      },
      "WebhooksPublicIncidentActionUpdatedV1ResponseBody": {
        "example": {
          "event_type": "public_incident.action_updated_v1",
          "public_incident.action_updated_v1": {
            "assignee": {
              "email": "lisa@incident.io",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Lisa Karlin Curtis",
              "role": "viewer",
              "slack_user_id": "U02AYNF2XJM"
            },
            "completed_at": "2021-08-17T13:28:57.801578Z",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Call the fire brigade",
            "external_issue_reference": {
              "issue_name": "INC-123",
              "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
              "provider": "asana"
            },
            "follow_up": true,
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "incident_id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "status": "outstanding",
            "updated_at": "2021-08-17T13:28:57.801578Z"
          }
        },
        "properties": {
          "event_type": {
            "description": "What type of event is this webhook for?",
            "enum": [
              "public_incident.incident_created_v2",
              "private_incident.incident_created_v2",
              "public_incident.incident_updated_v2",
              "private_incident.incident_updated_v2",
              "public_incident.follow_up_created_v1",
              "private_incident.follow_up_created_v1",
              "public_incident.follow_up_updated_v1",
              "private_incident.follow_up_updated_v1",
              "public_incident.action_created_v1",
              "private_incident.action_created_v1",
              "public_incident.action_updated_v1",
              "private_incident.action_updated_v1"
            ],
            "example": "public_incident.action_updated_v1",
            "type": "string"
          },
          "public_incident.action_updated_v1": {
            "$ref": "#/components/schemas/ActionV1ResponseBody"
          }
        },
        "required": [
          "event_type",
          "public_incident.action_updated_v1"
        ],
        "title": "WebhooksPublicIncidentActionUpdatedV1ResponseBody",
        "type": "object"
      },
      "WebhooksPublicIncidentFollowUpCreatedV1ResponseBody": {
        "example": {
          "event_type": "public_incident.follow_up_created_v1",
          "public_incident.follow_up_created_v1": {
            "assignee": {
              "email": "lisa@incident.io",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Lisa Karlin Curtis",
              "role": "viewer",
              "slack_user_id": "U02AYNF2XJM"
            },
            "completed_at": "2021-08-17T13:28:57.801578Z",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Call the fire brigade",
            "external_issue_reference": {
              "issue_name": "INC-123",
              "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
              "provider": "asana"
            },
            "follow_up": true,
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "incident_id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "status": "outstanding",
            "updated_at": "2021-08-17T13:28:57.801578Z"
          }
        },
        "properties": {
          "event_type": {
            "description": "What type of event is this webhook for?",
            "enum": [
              "public_incident.incident_created_v2",
              "private_incident.incident_created_v2",
              "public_incident.incident_updated_v2",
              "private_incident.incident_updated_v2",
              "public_incident.follow_up_created_v1",
              "private_incident.follow_up_created_v1",
              "public_incident.follow_up_updated_v1",
              "private_incident.follow_up_updated_v1",
              "public_incident.action_created_v1",
              "private_incident.action_created_v1",
              "public_incident.action_updated_v1",
              "private_incident.action_updated_v1"
            ],
            "example": "public_incident.follow_up_created_v1",
            "type": "string"
          },
          "public_incident.follow_up_created_v1": {
            "$ref": "#/components/schemas/ActionV1ResponseBody"
          }
        },
        "required": [
          "event_type",
          "public_incident.follow_up_created_v1"
        ],
        "title": "WebhooksPublicIncidentFollowUpCreatedV1ResponseBody",
        "type": "object"
      },
      "WebhooksPublicIncidentFollowUpUpdatedV1ResponseBody": {
        "example": {
          "event_type": "public_incident.follow_up_updated_v1",
          "public_incident.follow_up_updated_v1": {
            "assignee": {
              "email": "lisa@incident.io",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Lisa Karlin Curtis",
              "role": "viewer",
              "slack_user_id": "U02AYNF2XJM"
            },
            "completed_at": "2021-08-17T13:28:57.801578Z",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Call the fire brigade",
            "external_issue_reference": {
              "issue_name": "INC-123",
              "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
              "provider": "asana"
            },
            "follow_up": true,
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "incident_id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "status": "outstanding",
            "updated_at": "2021-08-17T13:28:57.801578Z"
          }
        },
        "properties": {
          "event_type": {
            "description": "What type of event is this webhook for?",
            "enum": [
              "public_incident.incident_created_v2",
              "private_incident.incident_created_v2",
              "public_incident.incident_updated_v2",
              "private_incident.incident_updated_v2",
              "public_incident.follow_up_created_v1",
              "private_incident.follow_up_created_v1",
              "public_incident.follow_up_updated_v1",
              "private_incident.follow_up_updated_v1",
              "public_incident.action_created_v1",
              "private_incident.action_created_v1",
              "public_incident.action_updated_v1",
              "private_incident.action_updated_v1"
            ],
            "example": "public_incident.follow_up_updated_v1",
            "type": "string"
          },
          "public_incident.follow_up_updated_v1": {
            "$ref": "#/components/schemas/ActionV1ResponseBody"
          }
        },
        "required": [
          "event_type",
          "public_incident.follow_up_updated_v1"
        ],
        "title": "WebhooksPublicIncidentFollowUpUpdatedV1ResponseBody",
        "type": "object"
      },
      "WebhooksPublicIncidentIncidentCreatedV2ResponseBody": {
        "example": {
          "event_type": "public_incident.incident_created_v2",
          "public_incident.incident_created_v2": {
            "call_url": "https://zoom.us/foo",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "creator": {
              "api_key": {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "My test API key"
              },
              "user": {
                "email": "lisa@incident.io",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Lisa Karlin Curtis",
                "role": "viewer",
                "slack_user_id": "U02AYNF2XJM"
              }
            },
            "custom_field_entries": [
              {
                "custom_field": {
                  "description": "Which team is impacted by this issue",
                  "field_type": "single_select",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Affected Team",
                  "options": [
                    {
                      "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "sort_key": 10,
                      "value": "Product"
                    }
                  ]
                },
                "values": [
                  {
                    "value_catalog_entry": {
                      "aliases": [
                        "lawrence@incident.io",
                        "lawrence"
                      ],
                      "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Primary On-call"
                    },
                    "value_link": "https://google.com/",
                    "value_numeric": "123.456",
                    "value_option": {
                      "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "sort_key": 10,
                      "value": "Product"
                    },
                    "value_text": "This is my text field, I hope you like it"
                  }
                ]
              }
            ],
            "external_issue_reference": {
              "issue_name": "INC-123",
              "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
              "provider": "asana"
            },
            "id": "01FDAG4SAP5TYPT98WGR2N7W91",
            "incident_role_assignments": [
              {
                "assignee": {
                  "email": "lisa@incident.io",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Lisa Karlin Curtis",
                  "role": "viewer",
                  "slack_user_id": "U02AYNF2XJM"
                },
                "role": {
                  "created_at": "2021-08-17T13:28:57.801578Z",
                  "description": "The person currently coordinating the incident",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                  "name": "Incident Lead",
                  "required": true,
                  "role_type": "lead",
                  "shortform": "lead",
                  "updated_at": "2021-08-17T13:28:57.801578Z"
                }
              }
            ],
            "incident_status": {
              "category": "triage",
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
              "id": "01FCNDV6P870EA6S7TK1DSYD5H",
              "name": "Closed",
              "rank": 4,
              "updated_at": "2021-08-17T13:28:57.801578Z"
            },
            "incident_timestamp_values": [
              {
                "incident_timestamp": {
                  "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                  "name": "Impact started",
                  "rank": 1
                },
                "value": {
                  "value": "2021-08-17T13:28:57.801578Z"
                }
              }
            ],
            "incident_type": {
              "create_in_triage": "always",
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Customer facing production outages",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "is_default": false,
              "name": "Production Outage",
              "private_incidents_only": false,
              "updated_at": "2021-08-17T13:28:57.801578Z"
            },
            "mode": "standard",
            "name": "Our database is sad",
            "permalink": "https://app.incident.io/incidents/123",
            "postmortem_document_url": "https://docs.google.com/my_doc_id",
            "reference": "INC-123",
            "severity": {
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Issues with **low impact**.",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Minor",
              "rank": 1,
              "updated_at": "2021-08-17T13:28:57.801578Z"
            },
            "slack_channel_id": "C02AW36C1M5",
            "slack_channel_name": "inc-165-green-parrot",
            "slack_team_id": "T02A1FSLE8J",
            "summary": "Our database is really really sad, and we don't know why yet.",
            "updated_at": "2021-08-17T13:28:57.801578Z",
            "visibility": "public",
            "workload_minutes_late": 40.7,
            "workload_minutes_sleeping": 0,
            "workload_minutes_total": 60.7,
            "workload_minutes_working": 20
          }
        },
        "properties": {
          "event_type": {
            "description": "What type of event is this webhook for?",
            "enum": [
              "public_incident.incident_created_v2",
              "private_incident.incident_created_v2",
              "public_incident.incident_updated_v2",
              "private_incident.incident_updated_v2",
              "public_incident.follow_up_created_v1",
              "private_incident.follow_up_created_v1",
              "public_incident.follow_up_updated_v1",
              "private_incident.follow_up_updated_v1",
              "public_incident.action_created_v1",
              "private_incident.action_created_v1",
              "public_incident.action_updated_v1",
              "private_incident.action_updated_v1"
            ],
            "example": "public_incident.incident_created_v2",
            "type": "string"
          },
          "public_incident.incident_created_v2": {
            "$ref": "#/components/schemas/IncidentV2ResponseBody"
          }
        },
        "required": [
          "event_type",
          "public_incident.incident_created_v2"
        ],
        "title": "WebhooksPublicIncidentIncidentCreatedV2ResponseBody",
        "type": "object"
      },
      "WebhooksPublicIncidentIncidentUpdatedV2ResponseBody": {
        "example": {
          "event_type": "public_incident.incident_updated_v2",
          "public_incident.incident_updated_v2": {
            "call_url": "https://zoom.us/foo",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "creator": {
              "api_key": {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "My test API key"
              },
              "user": {
                "email": "lisa@incident.io",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Lisa Karlin Curtis",
                "role": "viewer",
                "slack_user_id": "U02AYNF2XJM"
              }
            },
            "custom_field_entries": [
              {
                "custom_field": {
                  "description": "Which team is impacted by this issue",
                  "field_type": "single_select",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Affected Team",
                  "options": [
                    {
                      "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "sort_key": 10,
                      "value": "Product"
                    }
                  ]
                },
                "values": [
                  {
                    "value_catalog_entry": {
                      "aliases": [
                        "lawrence@incident.io",
                        "lawrence"
                      ],
                      "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Primary On-call"
                    },
                    "value_link": "https://google.com/",
                    "value_numeric": "123.456",
                    "value_option": {
                      "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "sort_key": 10,
                      "value": "Product"
                    },
                    "value_text": "This is my text field, I hope you like it"
                  }
                ]
              }
            ],
            "external_issue_reference": {
              "issue_name": "INC-123",
              "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
              "provider": "asana"
            },
            "id": "01FDAG4SAP5TYPT98WGR2N7W91",
            "incident_role_assignments": [
              {
                "assignee": {
                  "email": "lisa@incident.io",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Lisa Karlin Curtis",
                  "role": "viewer",
                  "slack_user_id": "U02AYNF2XJM"
                },
                "role": {
                  "created_at": "2021-08-17T13:28:57.801578Z",
                  "description": "The person currently coordinating the incident",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                  "name": "Incident Lead",
                  "required": true,
                  "role_type": "lead",
                  "shortform": "lead",
                  "updated_at": "2021-08-17T13:28:57.801578Z"
                }
              }
            ],
            "incident_status": {
              "category": "triage",
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
              "id": "01FCNDV6P870EA6S7TK1DSYD5H",
              "name": "Closed",
              "rank": 4,
              "updated_at": "2021-08-17T13:28:57.801578Z"
            },
            "incident_timestamp_values": [
              {
                "incident_timestamp": {
                  "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                  "name": "Impact started",
                  "rank": 1
                },
                "value": {
                  "value": "2021-08-17T13:28:57.801578Z"
                }
              }
            ],
            "incident_type": {
              "create_in_triage": "always",
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Customer facing production outages",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "is_default": false,
              "name": "Production Outage",
              "private_incidents_only": false,
              "updated_at": "2021-08-17T13:28:57.801578Z"
            },
            "mode": "standard",
            "name": "Our database is sad",
            "permalink": "https://app.incident.io/incidents/123",
            "postmortem_document_url": "https://docs.google.com/my_doc_id",
            "reference": "INC-123",
            "severity": {
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Issues with **low impact**.",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Minor",
              "rank": 1,
              "updated_at": "2021-08-17T13:28:57.801578Z"
            },
            "slack_channel_id": "C02AW36C1M5",
            "slack_channel_name": "inc-165-green-parrot",
            "slack_team_id": "T02A1FSLE8J",
            "summary": "Our database is really really sad, and we don't know why yet.",
            "updated_at": "2021-08-17T13:28:57.801578Z",
            "visibility": "public",
            "workload_minutes_late": 40.7,
            "workload_minutes_sleeping": 0,
            "workload_minutes_total": 60.7,
            "workload_minutes_working": 20
          }
        },
        "properties": {
          "event_type": {
            "description": "What type of event is this webhook for?",
            "enum": [
              "public_incident.incident_created_v2",
              "private_incident.incident_created_v2",
              "public_incident.incident_updated_v2",
              "private_incident.incident_updated_v2",
              "public_incident.follow_up_created_v1",
              "private_incident.follow_up_created_v1",
              "public_incident.follow_up_updated_v1",
              "private_incident.follow_up_updated_v1",
              "public_incident.action_created_v1",
              "private_incident.action_created_v1",
              "public_incident.action_updated_v1",
              "private_incident.action_updated_v1"
            ],
            "example": "public_incident.incident_updated_v2",
            "type": "string"
          },
          "public_incident.incident_updated_v2": {
            "$ref": "#/components/schemas/IncidentV2ResponseBody"
          }
        },
        "required": [
          "event_type",
          "public_incident.incident_updated_v2"
        ],
        "title": "WebhooksPublicIncidentIncidentUpdatedV2ResponseBody",
        "type": "object"
      },
      "webhook_private_resourceV2ResponseBody": {
        "example": {
          "id": "abc123"
        },
        "properties": {
          "id": {
            "description": "The ID of the resource",
            "example": "abc123",
            "type": "string"
          }
        },
        "required": [
          "id"
        ],
        "title": "webhook_private_resourceV2ResponseBody",
        "type": "object"
      }
    }
  },
  "info": {
    "description": "This is the API reference for incident.io.\n\nIt documents available API endpoints, provides examples of how to use it, and\ninstructions around things like authentication and error handling.\n\nThe API is hosted at:\n\n- https://api.incident.io/\n\nAnd you will need to create an API key via your [incident.io\ndashboard](https://app.incident.io/settings/api-keys) to make requests.\n\n# Making requests\n\nHere are the key concepts required to make requests to the incident.io API.\n\n## Authentication\n\nFor all requests made to the incident.io API, you'll need an API key.\n\nTo create an API key, head to the incident dashboard and visit [API\nkeys](https://app.incident.io/settings/api-keys). When you create the key,\nyou'll be able to choose what actions it can take for your account: choose\ncarefully, as those roles can only be set when you first create the key. We'll\nonly show you the token once, so make sure you store it somewhere safe.\n\nOnce you have the key, you should make requests to the API that set the\n`Authorization` request header using a \"Bearer\" authentication scheme:\n\n```\nAuthorization: Bearer <YOUR_API_KEY>\n```\n\n## Errors\n\nWe use standard HTTP response codes to indicate the status or failure of API\nrequests.\n\nThe API response body will be JSON, and contain more detailed information on the\nnature of the error.\n\nAn example error when a request is made without an API key:\n\n```json\n{\n  \"type\": \"authentication_error\",\n  \"status\": 401,\n  \"request_id\": \"8e3cc412-b49d-4957-9073-2c19d2c61804\",\n  \"errors\": [\n    {\n      \"code\": \"missing_authorization_material\",\n      \"message\": \"No authorization material provided in request\"\n    }\n  ]\n}\n```\n\nNote that the error:\n\n- Contains the HTTP status (`401`)\n- References the type of error (`authentication_error`)\n- Includes a `request_id` that can be provided to incident.io support to help\n\tdebug questions with your API request\n- Provides a list of individual errors, which go into detail about why the error\n\toccurred\n\nThe most common error will be a 422 Validation Error, which is returned when the\nrequest was rejected due to failing validations.\n\nThese errors look like this:\n\n```json\n{\n  \"type\": \"validation_error\",\n  \"status\": 422,\n  \"request_id\": \"631766c4-4afd-4803-997c-cd700928fa4b\",\n  \"errors\": [\n    {\n      \"code\": \"is_required\",\n      \"message\": \"A severity is required to open an incident\",\n      \"source\": {\n        \"field\": \"severity_id\"\n      }\n    }\n  ]\n}\n```\n\nThis error is caused by not providing a severity identifier, which should be at\nthe `severity_id` field of the request payload. Errors like these can be mapped to\nforms, should you be integrating with the API from a user-interface.\n\n## Compatibility\n\nWe won't make breaking changes to existing API services or endpoints, but will\nexpect integrators to upgrade themselves to the latest API endpoints within 3\nmonths of us deprecating the old service.\n\nWe will make changes that are considered backwards compatible, which include:\n\n- Adding new API endpoints and services\n- Adding new properties to responses from existing API endpoints\n- Reordering properties returned from existing API endpoints\n- Adding optional request parameters to existing API endpoints\n- Altering the format or length of IDs\n- Adding new values to enums\n\nIt is important that clients are robust to these changes, to ensure reliable\nintegrations.\n\nAs an example, if you are generating a client using an openapi-generator, ensure\nthe generated client is configured to support unknown enum values, often\nconfigured via the `enumUnknownDefaultCase` parameter.\n\nWhen breaking changes are unavoidable, we'll create a new service version on a\nseparate path, and run them in parallel.\n\nFor example:\n\n- https://api.incident.io/v1/incidents\n- https://api.incident.io/v2/incidents\n\nFor any questions, email support@incident.io.\n",
    "title": "incident.io",
    "version": "1.0.0"
  },
  "openapi": "3.0.1",
  "paths": {
    "/v1/actions": {
      "get": {
        "deprecated": true,
        "description": "List all actions for an organisation.",
        "operationId": "Actions V1#List",
        "parameters": [
          {
            "description": "Find actions related to this incident",
            "in": "query",
            "name": "incident_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter to actions marked as being follow up actions",
            "in": "query",
            "name": "is_follow_up",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Filter to actions from incidents of the given mode. If not set, only actions from `real` incidents are returned",
            "in": "query",
            "name": "incident_mode",
            "schema": {
              "enum": [
                "real",
                "test",
                "tutorial"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/ActionsV1ListResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionsV1ListResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ActionsV1ListResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "List Actions V1",
        "tags": [
          "Actions V1"
        ]
      }
    },
    "/v1/actions/{id}": {
      "get": {
        "deprecated": true,
        "description": "Get a single incident action.",
        "operationId": "Actions V1#Show",
        "parameters": [
          {
            "description": "Unique identifier for the action",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/ActionsV1ShowResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionsV1ShowResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ActionsV1ShowResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "Show Actions V1",
        "tags": [
          "Actions V1"
        ]
      }
    },
    "/v1/custom_field_options": {
      "get": {
        "description": "Show custom field options for a custom field",
        "operationId": "Custom Field Options V1#List",
        "parameters": [
          {
            "description": "number of records to return",
            "in": "query",
            "name": "page_size",
            "schema": {
              "default": 25,
              "type": "integer"
            }
          },
          {
            "description": "A custom field option's ID. This endpoint will return a list of custom field options created after this option.",
            "in": "query",
            "name": "after",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The custom field to list options for.",
            "in": "query",
            "name": "custom_field_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldOptionsV1ListResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldOptionsV1ListResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldOptionsV1ListResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "List Custom Field Options V1",
        "tags": [
          "Custom Field Options V1"
        ]
      },
      "post": {
        "description": "Create a custom field option. If the sort key is not supplied, it'll default to 1000, so the option appears near the end of the list.",
        "operationId": "Custom Field Options V1#Create",
        "requestBody": {
          "content": {
            "application/gob": {
              "schema": {
                "$ref": "#/components/schemas/CustomFieldOptionsV1CreateRequestBody"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomFieldOptionsV1CreateRequestBody"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/CustomFieldOptionsV1CreateRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldOptionsV1CreateResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldOptionsV1CreateResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldOptionsV1CreateResponseBody"
                }
              }
            },
            "description": "Created response."
          }
        },
        "summary": "Create Custom Field Options V1",
        "tags": [
          "Custom Field Options V1"
        ],
        "x-codegen-request-body-name": "CreateRequestBody"
      }
    },
    "/v1/custom_field_options/{id}": {
      "delete": {
        "description": "Delete a custom field option",
        "operationId": "Custom Field Options V1#Delete",
        "parameters": [
          {
            "description": "Unique identifier for the custom field option",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content response."
          }
        },
        "summary": "Delete Custom Field Options V1",
        "tags": [
          "Custom Field Options V1"
        ]
      },
      "get": {
        "description": "Get a single custom field option",
        "operationId": "Custom Field Options V1#Show",
        "parameters": [
          {
            "description": "Unique identifier for the custom field option",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldOptionsV1ShowResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldOptionsV1ShowResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldOptionsV1ShowResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "Show Custom Field Options V1",
        "tags": [
          "Custom Field Options V1"
        ]
      },
      "put": {
        "description": "Update a custom field option",
        "operationId": "Custom Field Options V1#Update",
        "parameters": [
          {
            "description": "Unique identifier for the custom field option",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/gob": {
              "schema": {
                "$ref": "#/components/schemas/CustomFieldOptionsV1UpdateRequestBody"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomFieldOptionsV1UpdateRequestBody"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/CustomFieldOptionsV1UpdateRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldOptionsV1UpdateResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldOptionsV1UpdateResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldOptionsV1UpdateResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "Update Custom Field Options V1",
        "tags": [
          "Custom Field Options V1"
        ],
        "x-codegen-request-body-name": "UpdateRequestBody"
      }
    },
    "/v1/custom_fields": {
      "get": {
        "description": "List all custom fields for an organisation.",
        "operationId": "Custom Fields V1#List",
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldsV1ListResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldsV1ListResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldsV1ListResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "List Custom Fields V1",
        "tags": [
          "Custom Fields V1"
        ]
      },
      "post": {
        "description": "Create a new custom field",
        "operationId": "Custom Fields V1#Create",
        "requestBody": {
          "content": {
            "application/gob": {
              "schema": {
                "$ref": "#/components/schemas/CustomFieldsV1CreateRequestBody"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomFieldsV1CreateRequestBody"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/CustomFieldsV1CreateRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldsV1CreateResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldsV1CreateResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldsV1CreateResponseBody"
                }
              }
            },
            "description": "Created response."
          }
        },
        "summary": "Create Custom Fields V1",
        "tags": [
          "Custom Fields V1"
        ],
        "x-codegen-request-body-name": "CreateRequestBody"
      }
    },
    "/v1/custom_fields/{id}": {
      "delete": {
        "description": "Delete a custom field",
        "operationId": "Custom Fields V1#Delete",
        "parameters": [
          {
            "description": "Unique identifier for the custom field",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content response."
          }
        },
        "summary": "Delete Custom Fields V1",
        "tags": [
          "Custom Fields V1"
        ]
      },
      "get": {
        "description": "Get a single custom field.",
        "operationId": "Custom Fields V1#Show",
        "parameters": [
          {
            "description": "Unique identifier for the custom field",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldsV1ShowResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldsV1ShowResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldsV1ShowResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "Show Custom Fields V1",
        "tags": [
          "Custom Fields V1"
        ]
      },
      "put": {
        "description": "Update the details of a custom field",
        "operationId": "Custom Fields V1#Update",
        "parameters": [
          {
            "description": "Unique identifier for the custom field",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/gob": {
              "schema": {
                "$ref": "#/components/schemas/CustomFieldsV1UpdateRequestBody"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomFieldsV1UpdateRequestBody"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/CustomFieldsV1UpdateRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldsV1UpdateResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldsV1UpdateResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldsV1UpdateResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "Update Custom Fields V1",
        "tags": [
          "Custom Fields V1"
        ],
        "x-codegen-request-body-name": "UpdateRequestBody"
      }
    },
    "/v1/identity": {
      "get": {
        "description": "Test if your API key is valid, and which roles it has.",
        "operationId": "Utilities V1#Identity",
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/UtilitiesV1IdentityResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UtilitiesV1IdentityResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UtilitiesV1IdentityResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "Identity Utilities V1",
        "tags": [
          "Utilities V1"
        ]
      }
    },
    "/v1/incident_attachments": {
      "get": {
        "description": "List all incident attachements for a given external resource or incident. You must provide either a specific incident ID or a specific external resource type and external ID.",
        "operationId": "Incident Attachments V1#List",
        "parameters": [
          {
            "description": "Incident that this attachment is against",
            "in": "query",
            "name": "incident_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "ID of the resource in the external system",
            "in": "query",
            "name": "external_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "E.g. PagerDuty: the external system that holds the resource",
            "in": "query",
            "name": "resource_type",
            "schema": {
              "enum": [
                "pager_duty_incident",
                "opsgenie_alert",
                "datadog_monitor_alert",
                "github_pull_request",
                "sentry_issue",
                "atlassian_statuspage_incident",
                "zendesk_ticket",
                "google_calendar_event",
                "statuspage_incident"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentAttachmentsV1ListResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentAttachmentsV1ListResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentAttachmentsV1ListResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "List Incident Attachments V1",
        "tags": [
          "Incident Attachments V1"
        ]
      },
      "post": {
        "description": "Attaches an external resource to an incident",
        "operationId": "Incident Attachments V1#Create",
        "requestBody": {
          "content": {
            "application/gob": {
              "schema": {
                "$ref": "#/components/schemas/IncidentAttachmentsV1CreateRequestBody"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IncidentAttachmentsV1CreateRequestBody"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/IncidentAttachmentsV1CreateRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentAttachmentsV1CreateResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentAttachmentsV1CreateResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentAttachmentsV1CreateResponseBody"
                }
              }
            },
            "description": "Created response."
          }
        },
        "summary": "Create Incident Attachments V1",
        "tags": [
          "Incident Attachments V1"
        ],
        "x-codegen-request-body-name": "CreateRequestBody"
      }
    },
    "/v1/incident_attachments/{id}": {
      "delete": {
        "description": "Unattaches an external resouce from an incident",
        "operationId": "Incident Attachments V1#Delete",
        "parameters": [
          {
            "description": "Unique identifier of this incident membership",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content response."
          }
        },
        "summary": "Delete Incident Attachments V1",
        "tags": [
          "Incident Attachments V1"
        ]
      }
    },
    "/v1/incident_roles": {
      "get": {
        "description": "List all incident roles for an organisation.",
        "operationId": "Incident Roles V1#List",
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentRolesV1ListResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentRolesV1ListResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentRolesV1ListResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "List Incident Roles V1",
        "tags": [
          "Incident Roles V1"
        ]
      },
      "post": {
        "description": "Create a new incident role",
        "operationId": "Incident Roles V1#Create",
        "requestBody": {
          "content": {
            "application/gob": {
              "schema": {
                "$ref": "#/components/schemas/IncidentRolesV1CreateRequestBody"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IncidentRolesV1CreateRequestBody"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/IncidentRolesV1CreateRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentRolesV1CreateResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentRolesV1CreateResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentRolesV1CreateResponseBody"
                }
              }
            },
            "description": "Created response."
          }
        },
        "summary": "Create Incident Roles V1",
        "tags": [
          "Incident Roles V1"
        ],
        "x-codegen-request-body-name": "CreateRequestBody"
      }
    },
    "/v1/incident_roles/{id}": {
      "delete": {
        "description": "Removes an existing role",
        "operationId": "Incident Roles V1#Delete",
        "parameters": [
          {
            "description": "Unique identifier for the role",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content response."
          }
        },
        "summary": "Delete Incident Roles V1",
        "tags": [
          "Incident Roles V1"
        ]
      },
      "get": {
        "description": "Get a single incident role.",
        "operationId": "Incident Roles V1#Show",
        "parameters": [
          {
            "description": "Unique identifier for the role",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentRolesV1ShowResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentRolesV1ShowResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentRolesV1ShowResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "Show Incident Roles V1",
        "tags": [
          "Incident Roles V1"
        ]
      },
      "put": {
        "description": "Update an existing incident role",
        "operationId": "Incident Roles V1#Update",
        "parameters": [
          {
            "description": "Unique identifier for the role",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/gob": {
              "schema": {
                "$ref": "#/components/schemas/IncidentRolesV1UpdateRequestBody"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IncidentRolesV1UpdateRequestBody"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/IncidentRolesV1UpdateRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentRolesV1UpdateResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentRolesV1UpdateResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentRolesV1UpdateResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "Update Incident Roles V1",
        "tags": [
          "Incident Roles V1"
        ],
        "x-codegen-request-body-name": "UpdateRequestBody"
      }
    },
    "/v1/incident_statuses": {
      "get": {
        "description": "List all incident statuses for an organisation.",
        "operationId": "Incident Statuses V1#List",
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentStatusesV1ListResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentStatusesV1ListResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentStatusesV1ListResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "List Incident Statuses V1",
        "tags": [
          "Incident Statuses V1"
        ]
      },
      "post": {
        "description": "Create a new incident status",
        "operationId": "Incident Statuses V1#Create",
        "requestBody": {
          "content": {
            "application/gob": {
              "schema": {
                "$ref": "#/components/schemas/IncidentStatusesV1CreateRequestBody"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IncidentStatusesV1CreateRequestBody"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/IncidentStatusesV1CreateRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentStatusesV1CreateResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentStatusesV1CreateResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentStatusesV1CreateResponseBody"
                }
              }
            },
            "description": "Created response."
          }
        },
        "summary": "Create Incident Statuses V1",
        "tags": [
          "Incident Statuses V1"
        ],
        "x-codegen-request-body-name": "CreateRequestBody"
      }
    },
    "/v1/incident_statuses/{id}": {
      "delete": {
        "description": "Delete an incident status",
        "operationId": "Incident Statuses V1#Delete",
        "parameters": [
          {
            "description": "Unique ID of this incident status",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "content": {},
            "description": "Accepted response."
          }
        },
        "summary": "Delete Incident Statuses V1",
        "tags": [
          "Incident Statuses V1"
        ]
      },
      "get": {
        "description": "Get a single incident status.",
        "operationId": "Incident Statuses V1#Show",
        "parameters": [
          {
            "description": "Unique ID of this incident status",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentStatusesV1ShowResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentStatusesV1ShowResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentStatusesV1ShowResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "Show Incident Statuses V1",
        "tags": [
          "Incident Statuses V1"
        ]
      },
      "put": {
        "description": "Update an existing incident status",
        "operationId": "Incident Statuses V1#Update",
        "parameters": [
          {
            "description": "Unique ID of this incident status",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/gob": {
              "schema": {
                "$ref": "#/components/schemas/IncidentStatusesV1UpdateRequestBody"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IncidentStatusesV1UpdateRequestBody"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/IncidentStatusesV1UpdateRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentStatusesV1UpdateResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentStatusesV1UpdateResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentStatusesV1UpdateResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "Update Incident Statuses V1",
        "tags": [
          "Incident Statuses V1"
        ],
        "x-codegen-request-body-name": "UpdateRequestBody"
      }
    },
    "/v1/incident_types": {
      "get": {
        "description": "List all incident types for an organisation.",
        "operationId": "Incident Types V1#List",
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentTypesV1ListResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentTypesV1ListResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentTypesV1ListResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "List Incident Types V1",
        "tags": [
          "Incident Types V1"
        ]
      }
    },
    "/v1/incident_types/{id}": {
      "get": {
        "description": "Get a single incident type.",
        "operationId": "Incident Types V1#Show",
        "parameters": [
          {
            "description": "Unique identifier for this Incident Type",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentTypesV1ShowResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentTypesV1ShowResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentTypesV1ShowResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "Show Incident Types V1",
        "tags": [
          "Incident Types V1"
        ]
      }
    },
    "/v1/incidents": {
      "get": {
        "deprecated": true,
        "description": "List all incidents for an organisation.",
        "operationId": "Incidents V1#List",
        "parameters": [
          {
            "description": "Integer number of records to return",
            "in": "query",
            "name": "page_size",
            "schema": {
              "default": 25,
              "maximum": 500,
              "type": "integer"
            }
          },
          {
            "description": "An record's ID. This endpoint will return a list of records after this ID in relation to the API response order.",
            "in": "query",
            "name": "after",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter for incidents in these statuses",
            "explode": true,
            "in": "query",
            "name": "status",
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentsV1ListResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentsV1ListResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentsV1ListResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "List Incidents V1",
        "tags": [
          "Incidents V1"
        ]
      },
      "post": {
        "deprecated": true,
        "description": "Create a new incident.",
        "operationId": "Incidents V1#Create",
        "requestBody": {
          "content": {
            "application/gob": {
              "schema": {
                "$ref": "#/components/schemas/IncidentsV1CreateRequestBody"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IncidentsV1CreateRequestBody"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/IncidentsV1CreateRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentsV1CreateResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentsV1CreateResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentsV1CreateResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "Create Incidents V1",
        "tags": [
          "Incidents V1"
        ],
        "x-codegen-request-body-name": "CreateRequestBody"
      }
    },
    "/v1/incidents/{id}": {
      "get": {
        "deprecated": true,
        "description": "Get a single incident.",
        "operationId": "Incidents V1#Show",
        "parameters": [
          {
            "description": "Unique identifier for the incident",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentsV1ShowResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentsV1ShowResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentsV1ShowResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "Show Incidents V1",
        "tags": [
          "Incidents V1"
        ]
      }
    },
    "/v1/openapi.json": {
      "get": {
        "description": "Get the OpenAPI (v2) definition.",
        "operationId": "Utilities V1#OpenAPI",
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "format": "binary",
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "format": "binary",
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "format": "binary",
                  "type": "string"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "OpenAPI Utilities V1",
        "tags": [
          "Utilities V1"
        ]
      }
    },
    "/v1/severities": {
      "get": {
        "description": "List all incident severities for an organisation.",
        "operationId": "Severities V1#List",
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/SeveritiesV1ListResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SeveritiesV1ListResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SeveritiesV1ListResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "List Severities V1",
        "tags": [
          "Severities V1"
        ]
      },
      "post": {
        "description": "Create a new severity",
        "operationId": "Severities V1#Create",
        "requestBody": {
          "content": {
            "application/gob": {
              "schema": {
                "$ref": "#/components/schemas/SeveritiesV1CreateRequestBody"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SeveritiesV1CreateRequestBody"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/SeveritiesV1CreateRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/SeveritiesV1CreateResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SeveritiesV1CreateResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SeveritiesV1CreateResponseBody"
                }
              }
            },
            "description": "Created response."
          }
        },
        "summary": "Create Severities V1",
        "tags": [
          "Severities V1"
        ],
        "x-codegen-request-body-name": "CreateRequestBody"
      }
    },
    "/v1/severities/{id}": {
      "delete": {
        "description": "Delete a severity",
        "operationId": "Severities V1#Delete",
        "parameters": [
          {
            "description": "Unique identifier of the severity",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "content": {},
            "description": "Accepted response."
          }
        },
        "summary": "Delete Severities V1",
        "tags": [
          "Severities V1"
        ]
      },
      "get": {
        "description": "Get a single incident severity.",
        "operationId": "Severities V1#Show",
        "parameters": [
          {
            "description": "Unique identifier of the severity",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/SeveritiesV1ShowResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SeveritiesV1ShowResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SeveritiesV1ShowResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "Show Severities V1",
        "tags": [
          "Severities V1"
        ]
      },
      "put": {
        "description": "Update an existing severity",
        "operationId": "Severities V1#Update",
        "parameters": [
          {
            "description": "Unique identifier of the severity",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/gob": {
              "schema": {
                "$ref": "#/components/schemas/SeveritiesV1UpdateRequestBody"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SeveritiesV1UpdateRequestBody"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/SeveritiesV1UpdateRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/SeveritiesV1UpdateResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SeveritiesV1UpdateResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SeveritiesV1UpdateResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "Update Severities V1",
        "tags": [
          "Severities V1"
        ],
        "x-codegen-request-body-name": "UpdateRequestBody"
      }
    },
    "/v2/actions": {
      "get": {
        "description": "List all actions for an organisation.",
        "operationId": "Actions V2#List",
        "parameters": [
          {
            "description": "Find actions related to this incident",
            "in": "query",
            "name": "incident_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter to actions from incidents of the given mode. If not set, only actions from `standard` and `retrospective` incidents are returned",
            "in": "query",
            "name": "incident_mode",
            "schema": {
              "enum": [
                "standard",
                "retrospective",
                "test",
                "tutorial"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/ActionsV2ListResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionsV2ListResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ActionsV2ListResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "List Actions V2",
        "tags": [
          "Actions V2"
        ]
      }
    },
    "/v2/actions/{id}": {
      "get": {
        "description": "Get a single incident action.",
        "operationId": "Actions V2#Show",
        "parameters": [
          {
            "description": "Unique identifier for the action",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/ActionsV2ShowResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionsV2ShowResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ActionsV2ShowResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "Show Actions V2",
        "tags": [
          "Actions V2"
        ]
      }
    },
    "/v2/catalog_entries": {
      "get": {
        "description": "List entries for a catalog type.",
        "operationId": "Catalog V2#ListEntries",
        "parameters": [
          {
            "description": "ID of this catalog type",
            "in": "query",
            "name": "catalog_type_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Integer number of records to return",
            "in": "query",
            "name": "page_size",
            "schema": {
              "default": 25,
              "maximum": 500,
              "type": "integer"
            }
          },
          {
            "description": "An record's ID. This endpoint will return a list of records after this ID in relation to the API response order.",
            "in": "query",
            "name": "after",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogV2ListEntriesResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogV2ListEntriesResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogV2ListEntriesResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "ListEntries Catalog V2",
        "tags": [
          "Catalog V2"
        ]
      },
      "post": {
        "description": "Create an entry within the catalog. We support a maximum of 50,000 entries per type.",
        "operationId": "Catalog V2#CreateEntry",
        "requestBody": {
          "content": {
            "application/gob": {
              "schema": {
                "$ref": "#/components/schemas/CatalogV2CreateEntryRequestBody"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogV2CreateEntryRequestBody"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/CatalogV2CreateEntryRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogV2CreateEntryResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogV2CreateEntryResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogV2CreateEntryResponseBody"
                }
              }
            },
            "description": "Created response."
          }
        },
        "summary": "CreateEntry Catalog V2",
        "tags": [
          "Catalog V2"
        ],
        "x-codegen-request-body-name": "CreateEntryRequestBody"
      }
    },
    "/v2/catalog_entries/{id}": {
      "delete": {
        "description": "Archives a catalog entry.",
        "operationId": "Catalog V2#DestroyEntry",
        "parameters": [
          {
            "description": "ID of this catalog entry",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content response."
          }
        },
        "summary": "DestroyEntry Catalog V2",
        "tags": [
          "Catalog V2"
        ]
      },
      "get": {
        "description": "Show a single catalog entry.",
        "operationId": "Catalog V2#ShowEntry",
        "parameters": [
          {
            "description": "ID of this catalog entry",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogV2ShowEntryResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogV2ShowEntryResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogV2ShowEntryResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "ShowEntry Catalog V2",
        "tags": [
          "Catalog V2"
        ]
      },
      "put": {
        "description": "Updates an existing catalog entry.",
        "operationId": "Catalog V2#UpdateEntry",
        "parameters": [
          {
            "description": "ID of this catalog entry",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/gob": {
              "schema": {
                "$ref": "#/components/schemas/CatalogV2UpdateEntryRequestBody"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogV2UpdateEntryRequestBody"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/CatalogV2UpdateEntryRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogV2UpdateEntryResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogV2UpdateEntryResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogV2UpdateEntryResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "UpdateEntry Catalog V2",
        "tags": [
          "Catalog V2"
        ],
        "x-codegen-request-body-name": "UpdateEntryRequestBody"
      }
    },
    "/v2/catalog_resources": {
      "get": {
        "description": "List available engine resources for the catalog",
        "operationId": "Catalog V2#ListResources",
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogV2ListResourcesResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogV2ListResourcesResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogV2ListResourcesResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "ListResources Catalog V2",
        "tags": [
          "Catalog V2"
        ]
      }
    },
    "/v2/catalog_types": {
      "get": {
        "description": "List all catalog types for an organisation, including those synced from external resources.",
        "operationId": "Catalog V2#ListTypes",
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogV2ListTypesResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogV2ListTypesResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogV2ListTypesResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "ListTypes Catalog V2",
        "tags": [
          "Catalog V2"
        ]
      },
      "post": {
        "description": "Create a catalog type.",
        "operationId": "Catalog V2#CreateType",
        "requestBody": {
          "content": {
            "application/gob": {
              "schema": {
                "$ref": "#/components/schemas/CatalogV2CreateTypeRequestBody"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogV2CreateTypeRequestBody"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/CatalogV2CreateTypeRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogV2CreateTypeResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogV2CreateTypeResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogV2CreateTypeResponseBody"
                }
              }
            },
            "description": "Created response."
          }
        },
        "summary": "CreateType Catalog V2",
        "tags": [
          "Catalog V2"
        ],
        "x-codegen-request-body-name": "CreateTypeRequestBody"
      }
    },
    "/v2/catalog_types/{id}": {
      "delete": {
        "description": "Archives a catalog type and associated entries.",
        "operationId": "Catalog V2#DestroyType",
        "parameters": [
          {
            "description": "ID of this catalog type",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "No Content response."
          }
        },
        "summary": "DestroyType Catalog V2",
        "tags": [
          "Catalog V2"
        ]
      },
      "get": {
        "description": "Show a single catalog type.",
        "operationId": "Catalog V2#ShowType",
        "parameters": [
          {
            "description": "ID of this catalog type",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogV2ShowTypeResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogV2ShowTypeResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogV2ShowTypeResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "ShowType Catalog V2",
        "tags": [
          "Catalog V2"
        ]
      },
      "put": {
        "description": "Updates an existing catalog type.",
        "operationId": "Catalog V2#UpdateType",
        "parameters": [
          {
            "description": "ID of this catalog type",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/gob": {
              "schema": {
                "$ref": "#/components/schemas/CatalogV2UpdateTypeRequestBody"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogV2UpdateTypeRequestBody"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/CatalogV2UpdateTypeRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogV2UpdateTypeResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogV2UpdateTypeResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogV2UpdateTypeResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "UpdateType Catalog V2",
        "tags": [
          "Catalog V2"
        ],
        "x-codegen-request-body-name": "UpdateTypeRequestBody"
      }
    },
    "/v2/catalog_types/{id}/actions/update_schema": {
      "post": {
        "description": "Update an existing catalog types schema, adding or removing attributes.",
        "operationId": "Catalog V2#UpdateTypeSchema",
        "parameters": [
          {
            "description": "ID of this catalog type",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/gob": {
              "schema": {
                "$ref": "#/components/schemas/CatalogV2UpdateTypeSchemaRequestBody"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogV2UpdateTypeSchemaRequestBody"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/CatalogV2UpdateTypeSchemaRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogV2UpdateTypeSchemaResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogV2UpdateTypeSchemaResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogV2UpdateTypeSchemaResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "UpdateTypeSchema Catalog V2",
        "tags": [
          "Catalog V2"
        ],
        "x-codegen-request-body-name": "UpdateTypeSchemaRequestBody"
      }
    },
    "/v2/follow_ups": {
      "get": {
        "description": "List all follow-ups for an organisation.",
        "operationId": "Follow-ups V2#List",
        "parameters": [
          {
            "description": "Find follow-ups related to this incident",
            "in": "query",
            "name": "incident_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter to follow-ups from incidents of the given mode. If not set, only follow-ups from `standard` and `retrospective` incidents are returned",
            "in": "query",
            "name": "incident_mode",
            "schema": {
              "enum": [
                "standard",
                "retrospective",
                "test",
                "tutorial"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/FollowUpsV2ListResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FollowUpsV2ListResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/FollowUpsV2ListResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "List Follow-ups V2",
        "tags": [
          "Follow-ups V2"
        ]
      }
    },
    "/v2/follow_ups/{id}": {
      "get": {
        "description": "Get a single incident follow-up.",
        "operationId": "Follow-ups V2#Show",
        "parameters": [
          {
            "description": "Unique identifier for the follow-up",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/FollowUpsV2ShowResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FollowUpsV2ShowResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/FollowUpsV2ShowResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "Show Follow-ups V2",
        "tags": [
          "Follow-ups V2"
        ]
      }
    },
    "/v2/incident_timestamps": {
      "get": {
        "description": "List all incident timestamps for an organisation.",
        "operationId": "Incident Timestamps V2#List",
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentTimestampsV2ListResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentTimestampsV2ListResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentTimestampsV2ListResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "List Incident Timestamps V2",
        "tags": [
          "Incident Timestamps V2"
        ]
      }
    },
    "/v2/incident_timestamps/{id}": {
      "get": {
        "description": "Get a single incident timestamp.",
        "operationId": "Incident Timestamps V2#Show",
        "parameters": [
          {
            "description": "Unique ID of this incident timestamp",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentTimestampsV2ShowResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentTimestampsV2ShowResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentTimestampsV2ShowResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "Show Incident Timestamps V2",
        "tags": [
          "Incident Timestamps V2"
        ]
      }
    },
    "/v2/incident_updates": {
      "get": {
        "description": "List all incident updates for an organisation, or for a specific incident.",
        "operationId": "Incident Updates V2#List",
        "parameters": [
          {
            "description": "Incident whose updates you want to list",
            "in": "query",
            "name": "incident_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Integer number of records to return",
            "in": "query",
            "name": "page_size",
            "schema": {
              "default": 25,
              "maximum": 500,
              "type": "integer"
            }
          },
          {
            "description": "An record's ID. This endpoint will return a list of records after this ID in relation to the API response order.",
            "in": "query",
            "name": "after",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentUpdatesV2ListResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentUpdatesV2ListResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentUpdatesV2ListResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "List Incident Updates V2",
        "tags": [
          "Incident Updates V2"
        ]
      }
    },
    "/v2/incidents": {
      "get": {
        "description": "List all incidents for an organisation.\n\nThis endpoint supports a number of filters, which can help find incidents matching certain\ncriteria.\n\nFilters are provided as query parameters, but due to the dynamic nature of what you can\nquery by (different accounts have different custom fields, statuses, etc) they are more\ncomplex than most.\n\nTo help, here are some exemplar curl requests with a human description of what they search\nfor.\n\nNote that:\n- Filters may be used together, and the result will be incidents that match all filters.\n- IDs are normally in UUID format, but have been replaced with shorter strings to improve\nreadability.\n- All query parameters must be URI encoded.\n\n### By status\n\nWith status of id=ABC, find all incidents that are set to that status:\n\n\t\tcurl --get 'https://api.incident.io/v2/incidents' \\\n\t\t\t--data 'status[one_of]=ABC'\n\nOr all incidents that are not set to status with id=ABC:\n\n\t\tcurl --get 'https://api.incident.io/v2/incidents' \\\n\t\t\t--data 'status[not_in]=ABC'\n\n### By severity\n\nWith severity of id=ABC, find all incidents that are set to that severity:\n\n\t\tcurl --get 'https://api.incident.io/v2/incidents' \\\n\t\t\t--data 'severity[one_of]=ABC'\n\nOr all incidents where severity rank is greater-than-or-equal-to the rank of severity\nid=ABC:\n\n\t\tcurl --get 'https://api.incident.io/v2/incidents' \\\n\t\t\t--data 'severity[gte]=ABC'\n\nOr all incidents where severity rank is less-than-or-equal-to the rank of severity id=ABC:\n\n\t\tcurl --get 'https://api.incident.io/v2/incidents' \\\n\t\t\t--data 'severity[lte]=ABC'\n\n### By incident type\n\nWith incident type of id=ABC, find all incidents that are of that type:\n\n\t\tcurl --get 'https://api.incident.io/v2/incidents' \\\n\t\t\t--data 'incident_type[one_of]=ABC'\n\nOr all incidents not of that type:\n\n\t\tcurl --get 'https://api.incident.io/v2/incidents' \\\n\t\t\t--data 'incident_type[not_in]=ABC'\n\n### By incident role\n\nRoles and custom fields have another nested layer in the query parameter, to account for\noperations against any of the roles or custom fields created in the account.\n\nWith incident role id=ABC, find all incidents where that role is unset:\n\n\t\tcurl --get 'https://api.incident.io/v2/incidents' \\\n\t\t\t--data 'incident_role[ABC][is_blank]=true'\n\nOr where the role has been set:\n\n\t\tcurl --get 'https://api.incident.io/v2/incidents' \\\n\t\t\t--data 'incident_role[ABC][is_blank]=false'\n\n### By option custom fields\n\nWith an option custom field id=ABC, all incidents that have field ABC set to the custom\nfield option of id=XYZ:\n\n\t\tcurl \\\n\t\t\t--get 'https://api.incident.io/v2/incidents' \\\n\t\t\t--data 'custom_field[ABC][one_of]=XYZ'\n\nOr all incidents that do not have custom field id=ABC set to option id=XYZ:\n\n\t\tcurl \\\n\t\t\t--get 'https://api.incident.io/v2/incidents' \\\n\t\t\t--data 'custom_field[ABC][not_in]=XYZ'\n",
        "operationId": "Incidents V2#List",
        "parameters": [
          {
            "description": "number of records to return",
            "in": "query",
            "name": "page_size",
            "schema": {
              "default": 25,
              "type": "integer"
            }
          },
          {
            "description": "An incident's ID. This endpoint will return a list of incidents after this ID in relation to the API response order.",
            "in": "query",
            "name": "after",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter on incident status. The accepted operators are 'one_of', or 'not_in'.",
            "in": "query",
            "name": "status",
            "schema": {}
          },
          {
            "description": "Filter on incident severity. The accepted operators are 'one_of', 'not_in', 'gte', 'lte'.",
            "in": "query",
            "name": "severity",
            "schema": {}
          },
          {
            "description": "Filter on incident type. The accepted operator is 'one_of'.",
            "in": "query",
            "name": "incident_type",
            "schema": {}
          },
          {
            "description": "Filter on an incident role. Role ID should be sent, followed by the operator and values. The accepted operators are 'one_of', 'is_blank'.",
            "in": "query",
            "name": "incident_role",
            "schema": {}
          },
          {
            "description": "Filter on an incident custom field. Custom field ID should be sent, followed by the operator and values. Accepted operator will depend on the custom field type.",
            "in": "query",
            "name": "custom_field",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentsV2ListResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentsV2ListResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentsV2ListResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "List Incidents V2",
        "tags": [
          "Incidents V2"
        ]
      },
      "post": {
        "description": "Create a new incident.\n\nNote that if the incident mode is set to \"retrospective\" then the new incident\nwill not be announced in Slack.\n",
        "operationId": "Incidents V2#Create",
        "requestBody": {
          "content": {
            "application/gob": {
              "schema": {
                "$ref": "#/components/schemas/IncidentsV2CreateRequestBody"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IncidentsV2CreateRequestBody"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/IncidentsV2CreateRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentsV2CreateResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentsV2CreateResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentsV2CreateResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "Create Incidents V2",
        "tags": [
          "Incidents V2"
        ],
        "x-codegen-request-body-name": "CreateRequestBody"
      }
    },
    "/v2/incidents/{id}": {
      "get": {
        "description": "Get a single incident.",
        "operationId": "Incidents V2#Show",
        "parameters": [
          {
            "description": "Unique identifier for the incident",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentsV2ShowResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentsV2ShowResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentsV2ShowResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "Show Incidents V2",
        "tags": [
          "Incidents V2"
        ]
      }
    },
    "/v2/incidents/{id}/actions/edit": {
      "post": {
        "description": "Edit an existing incident.\n\nThis endpoint allows you to edit the properties of an existing incident: e.g. set the severity or update custom fields.\n\nWhen using this endpoint, only fields that are provided will be edited (omitted fields \nwill be ignored).\n",
        "operationId": "Incidents V2#Edit",
        "parameters": [
          {
            "description": "The unique identifier of the incident that you want to edit",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/gob": {
              "schema": {
                "$ref": "#/components/schemas/IncidentsV2EditRequestBody"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IncidentsV2EditRequestBody"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/IncidentsV2EditRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentsV2EditResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentsV2EditResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentsV2EditResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "Edit Incidents V2",
        "tags": [
          "Incidents V2"
        ],
        "x-codegen-request-body-name": "EditRequestBody"
      }
    },
    "/v2/users": {
      "get": {
        "description": "List users for an organisation.",
        "operationId": "Users V2#List",
        "parameters": [
          {
            "description": "Integer number of records to return",
            "in": "query",
            "name": "page_size",
            "schema": {
              "default": 25,
              "maximum": 500,
              "type": "integer"
            }
          },
          {
            "description": "An record's ID. This endpoint will return a list of records after this ID in relation to the API response order.",
            "in": "query",
            "name": "after",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/UsersV2ListResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersV2ListResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UsersV2ListResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "List Users V2",
        "tags": [
          "Users V2"
        ]
      }
    },
    "/v2/users/{id}": {
      "get": {
        "description": "Get a single user.",
        "operationId": "Users V2#Show",
        "parameters": [
          {
            "description": "Unique identifier of the user",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/UsersV2ShowResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersV2ShowResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UsersV2ShowResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "Show Users V2",
        "tags": [
          "Users V2"
        ]
      }
    },
    "/x-audit-logs/announcement_rule.created.1": {
      "get": {
        "description": "This entry is created whenever a announcement rule is created",
        "operationId": "Audit logs#AnnouncementRuleCreatedV1",
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsAnnouncementRuleCreatedV1ResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsAnnouncementRuleCreatedV1ResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsAnnouncementRuleCreatedV1ResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "AnnouncementRuleCreatedV1 Audit logs",
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/announcement_rule.deleted.1": {
      "get": {
        "description": "This entry is created whenever a announcement rule is deleted",
        "operationId": "Audit logs#AnnouncementRuleDeletedV1",
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsAnnouncementRuleDeletedV1ResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsAnnouncementRuleDeletedV1ResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsAnnouncementRuleDeletedV1ResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "AnnouncementRuleDeletedV1 Audit logs",
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/announcement_rule.updated.1": {
      "get": {
        "description": "This entry is created whenever a announcement rule is updated",
        "operationId": "Audit logs#AnnouncementRuleUpdatedV1",
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsAnnouncementRuleUpdatedV1ResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsAnnouncementRuleUpdatedV1ResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsAnnouncementRuleUpdatedV1ResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "AnnouncementRuleUpdatedV1 Audit logs",
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/api_key.created.1": {
      "get": {
        "description": "This entry is created whenever a api key is created",
        "operationId": "Audit logs#ApiKeyCreatedV1",
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsAPIKeyCreatedV1ResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsAPIKeyCreatedV1ResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsAPIKeyCreatedV1ResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "ApiKeyCreatedV1 Audit logs",
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/api_key.deleted.1": {
      "get": {
        "description": "This entry is created whenever a api key is deleted",
        "operationId": "Audit logs#ApiKeyDeletedV1",
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsAPIKeyDeletedV1ResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsAPIKeyDeletedV1ResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsAPIKeyDeletedV1ResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "ApiKeyDeletedV1 Audit logs",
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/catalog_type.created.1": {
      "get": {
        "description": "This entry is created whenever a catalog type is created",
        "operationId": "Audit logs#CatalogTypeCreatedV1",
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsCatalogTypeCreatedV1ResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsCatalogTypeCreatedV1ResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsCatalogTypeCreatedV1ResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "CatalogTypeCreatedV1 Audit logs",
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/catalog_type.deleted.1": {
      "get": {
        "description": "This entry is created whenever a catalog type is deleted",
        "operationId": "Audit logs#CatalogTypeDeletedV1",
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsCatalogTypeDeletedV1ResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsCatalogTypeDeletedV1ResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsCatalogTypeDeletedV1ResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "CatalogTypeDeletedV1 Audit logs",
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/catalog_type.updated.1": {
      "get": {
        "description": "This entry is created whenever a catalog type is updated",
        "operationId": "Audit logs#CatalogTypeUpdatedV1",
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsCatalogTypeUpdatedV1ResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsCatalogTypeUpdatedV1ResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsCatalogTypeUpdatedV1ResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "CatalogTypeUpdatedV1 Audit logs",
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/custom_field.created.1": {
      "get": {
        "description": "This entry is created whenever a custom field is created",
        "operationId": "Audit logs#CustomFieldCreatedV1",
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsCustomFieldCreatedV1ResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsCustomFieldCreatedV1ResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsCustomFieldCreatedV1ResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "CustomFieldCreatedV1 Audit logs",
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/custom_field.deleted.1": {
      "get": {
        "description": "This entry is created whenever a custom field is deleted",
        "operationId": "Audit logs#CustomFieldDeletedV1",
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsCustomFieldDeletedV1ResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsCustomFieldDeletedV1ResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsCustomFieldDeletedV1ResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "CustomFieldDeletedV1 Audit logs",
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/custom_field.updated.1": {
      "get": {
        "description": "This entry is created whenever a custom field is updated",
        "operationId": "Audit logs#CustomFieldUpdatedV1",
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsCustomFieldUpdatedV1ResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsCustomFieldUpdatedV1ResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsCustomFieldUpdatedV1ResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "CustomFieldUpdatedV1 Audit logs",
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/follow_up_priority.created.1": {
      "get": {
        "description": "This entry is created whenever a follow up priority is created",
        "operationId": "Audit logs#FollowUpPriorityCreatedV1",
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsFollowUpPriorityCreatedV1ResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsFollowUpPriorityCreatedV1ResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsFollowUpPriorityCreatedV1ResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "FollowUpPriorityCreatedV1 Audit logs",
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/follow_up_priority.deleted.1": {
      "get": {
        "description": "This entry is created whenever a follow up priority is deleted",
        "operationId": "Audit logs#FollowUpPriorityDeletedV1",
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsFollowUpPriorityDeletedV1ResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsFollowUpPriorityDeletedV1ResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsFollowUpPriorityDeletedV1ResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "FollowUpPriorityDeletedV1 Audit logs",
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/follow_up_priority.updated.1": {
      "get": {
        "description": "This entry is created whenever a follow up priority is updated",
        "operationId": "Audit logs#FollowUpPriorityUpdatedV1",
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsFollowUpPriorityUpdatedV1ResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsFollowUpPriorityUpdatedV1ResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsFollowUpPriorityUpdatedV1ResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "FollowUpPriorityUpdatedV1 Audit logs",
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/incident_duration_metric.created.1": {
      "get": {
        "description": "This entry is created whenever a incident duration metric is created",
        "operationId": "Audit logs#IncidentDurationMetricCreatedV1",
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsIncidentDurationMetricCreatedV1ResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsIncidentDurationMetricCreatedV1ResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsIncidentDurationMetricCreatedV1ResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "IncidentDurationMetricCreatedV1 Audit logs",
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/incident_duration_metric.deleted.1": {
      "get": {
        "description": "This entry is created whenever a incident duration metric is deleted",
        "operationId": "Audit logs#IncidentDurationMetricDeletedV1",
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsIncidentDurationMetricDeletedV1ResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsIncidentDurationMetricDeletedV1ResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsIncidentDurationMetricDeletedV1ResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "IncidentDurationMetricDeletedV1 Audit logs",
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/incident_duration_metric.updated.1": {
      "get": {
        "description": "This entry is created whenever a incident duration metric is updated",
        "operationId": "Audit logs#IncidentDurationMetricUpdatedV1",
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsIncidentDurationMetricUpdatedV1ResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsIncidentDurationMetricUpdatedV1ResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsIncidentDurationMetricUpdatedV1ResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "IncidentDurationMetricUpdatedV1 Audit logs",
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/incident_role.created.1": {
      "get": {
        "description": "This entry is created whenever a incident role is created",
        "operationId": "Audit logs#IncidentRoleCreatedV1",
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsIncidentRoleCreatedV1ResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsIncidentRoleCreatedV1ResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsIncidentRoleCreatedV1ResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "IncidentRoleCreatedV1 Audit logs",
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/incident_role.deleted.1": {
      "get": {
        "description": "This entry is created whenever a incident role is deleted",
        "operationId": "Audit logs#IncidentRoleDeletedV1",
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsIncidentRoleDeletedV1ResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsIncidentRoleDeletedV1ResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsIncidentRoleDeletedV1ResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "IncidentRoleDeletedV1 Audit logs",
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/incident_role.updated.1": {
      "get": {
        "description": "This entry is created whenever a incident role is updated",
        "operationId": "Audit logs#IncidentRoleUpdatedV1",
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsIncidentRoleUpdatedV1ResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsIncidentRoleUpdatedV1ResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsIncidentRoleUpdatedV1ResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "IncidentRoleUpdatedV1 Audit logs",
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/incident_status.created.1": {
      "get": {
        "description": "This entry is created whenever a incident status is created",
        "operationId": "Audit logs#IncidentStatusCreatedV1",
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsIncidentStatusCreatedV1ResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsIncidentStatusCreatedV1ResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsIncidentStatusCreatedV1ResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "IncidentStatusCreatedV1 Audit logs",
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/incident_status.deleted.1": {
      "get": {
        "description": "This entry is created whenever a incident status is deleted",
        "operationId": "Audit logs#IncidentStatusDeletedV1",
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsIncidentStatusDeletedV1ResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsIncidentStatusDeletedV1ResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsIncidentStatusDeletedV1ResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "IncidentStatusDeletedV1 Audit logs",
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/incident_status.updated.1": {
      "get": {
        "description": "This entry is created whenever a incident status is updated",
        "operationId": "Audit logs#IncidentStatusUpdatedV1",
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsIncidentStatusUpdatedV1ResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsIncidentStatusUpdatedV1ResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsIncidentStatusUpdatedV1ResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "IncidentStatusUpdatedV1 Audit logs",
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/incident_timestamp.created.1": {
      "get": {
        "description": "This entry is created whenever a incident timestamp is created",
        "operationId": "Audit logs#IncidentTimestampCreatedV1",
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsIncidentTimestampCreatedV1ResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsIncidentTimestampCreatedV1ResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsIncidentTimestampCreatedV1ResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "IncidentTimestampCreatedV1 Audit logs",
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/incident_timestamp.deleted.1": {
      "get": {
        "description": "This entry is created whenever a incident timestamp is deleted",
        "operationId": "Audit logs#IncidentTimestampDeletedV1",
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsIncidentTimestampDeletedV1ResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsIncidentTimestampDeletedV1ResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsIncidentTimestampDeletedV1ResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "IncidentTimestampDeletedV1 Audit logs",
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/incident_timestamp.updated.1": {
      "get": {
        "description": "This entry is created whenever a incident timestamp is updated",
        "operationId": "Audit logs#IncidentTimestampUpdatedV1",
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsIncidentTimestampUpdatedV1ResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsIncidentTimestampUpdatedV1ResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsIncidentTimestampUpdatedV1ResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "IncidentTimestampUpdatedV1 Audit logs",
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/incident_type.created.1": {
      "get": {
        "description": "This entry is created whenever a incident type is created",
        "operationId": "Audit logs#IncidentTypeCreatedV1",
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsIncidentTypeCreatedV1ResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsIncidentTypeCreatedV1ResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsIncidentTypeCreatedV1ResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "IncidentTypeCreatedV1 Audit logs",
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/incident_type.deleted.1": {
      "get": {
        "description": "This entry is created whenever a incident type is deleted",
        "operationId": "Audit logs#IncidentTypeDeletedV1",
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsIncidentTypeDeletedV1ResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsIncidentTypeDeletedV1ResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsIncidentTypeDeletedV1ResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "IncidentTypeDeletedV1 Audit logs",
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/incident_type.updated.1": {
      "get": {
        "description": "This entry is created whenever a incident type is updated",
        "operationId": "Audit logs#IncidentTypeUpdatedV1",
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsIncidentTypeUpdatedV1ResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsIncidentTypeUpdatedV1ResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsIncidentTypeUpdatedV1ResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "IncidentTypeUpdatedV1 Audit logs",
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/integration.installed.1": {
      "get": {
        "description": "This entry is created whenever an integration is installed",
        "operationId": "Audit logs#IntegrationInstalledV1",
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsIntegrationInstalledV1ResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsIntegrationInstalledV1ResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsIntegrationInstalledV1ResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "IntegrationInstalledV1 Audit logs",
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/integration.uninstalled.1": {
      "get": {
        "description": "This entry is created whenever an integration is uninstalled",
        "operationId": "Audit logs#IntegrationUninstalledV1",
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsIntegrationUninstalledV1ResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsIntegrationUninstalledV1ResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsIntegrationUninstalledV1ResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "IntegrationUninstalledV1 Audit logs",
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/internal_status_page.created.1": {
      "get": {
        "description": "This entry is created whenever an internal status page is created",
        "operationId": "Audit logs#InternalStatusPageCreatedV1",
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsInternalStatusPageCreatedV1ResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsInternalStatusPageCreatedV1ResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsInternalStatusPageCreatedV1ResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "InternalStatusPageCreatedV1 Audit logs",
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/internal_status_page.deleted.1": {
      "get": {
        "description": "This entry is created whenever an internal status page is deleted",
        "operationId": "Audit logs#InternalStatusPageDeletedV1",
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsInternalStatusPageDeletedV1ResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsInternalStatusPageDeletedV1ResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsInternalStatusPageDeletedV1ResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "InternalStatusPageDeletedV1 Audit logs",
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/internal_status_page.updated.1": {
      "get": {
        "description": "This entry is created whenever an internal status page has its configuration updated",
        "operationId": "Audit logs#InternalStatusPageUpdatedV1",
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsInternalStatusPageUpdatedV1ResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsInternalStatusPageUpdatedV1ResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsInternalStatusPageUpdatedV1ResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "InternalStatusPageUpdatedV1 Audit logs",
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/learning_task.created.1": {
      "get": {
        "description": "This entry is created whenever a learning task is created",
        "operationId": "Audit logs#LearningTaskCreatedV1",
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsLearningTaskCreatedV1ResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsLearningTaskCreatedV1ResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsLearningTaskCreatedV1ResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "LearningTaskCreatedV1 Audit logs",
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/learning_task.deleted.1": {
      "get": {
        "description": "This entry is created whenever a learning task is deleted",
        "operationId": "Audit logs#LearningTaskDeletedV1",
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsLearningTaskDeletedV1ResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsLearningTaskDeletedV1ResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsLearningTaskDeletedV1ResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "LearningTaskDeletedV1 Audit logs",
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/learning_task.updated.1": {
      "get": {
        "description": "This entry is created whenever a learning task is updated",
        "operationId": "Audit logs#LearningTaskUpdatedV1",
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsLearningTaskUpdatedV1ResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsLearningTaskUpdatedV1ResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsLearningTaskUpdatedV1ResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "LearningTaskUpdatedV1 Audit logs",
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/policy.created.1": {
      "get": {
        "description": "This entry is created whenever a policy is created",
        "operationId": "Audit logs#PolicyCreatedV1",
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsPolicyCreatedV1ResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsPolicyCreatedV1ResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsPolicyCreatedV1ResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "PolicyCreatedV1 Audit logs",
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/policy.deleted.1": {
      "get": {
        "description": "This entry is created whenever a policy is deleted",
        "operationId": "Audit logs#PolicyDeletedV1",
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsPolicyDeletedV1ResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsPolicyDeletedV1ResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsPolicyDeletedV1ResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "PolicyDeletedV1 Audit logs",
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/policy.updated.1": {
      "get": {
        "description": "This entry is created whenever a policy is updated",
        "operationId": "Audit logs#PolicyUpdatedV1",
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsPolicyUpdatedV1ResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsPolicyUpdatedV1ResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsPolicyUpdatedV1ResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "PolicyUpdatedV1 Audit logs",
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/private_incident.access_attempted.1": {
      "get": {
        "description": "This entry is created whenever someone attempts to access a private incident.",
        "operationId": "Audit logs#PrivateIncidentAccessAttemptedV1",
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsPrivateIncidentAccessAttemptedV1ResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsPrivateIncidentAccessAttemptedV1ResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsPrivateIncidentAccessAttemptedV1ResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "PrivateIncidentAccessAttemptedV1 Audit logs",
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/private_incident.access_requested.1": {
      "get": {
        "description": "This entry is created whenever someone requests access to a private incident.",
        "operationId": "Audit logs#PrivateIncidentAccessRequestedV1",
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsPrivateIncidentAccessRequestedV1ResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsPrivateIncidentAccessRequestedV1ResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsPrivateIncidentAccessRequestedV1ResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "PrivateIncidentAccessRequestedV1 Audit logs",
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/private_incident_membership.granted.1": {
      "get": {
        "description": "This entry is created whenever someone is granted access to a private incident. If they have the 'manage private incidents' permission, then it'll appear that the system has given them access to the incident.",
        "operationId": "Audit logs#PrivateIncidentMembershipGrantedV1",
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsPrivateIncidentMembershipGrantedV1ResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsPrivateIncidentMembershipGrantedV1ResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsPrivateIncidentMembershipGrantedV1ResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "PrivateIncidentMembershipGrantedV1 Audit logs",
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/private_incident_membership.revoked.1": {
      "get": {
        "description": "This entry is created whenever someone's access to a private incident is revoked.",
        "operationId": "Audit logs#PrivateIncidentMembershipRevokedV1",
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsPrivateIncidentMembershipRevokedV1ResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsPrivateIncidentMembershipRevokedV1ResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsPrivateIncidentMembershipRevokedV1ResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "PrivateIncidentMembershipRevokedV1 Audit logs",
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/rbac_role.created.1": {
      "get": {
        "description": "This entry is created whenever a rbac role is created",
        "operationId": "Audit logs#RbacRoleCreatedV1",
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsRbacRoleCreatedV1ResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsRbacRoleCreatedV1ResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsRbacRoleCreatedV1ResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "RbacRoleCreatedV1 Audit logs",
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/rbac_role.deleted.1": {
      "get": {
        "description": "This entry is created whenever a rbac role is deleted",
        "operationId": "Audit logs#RbacRoleDeletedV1",
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsRbacRoleDeletedV1ResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsRbacRoleDeletedV1ResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsRbacRoleDeletedV1ResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "RbacRoleDeletedV1 Audit logs",
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/rbac_role.updated.1": {
      "get": {
        "description": "This entry is created whenever a rbac role is updated",
        "operationId": "Audit logs#RbacRoleUpdatedV1",
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsRbacRoleUpdatedV1ResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsRbacRoleUpdatedV1ResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsRbacRoleUpdatedV1ResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "RbacRoleUpdatedV1 Audit logs",
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/scim_group.role_mappings_updated.1": {
      "get": {
        "description": "This entry is created whenever a SCIM group is mapped to a new RBAC role",
        "operationId": "Audit logs#ScimGroupRoleMappingsUpdatedV1",
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsScimGroupRoleMappingsUpdatedV1ResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsScimGroupRoleMappingsUpdatedV1ResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsScimGroupRoleMappingsUpdatedV1ResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "ScimGroupRoleMappingsUpdatedV1 Audit logs",
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/severity.created.1": {
      "get": {
        "description": "This entry is created whenever a severity is created",
        "operationId": "Audit logs#SeverityCreatedV1",
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsSeverityCreatedV1ResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsSeverityCreatedV1ResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsSeverityCreatedV1ResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "SeverityCreatedV1 Audit logs",
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/severity.deleted.1": {
      "get": {
        "description": "This entry is created whenever a severity is deleted",
        "operationId": "Audit logs#SeverityDeletedV1",
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsSeverityDeletedV1ResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsSeverityDeletedV1ResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsSeverityDeletedV1ResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "SeverityDeletedV1 Audit logs",
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/severity.updated.1": {
      "get": {
        "description": "This entry is created whenever a severity is updated",
        "operationId": "Audit logs#SeverityUpdatedV1",
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsSeverityUpdatedV1ResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsSeverityUpdatedV1ResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsSeverityUpdatedV1ResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "SeverityUpdatedV1 Audit logs",
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/status_page.created.1": {
      "get": {
        "description": "This entry is created whenever a status page is created",
        "operationId": "Audit logs#StatusPageCreatedV1",
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsStatusPageCreatedV1ResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsStatusPageCreatedV1ResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsStatusPageCreatedV1ResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "StatusPageCreatedV1 Audit logs",
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/status_page.deleted.1": {
      "get": {
        "description": "This entry is created whenever a status page is deleted",
        "operationId": "Audit logs#StatusPageDeletedV1",
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsStatusPageDeletedV1ResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsStatusPageDeletedV1ResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsStatusPageDeletedV1ResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "StatusPageDeletedV1 Audit logs",
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/status_page.updated.1": {
      "get": {
        "description": "This entry is created whenever a status page has its configuration updated",
        "operationId": "Audit logs#StatusPageUpdatedV1",
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsStatusPageUpdatedV1ResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsStatusPageUpdatedV1ResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsStatusPageUpdatedV1ResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "StatusPageUpdatedV1 Audit logs",
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/status_page_template.created.1": {
      "get": {
        "description": "This entry is created whenever a status page template is created",
        "operationId": "Audit logs#StatusPageTemplateCreatedV1",
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsStatusPageTemplateCreatedV1ResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsStatusPageTemplateCreatedV1ResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsStatusPageTemplateCreatedV1ResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "StatusPageTemplateCreatedV1 Audit logs",
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/status_page_template.deleted.1": {
      "get": {
        "description": "This entry is created whenever a status page template is deleted",
        "operationId": "Audit logs#StatusPageTemplateDeletedV1",
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsStatusPageTemplateDeletedV1ResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsStatusPageTemplateDeletedV1ResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsStatusPageTemplateDeletedV1ResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "StatusPageTemplateDeletedV1 Audit logs",
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/status_page_template.updated.1": {
      "get": {
        "description": "This entry is created whenever a status page template is updated",
        "operationId": "Audit logs#StatusPageTemplateUpdatedV1",
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsStatusPageTemplateUpdatedV1ResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsStatusPageTemplateUpdatedV1ResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsStatusPageTemplateUpdatedV1ResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "StatusPageTemplateUpdatedV1 Audit logs",
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/user.created.1": {
      "get": {
        "description": "This entry is created whenever a user is created",
        "operationId": "Audit logs#UserCreatedV1",
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsUserCreatedV1ResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsUserCreatedV1ResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsUserCreatedV1ResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "UserCreatedV1 Audit logs",
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/user.deactivated.1": {
      "get": {
        "description": "This entry is created whenever a user is deactivated",
        "operationId": "Audit logs#UserDeactivatedV1",
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsUserDeactivatedV1ResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsUserDeactivatedV1ResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsUserDeactivatedV1ResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "UserDeactivatedV1 Audit logs",
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/user.reinstated.1": {
      "get": {
        "description": "This entry is created when a user is reinstated after being deactivated",
        "operationId": "Audit logs#UserReinstatedV1",
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsUserReinstatedV1ResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsUserReinstatedV1ResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsUserReinstatedV1ResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "UserReinstatedV1 Audit logs",
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/user.role_memberships_updated.1": {
      "get": {
        "description": "This entry is created whenever a user's role memberships are changed.",
        "operationId": "Audit logs#UserRoleMembershipsUpdatedV1",
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsUserRoleMembershipsUpdatedV1ResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsUserRoleMembershipsUpdatedV1ResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsUserRoleMembershipsUpdatedV1ResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "UserRoleMembershipsUpdatedV1 Audit logs",
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/user.updated.1": {
      "get": {
        "description": "This entry is created whenever a user is updated",
        "operationId": "Audit logs#UserUpdatedV1",
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsUserUpdatedV1ResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsUserUpdatedV1ResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsUserUpdatedV1ResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "UserUpdatedV1 Audit logs",
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/workflow.created.1": {
      "get": {
        "description": "This entry is created whenever a workflow is created",
        "operationId": "Audit logs#WorkflowCreatedV1",
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsWorkflowCreatedV1ResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsWorkflowCreatedV1ResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsWorkflowCreatedV1ResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "WorkflowCreatedV1 Audit logs",
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/workflow.deleted.1": {
      "get": {
        "description": "This entry is created whenever a workflow is deleted",
        "operationId": "Audit logs#WorkflowDeletedV1",
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsWorkflowDeletedV1ResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsWorkflowDeletedV1ResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsWorkflowDeletedV1ResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "WorkflowDeletedV1 Audit logs",
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/workflow.updated.1": {
      "get": {
        "description": "This entry is created whenever a workflow is updated",
        "operationId": "Audit logs#WorkflowUpdatedV1",
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsWorkflowUpdatedV1ResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsWorkflowUpdatedV1ResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsWorkflowUpdatedV1ResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "WorkflowUpdatedV1 Audit logs",
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-webhooks/__all__": {
      "get": {
        "description": "Enables us to generate a type for all webhook types, so we can use a single serializer.",
        "operationId": "Webhooks#All",
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/WebhooksAllResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhooksAllResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/WebhooksAllResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "All Webhooks",
        "tags": [
          "Webhooks"
        ]
      }
    },
    "/x-webhooks/private_incident.action_created_v1": {
      "get": {
        "description": "This webhook is emitted whenever a follow-up for a private incident is created.",
        "operationId": "Webhooks#PrivateIncidentActionCreatedV1",
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/WebhooksPrivateIncidentActionCreatedV1ResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhooksPrivateIncidentActionCreatedV1ResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/WebhooksPrivateIncidentActionCreatedV1ResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "PrivateIncidentActionCreatedV1 Webhooks",
        "tags": [
          "Webhooks"
        ]
      }
    },
    "/x-webhooks/private_incident.action_updated_v1": {
      "get": {
        "description": "This webhook is emitted whenever a follow-up for a private incident is updated.",
        "operationId": "Webhooks#PrivateIncidentActionUpdatedV1",
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/WebhooksPrivateIncidentActionUpdatedV1ResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhooksPrivateIncidentActionUpdatedV1ResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/WebhooksPrivateIncidentActionUpdatedV1ResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "PrivateIncidentActionUpdatedV1 Webhooks",
        "tags": [
          "Webhooks"
        ]
      }
    },
    "/x-webhooks/private_incident.follow_up_created_v1": {
      "get": {
        "description": "This webhook is emitted whenever a follow-up for a private incident is created.",
        "operationId": "Webhooks#PrivateIncidentFollowUpCreatedV1",
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/WebhooksPrivateIncidentFollowUpCreatedV1ResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhooksPrivateIncidentFollowUpCreatedV1ResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/WebhooksPrivateIncidentFollowUpCreatedV1ResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "PrivateIncidentFollowUpCreatedV1 Webhooks",
        "tags": [
          "Webhooks"
        ]
      }
    },
    "/x-webhooks/private_incident.follow_up_updated_v1": {
      "get": {
        "description": "This webhook is emitted whenever a follow-up for a private incident is updated.",
        "operationId": "Webhooks#PrivateIncidentFollowUpUpdatedV1",
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/WebhooksPrivateIncidentFollowUpUpdatedV1ResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhooksPrivateIncidentFollowUpUpdatedV1ResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/WebhooksPrivateIncidentFollowUpUpdatedV1ResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "PrivateIncidentFollowUpUpdatedV1 Webhooks",
        "tags": [
          "Webhooks"
        ]
      }
    },
    "/x-webhooks/private_incident.incident_created_v2": {
      "get": {
        "description": "This webhook is emitted whenever a new private incident is created.",
        "operationId": "Webhooks#PrivateIncidentIncidentCreatedV2",
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/WebhooksPrivateIncidentIncidentCreatedV2ResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhooksPrivateIncidentIncidentCreatedV2ResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/WebhooksPrivateIncidentIncidentCreatedV2ResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "PrivateIncidentIncidentCreatedV2 Webhooks",
        "tags": [
          "Webhooks"
        ]
      }
    },
    "/x-webhooks/private_incident.incident_updated_v2": {
      "get": {
        "description": "This webhook is emitted whenever a private incident is updated.",
        "operationId": "Webhooks#PrivateIncidentIncidentUpdatedV2",
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/WebhooksPrivateIncidentIncidentUpdatedV2ResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhooksPrivateIncidentIncidentUpdatedV2ResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/WebhooksPrivateIncidentIncidentUpdatedV2ResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "PrivateIncidentIncidentUpdatedV2 Webhooks",
        "tags": [
          "Webhooks"
        ]
      }
    },
    "/x-webhooks/public_incident.action_created_v1": {
      "get": {
        "description": "This webhook is emitted whenever a follow-up is created.",
        "operationId": "Webhooks#PublicIncidentActionCreatedV1",
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/WebhooksPublicIncidentActionCreatedV1ResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhooksPublicIncidentActionCreatedV1ResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/WebhooksPublicIncidentActionCreatedV1ResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "PublicIncidentActionCreatedV1 Webhooks",
        "tags": [
          "Webhooks"
        ]
      }
    },
    "/x-webhooks/public_incident.action_updated_v1": {
      "get": {
        "description": "This webhook is emitted whenever a follow-up is updated.",
        "operationId": "Webhooks#PublicIncidentActionUpdatedV1",
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/WebhooksPublicIncidentActionUpdatedV1ResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhooksPublicIncidentActionUpdatedV1ResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/WebhooksPublicIncidentActionUpdatedV1ResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "PublicIncidentActionUpdatedV1 Webhooks",
        "tags": [
          "Webhooks"
        ]
      }
    },
    "/x-webhooks/public_incident.follow_up_created_v1": {
      "get": {
        "description": "This webhook is emitted whenever a follow-up is created.",
        "operationId": "Webhooks#PublicIncidentFollowUpCreatedV1",
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/WebhooksPublicIncidentFollowUpCreatedV1ResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhooksPublicIncidentFollowUpCreatedV1ResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/WebhooksPublicIncidentFollowUpCreatedV1ResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "PublicIncidentFollowUpCreatedV1 Webhooks",
        "tags": [
          "Webhooks"
        ]
      }
    },
    "/x-webhooks/public_incident.follow_up_updated_v1": {
      "get": {
        "description": "This webhook is emitted whenever a follow-up is updated.",
        "operationId": "Webhooks#PublicIncidentFollowUpUpdatedV1",
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/WebhooksPublicIncidentFollowUpUpdatedV1ResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhooksPublicIncidentFollowUpUpdatedV1ResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/WebhooksPublicIncidentFollowUpUpdatedV1ResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "PublicIncidentFollowUpUpdatedV1 Webhooks",
        "tags": [
          "Webhooks"
        ]
      }
    },
    "/x-webhooks/public_incident.incident_created_v2": {
      "get": {
        "description": "This webhook is emitted whenever a new incident is created.",
        "operationId": "Webhooks#PublicIncidentIncidentCreatedV2",
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/WebhooksPublicIncidentIncidentCreatedV2ResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhooksPublicIncidentIncidentCreatedV2ResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/WebhooksPublicIncidentIncidentCreatedV2ResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "PublicIncidentIncidentCreatedV2 Webhooks",
        "tags": [
          "Webhooks"
        ]
      }
    },
    "/x-webhooks/public_incident.incident_updated_v2": {
      "get": {
        "description": "This webhook is emitted whenever an incident is updated.",
        "operationId": "Webhooks#PublicIncidentIncidentUpdatedV2",
        "responses": {
          "200": {
            "content": {
              "application/gob": {
                "schema": {
                  "$ref": "#/components/schemas/WebhooksPublicIncidentIncidentUpdatedV2ResponseBody"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhooksPublicIncidentIncidentUpdatedV2ResponseBody"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/WebhooksPublicIncidentIncidentUpdatedV2ResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "PublicIncidentIncidentUpdatedV2 Webhooks",
        "tags": [
          "Webhooks"
        ]
      }
    }
  },
  "servers": [
    {
      "url": "//api.incident.io/"
    }
  ],
  "tags": [
    {
      "description": "Manage incident actions.\n\nThese endpoints have been deprecated in favour of Actions V2 and Follow-ups V2, as these\nconcepts have become increasingly separate.\n\nIncidents have two types of actions associated to them:\n\n- Actions, used during an incident response as ephemeral todo lists\n- Follow-ups, actions which are for after the incident and can be exported to external\n\tissue trackers\n\nYou can manage actions in the incident Slack channel with <code>/incident actions</code>, or on\nthe incident homepage.\n\nExporting follow-ups to external issue trackers can be done in the incident homepage.\n",
      "name": "Actions V1"
    },
    {
      "description": "Manage incident actions.\n\nIncident actions are used during an incident, to track work such as 'restart the database' or 'contact the customer'.\n\nYou can manage actions in the incident Slack channel with <code>/incident actions</code>, or on\nthe incident homepage.\n",
      "name": "Actions V2"
    },
    {
      "description": "To give you visibility over the changes that are made within your incident.io account, we use an audit log. Our audit log is powered by <a href=\"https://workos.com\" target=\"_blank\">WorkOS</a>. The log is available for customers on our [Enterprise plan](https://incident.io/pricing).\n\nThe audit log contains information about any configuration changes, as well as changes to a user's permissions (e.g. being given a new role, or access to a private incident).\n\nEach entry will have an actor (the person or system that made the change) and one or more targets (a thing that was modified by this change). It will also include the Location and User Agent of the actor, where applicable.\n\nEach entry will conform to a schema, which is documented here. Each entry also has a version, so that if our schema changes over time you’ll still be able to parse old events.\n\nWe’ll retain these entries for one year.\n\nAudit log entries start from 18 April, 2023 (there are no entries available from before that date).\n\n## Viewing your audit log\n\nYou can view your audit log via our [security settings](https://app.incident.io/settings/security) page.\n\nFrom there, you'll be able to:\n\n- View the entries via a web interface (filterable by target, event type, actor and date)\n- Export the entries for a given time period to a CSV\n- Set up a log stream to a provider of your choice (e.g. Splunk or an Amazon S3 bucket)\n\n## Understanding actors\n\nEach entry will have an actor associated with it, which is one of 5 types:\n\n### Users\n\nThis is for changes triggered by the actions of a particular user in your account.\n\nAs an example:\n\n```\n\"actor\": {\n    \"type\": \"user\",\n    \"id\": \"01G0J1EXE7AXZ2C93K61WBPYEH\",\n    \"name\": \"Kelsey Mills\",\n    \"metadata\": {\n      \"user_base_role_slug\": \"admin\",\n      \"user_custom_role_slugs\": \"engineering,security\"\n    }\n  }\n```\n\n### API Keys\n\nThis is for changes triggered by an API key.\n\nAs an example:\n\n```\n\"actor\": {\n    \"type\": \"api_key\",\n    \"id\": \"01G0J1EXE7AXZ2C93K61WBPYEH\",\n    \"name\": \"Lisa's development key\",\n    \"metadata\": {\n      \"api_key_roles\": \"incident_creator,global_access\"\n    }\n  }\n```\n\n### Integrations\n\nThis is for changes triggered by a system. Sometimes that will be a third party system (e.g. a user might be created\nvia Slack) or sometimes it might be something triggered from inside incident.io (e.g. a severity created as part of setup).\n\nAs an example:\n\n```\n\"actor\": {\n    \"type\": \"system\",\n    \"id\": \"incident_setup\",\n    \"name\": \"incident.io (setup)\",\n    \"metadata\": {}\n  }\n```\n\n### Workflows\n\nThis is for changes triggered by a workflow: for example, a workflow that invites users to a private incident.\n\nAs an example:\n\n```\n\"actor\": {\n    \"type\": \"workflow\",\n    \"id\": \"01G0J1EXE7AXZ2C93K61WBPYEH\",\n    \"name\": \"Auto-invite security team to private incidents\",\n    \"metadata\": {}\n  }\n```\n\n### External resources\n\nThis is for changes triggered by a specific [external resource](https://api-docs.incident.io/tag/Incident-Attachments-V1) (also known as an attachment).\n\nAs an example:\n\n```\n\"actor\": {\n    \"type\": \"external_resource\",\n    \"id\": \"01G0J1EXE7AXZ2C93K61WBPYEH\",\n    \"name\": \"#1234 Increased API latency\",\n    \"metadata\": {\n      \"external_resource_type\": \"pager_duty_incident\",\n      \"external_resource_external_id\": \"q1234\"\n    }\n  }\n```\n",
      "name": "Audit logs"
    },
    {
      "description": "Manage and browse catalog resources.\n\nUse the incident.io catalog to track services, teams, product features and anything\nelse that helps build a map of your organisation.\n\nThe catalog has a number of types which are synced from your connected integrations, such\nas GitHub Repositories or PagerDuty Services, but you can also create custom types\nspecifically tailored to your company.\n\nExamples might be a Service type with an Alert channel which you can point at a Slack\nchannel, or Team which specifies its Manager and Technical Lead.\n",
      "name": "Catalog V2"
    },
    {
      "description": "Manage custom field options.\n\nSingle- and multi-select custom fields have a list of all available options,\nwhich have a value, and a sort key. The value must be unique to the custom\nfield. For example, you might have an Incident Type custom field, with options\n\"Data breach\", \"Performance degradation\", \"API downtime\", etc.",
      "name": "Custom Field Options V1"
    },
    {
      "description": "Manage custom fields.\n\nCustom fields are used to attach metadata to incidents, which you can use when searching\nfor incidents in the dashboard, triggering workflows, building announcement rules or for\nyour own data needs.\n\nEach field has a type:\n\n- Single-select, single value selected from a predefined list of options (ie. Incident Type)\n- Multi-select, as above but you can pick more than one option (ie. Teams)\n- Text, freeform text field (ie. Customer ID)\n- Link, link URL that is synced to Slack bookmarks on the incident channel (ie. External Status Page)\n- Number, integer or fractional numbers (ie. Customers Affected)\n\nWe may add more custom field types in the future - we'd love to hear any other types you'd like to use!\n",
      "name": "Custom Fields V1"
    },
    {
      "description": "Manage incident follow-ups.\n\nIncidents can have follow-ups associated with them, which track work that should be done\nafter an incident (e.g. improving some documentation, or upgrading a dependency). They can\nalso be exported to external issue trackers.\n\nYou can manage follow-ups in the incident Slack channel with <code>/incident follow-ups</code>, or on\nthe incident homepage.\n",
      "name": "Follow-ups V2"
    },
    {
      "description": "Create, list and delete incident attachments.\n\nIncident Attachments allows you to connect resources from external systems into incidents.\nExamples include: PagerDuty incidents and GitHub pull requests.\n",
      "name": "Incident Attachments V1"
    },
    {
      "description": "Manage incident roles.\n\nDuring an incident, you can assign responders to one of the incident roles that are\nconfigured in your organisation settings.\n\nEvery organisation will have a special 'lead' role, which signifies the incident lead or\ncommander. This role cannot be deleted, but can be renamed in the incident.io dashboard.\n",
      "name": "Incident Roles V1"
    },
    {
      "description": "Manage incident statuses.\n\nEach incident has a status, picked from one of the statuses configured in your\norganisations settings.\n\nStatuses help communicate where an incident is in its lifecycle. You can use\nstatuses when filtering incidents in the dashboard, and in workflows and announcement\nrules.\n",
      "name": "Incident Statuses V1"
    },
    {
      "description": "View incident timestamps.\n\nEach incident has a number of timestamps; some being defaults that we set on\neach incident for you, and other being configured for your organisation within\nsettings.\n\nTimestamps help to communicate when a given action was taken for a specific\nincident, for example when it was reported, closed or fixed.\n",
      "name": "Incident Timestamps V2"
    },
    {
      "description": "View incident types.\n\nWith incident types enabled, you can tailor your process to the situation you're\nresponding to with different custom fields and roles for each incident type.\n",
      "name": "Incident Types V1"
    },
    {
      "description": "List incident updates.\n\nIncident Updates allows you to see all the updates that have been shared against a\nparticular incident. This will include any time that the Severity or Status of\nan incident changed, alongside any additional updates that were provided.\n",
      "name": "Incident Updates V2"
    },
    {
      "description": "Create and read incidents.\n\nIncidents are a core resource, on which many other resources (actions, etc) are created.\n\nCare should be taken around these endpoints, as automation that creates duplicate\nincidents can be distracting, and impact reporting.\n",
      "name": "Incidents V1"
    },
    {
      "description": "Create and read incidents.\n\nIncidents are a core resource, on which many other resources (actions, etc) are created.\n\nCare should be taken around these endpoints, as automation that creates duplicate\nincidents can be distracting, and impact reporting.\n",
      "name": "Incidents V2"
    },
    {
      "description": "Manage incident severities.\n\nEach incident has a severity, picked from one of the severities configured in your\norganisations settings.\n\nSeverities help categorise incidents, and communicate urgency/impact. You can use\nseverities when filtering incidents in the dashboard, and in workflows and announcement\nrules.\n",
      "name": "Severities V1"
    },
    {
      "description": "View users.\n\nUsers all have a single base role, and can be assigned multiple custom roles. They can be managed via your Slack workspace or SAML provider.\n",
      "name": "Users V2"
    },
    {
      "description": "Miscelaneous utility endpoints.\n\nCollection of utility functions that can help build integrations against this API.\n",
      "name": "Utilities V1"
    },
    {
      "description": "Webhooks can be used to receive notifications when certain events occur in incident.io. This might be useful for annotating graphs in a monitoring tool with incidents, or keeping track of follow-ups in another system. Our webhooks are powered by <a href=\"https://svix.com\" target=\"_blank\">Svix</a>.\n\n## Getting started with webhooks\n\nTo start using webhooks, you’ll need to create a webhook endpoint. You can do this in the same way that you’d create any other endpoint in your application. If you’d like to play around with our webhooks, we’d recommend using <a href=\"https://www.svix.com/play/\" target=\"_blank\">Svix play</a> which allows you to set up an endpoint and inspect the payloads via their web interface. There are also other services (e.g. <a href=\"https://ngrok.com/\" target=\"_blank\">ngrok</a>) which have great debugging tools to help getting started with webhooks.\n\nOnce you have a webhook endpoint set up, you can head to <a href=\"https://app.incident.io/settings/webhooks\" target=\"_blank\">Settings > Webhooks</a> to configure your endpoint. In here you'll be able to choose which types of events you'd like to recieve, send test events, see recent event deliveries, and retry any failed events.\n\n## Status codes, errors and retries\n\nWhen processing webhooks, please return a 2xx status code (e.g. `200 OK` or `204 No Content`). If the endpoint returns a non-2xx status code, we’ll try to resend the event with a backoff over the next 24 hours. If attempts to a specific endpoint repeatedly fail over a 5 day period, we’ll mark the endpoint as disabled and notify you via email. If you do miss some messages (e.g. due to unexpected downtime), Svix offer a number of options for [replaying messages](https://docs.svix.com/receiving/using-app-portal/replaying-messages) which you can access via <a href=\"https://app.incident.io/settings/webhooks\" target=\"_blank\">Settings > Webhooks</a>.\n\n## Verifying webhooks\n\nIt’s important to know whether a webhook has come from incident.io, or a third party that might be trying to exploit a vulnerability. To avoid this, we send a `signature` in the header of our webhooks, which you can verify using the `Signing secret` from the webhook endpoint settings page. The webhooks we send will have three headers that you’ll want to look at:\n\n```json\n{\n  \"webhook-id\": \"123\",\n  \"webhook-timestamp\": 1676033031,\n  \"webhook-signature\": \"v1,g0hM9SsE+OTPJTGt/tmIKtSyZlE3uFJELVlNIOLJ1OE=\"\n}\n```\n\nThese are signed using a HMAC signature in the following format:\n\n```\n${webhook-id}.${webhook-timestamp}.${request_body}\n```\n\nYou can verify the signature either using the <a href=\"https://docs.svix.com/receiving/verifying-payloads/how\" target=\"_blank\">Svix client libraries</a>, or manually by following <a href=\"https://docs.svix.com/receiving/verifying-payloads/how-manual\" target=\"_blank\">these instructions</a>.\n\n## Keeping another system in-line with incident.io\n\nA common use-case for webhooks is to keep another system up-to-date with everything that’s happening in incident.io. As we deliver webhooks individually over HTTPS, we cannot guarantee that they’ll be delivered in the correct order. That means that, to keep the other system up-to-date, we’d recommend that you build an application which:\n\n- Receives a webhook about INC-123\n- Makes a request to our public API to get the latest state of INC-123\n- Save that state to your system\n\nThis means you aren’t relying on the order in which you receive webhooks to make sure your system remains up-to-date.\n\n## Webhooks on private incidents\n\nIn general, we try to send webhooks with all the relevant information in the payload (e.g. the name, summary, status etc.). However, private incidents are the exception. For private incidents, we only send the ID of the resource that’s been changed. If your integration needs to access the full data, you’ll need to <a href=\"https://help.incident.io/en/articles/6149651-our-api\" target=\"_blank\">create an API Key</a> that can view private incidents. You can then use that key to get the details about the specific incident or follow-up. This is to make sure we don’t leak information about private incidents to a system that shouldn’t have access to them.\n",
      "name": "Webhooks"
    }
  ]
}
